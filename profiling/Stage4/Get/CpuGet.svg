<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="965"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="965"> </text>
<g id="frames">
<g>
<title>all (463 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="13.0" y="942.0">all</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.22%)</title><rect x="10.0" y="915.0" width="2.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="926.0"></text>
</g>
<g>
<title>OptoRuntime::new_array_nozero_C(Klass*, int, JavaThread*) (1 samples, 0.22%)</title><rect x="10.0" y="899.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>OptoRuntime::is_deoptimized_caller_frame(JavaThread*) (1 samples, 0.22%)</title><rect x="10.0" y="883.0" width="2.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>JavaThread::pd_last_frame() (1 samples, 0.22%)</title><rect x="10.0" y="867.0" width="2.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>CodeCache::find_blob(void*) (1 samples, 0.22%)</title><rect x="10.0" y="851.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="10.0" y="835.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="13.0" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="10.0" y="819.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="13.0" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="10.0" y="803.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="13.0" y="814.0"></text>
</g>
<g>
<title>java/lang/Thread.run (404 samples, 87.26%)</title><rect x="12.5" y="915.0" width="1029.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="15.5" y="926.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (404 samples, 87.26%)</title><rect x="12.5" y="899.0" width="1029.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="15.5" y="910.0">java/util/concurrent/ThreadPoolExecutor$Worker.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (404 samples, 87.26%)</title><rect x="12.5" y="883.0" width="1029.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="15.5" y="894.0">java/util/concurrent/ThreadPoolExecutor.runWorker</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (40 samples, 8.64%)</title><rect x="12.5" y="867.0" width="102.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="15.5" y="878.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (39 samples, 8.42%)</title><rect x="15.1" y="851.0" width="99.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="18.1" y="862.0">java/util/co..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (28 samples, 6.05%)</title><rect x="15.1" y="835.0" width="71.4" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="18.1" y="846.0">java/uti..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (26 samples, 5.62%)</title><rect x="20.2" y="819.0" width="66.3" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="23.2" y="830.0">java/ut..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (25 samples, 5.40%)</title><rect x="20.2" y="803.0" width="63.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="23.2" y="814.0">jdk/int..</text>
</g>
<g>
<title>Unsafe_Park (4 samples, 0.86%)</title><rect x="20.2" y="787.0" width="10.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="23.2" y="798.0"></text>
</g>
<g>
<title>JavaThreadParkedState::JavaThreadParkedState(JavaThread*, bool) (1 samples, 0.22%)</title><rect x="22.7" y="771.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="25.7" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="22.7" y="755.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="25.7" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="22.7" y="739.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="25.7" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="22.7" y="723.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="25.7" y="734.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.22%)</title><rect x="25.3" y="771.0" width="2.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="28.3" y="782.0"></text>
</g>
<g>
<title>java_lang_Thread::set_thread_status(oopDesc*, java_lang_Thread::ThreadStatus) (1 samples, 0.22%)</title><rect x="27.8" y="771.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="30.8" y="782.0"></text>
</g>
<g>
<title>[unknown] (21 samples, 4.54%)</title><rect x="30.4" y="787.0" width="53.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="33.4" y="798.0">[unkn..</text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (21 samples, 4.54%)</title><rect x="30.4" y="771.0" width="53.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="33.4" y="782.0">pthre..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (19 samples, 4.10%)</title><rect x="30.4" y="755.0" width="48.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="33.4" y="766.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (19 samples, 4.10%)</title><rect x="30.4" y="739.0" width="48.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="33.4" y="750.0">do_s..</text>
</g>
<g>
<title>__x64_sys_futex (18 samples, 3.89%)</title><rect x="32.9" y="723.0" width="45.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="35.9" y="734.0">__x6..</text>
</g>
<g>
<title>do_futex (18 samples, 3.89%)</title><rect x="32.9" y="707.0" width="45.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="35.9" y="718.0">do_f..</text>
</g>
<g>
<title>futex_wait (18 samples, 3.89%)</title><rect x="32.9" y="691.0" width="45.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="35.9" y="702.0">fute..</text>
</g>
<g>
<title>futex_wait_queue_me (18 samples, 3.89%)</title><rect x="32.9" y="675.0" width="45.9" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="35.9" y="686.0">fute..</text>
</g>
<g>
<title>schedule (18 samples, 3.89%)</title><rect x="32.9" y="659.0" width="45.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="35.9" y="670.0">sche..</text>
</g>
<g>
<title>__sched_text_start (18 samples, 3.89%)</title><rect x="32.9" y="643.0" width="45.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="35.9" y="654.0">__sc..</text>
</g>
<g>
<title>finish_task_switch (18 samples, 3.89%)</title><rect x="32.9" y="627.0" width="45.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="35.9" y="638.0">fini..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.43%)</title><rect x="78.8" y="755.0" width="5.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="81.8" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.43%)</title><rect x="78.8" y="739.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="81.8" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.43%)</title><rect x="78.8" y="723.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="81.8" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.22%)</title><rect x="83.9" y="803.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="86.9" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="83.9" y="787.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="86.9" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="83.9" y="771.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="86.9" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="83.9" y="755.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="86.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (11 samples, 2.38%)</title><rect x="86.5" y="835.0" width="28.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.5" y="846.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (11 samples, 2.38%)</title><rect x="86.5" y="819.0" width="28.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="89.5" y="830.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (11 samples, 2.38%)</title><rect x="86.5" y="803.0" width="28.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="89.5" y="814.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (11 samples, 2.38%)</title><rect x="86.5" y="787.0" width="28.0" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="89.5" y="798.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (11 samples, 2.38%)</title><rect x="86.5" y="771.0" width="28.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="89.5" y="782.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.22%)</title><rect x="86.5" y="755.0" width="2.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="89.5" y="766.0"></text>
</g>
<g>
<title>ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**) (1 samples, 0.22%)</title><rect x="86.5" y="739.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="89.5" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (10 samples, 2.16%)</title><rect x="89.0" y="755.0" width="25.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="92.0" y="766.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 2.16%)</title><rect x="89.0" y="739.0" width="25.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="92.0" y="750.0">e..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 2.16%)</title><rect x="89.0" y="723.0" width="25.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="92.0" y="734.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (10 samples, 2.16%)</title><rect x="89.0" y="707.0" width="25.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="92.0" y="718.0">_..</text>
</g>
<g>
<title>do_futex (10 samples, 2.16%)</title><rect x="89.0" y="691.0" width="25.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="92.0" y="702.0">d..</text>
</g>
<g>
<title>futex_wake (10 samples, 2.16%)</title><rect x="89.0" y="675.0" width="25.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="92.0" y="686.0">f..</text>
</g>
<g>
<title>wake_up_q (9 samples, 1.94%)</title><rect x="91.6" y="659.0" width="22.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="94.6" y="670.0">w..</text>
</g>
<g>
<title>try_to_wake_up (9 samples, 1.94%)</title><rect x="91.6" y="643.0" width="22.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="94.6" y="654.0">t..</text>
</g>
<g>
<title>__lock_text_start (9 samples, 1.94%)</title><rect x="91.6" y="627.0" width="22.9" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="94.6" y="638.0">_..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/AsyncHttpServerImpl$$Lambda$69/887437128.run (364 samples, 78.62%)</title><rect x="114.5" y="867.0" width="927.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="117.5" y="878.0">ru/mail/polis/service/basta123/AsyncHttpServerImpl$$Lambda$69/887437128.run</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/AsyncHttpServerImpl.lambda$executeAsync$4 (364 samples, 78.62%)</title><rect x="114.5" y="851.0" width="927.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="117.5" y="862.0">ru/mail/polis/service/basta123/AsyncHttpServerImpl.lambda$executeAsync$4</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/AsyncHttpServerImpl.makeAct (364 samples, 78.62%)</title><rect x="114.5" y="835.0" width="927.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="117.5" y="846.0">ru/mail/polis/service/basta123/AsyncHttpServerImpl.makeAct</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/AsyncHttpServerImpl$$Lambda$71/963929102.act (364 samples, 78.62%)</title><rect x="114.5" y="819.0" width="927.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="117.5" y="830.0">ru/mail/polis/service/basta123/AsyncHttpServerImpl$$Lambda$71/963929102.act</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/AsyncHttpServerImpl.lambda$getValueByKey$1 (364 samples, 78.62%)</title><rect x="114.5" y="803.0" width="927.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="117.5" y="814.0">ru/mail/polis/service/basta123/AsyncHttpServerImpl.lambda$getValueByKey$1</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/AsyncHttpServerImpl.get (364 samples, 78.62%)</title><rect x="114.5" y="787.0" width="927.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="117.5" y="798.0">ru/mail/polis/service/basta123/AsyncHttpServerImpl.get</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (40 samples, 8.64%)</title><rect x="117.0" y="771.0" width="102.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="120.0" y="782.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (40 samples, 8.64%)</title><rect x="117.0" y="755.0" width="102.0" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="120.0" y="766.0">one/nio/http..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.22%)</title><rect x="117.0" y="739.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="120.0" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.22%)</title><rect x="117.0" y="723.0" width="2.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="120.0" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.22%)</title><rect x="117.0" y="707.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="120.0" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.22%)</title><rect x="117.0" y="691.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="120.0" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 8.42%)</title><rect x="119.6" y="739.0" width="99.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.6" y="750.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session.write (39 samples, 8.42%)</title><rect x="119.6" y="723.0" width="99.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="122.6" y="734.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (39 samples, 8.42%)</title><rect x="119.6" y="707.0" width="99.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="122.6" y="718.0">one/nio/net/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (38 samples, 8.21%)</title><rect x="122.1" y="691.0" width="96.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="125.1" y="702.0">one/nio/net..</text>
</g>
<g>
<title>__send (38 samples, 8.21%)</title><rect x="122.1" y="675.0" width="96.9" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="125.1" y="686.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (38 samples, 8.21%)</title><rect x="122.1" y="659.0" width="96.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="125.1" y="670.0">entry_SYSCA..</text>
</g>
<g>
<title>do_syscall_64 (38 samples, 8.21%)</title><rect x="122.1" y="643.0" width="96.9" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="125.1" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (38 samples, 8.21%)</title><rect x="122.1" y="627.0" width="96.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="125.1" y="638.0">__x64_sys_s..</text>
</g>
<g>
<title>__sys_sendto (38 samples, 8.21%)</title><rect x="122.1" y="611.0" width="96.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="125.1" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (38 samples, 8.21%)</title><rect x="122.1" y="595.0" width="96.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="125.1" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (36 samples, 7.78%)</title><rect x="122.1" y="579.0" width="91.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="125.1" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (36 samples, 7.78%)</title><rect x="122.1" y="563.0" width="91.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="125.1" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg_locked (36 samples, 7.78%)</title><rect x="122.1" y="547.0" width="91.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="125.1" y="558.0">tcp_sendmsg..</text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.43%)</title><rect x="122.1" y="531.0" width="5.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="125.1" y="542.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.43%)</title><rect x="122.1" y="515.0" width="5.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="125.1" y="526.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.22%)</title><rect x="124.7" y="499.0" width="2.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="127.7" y="510.0"></text>
</g>
<g>
<title>get_task_policy.part.33 (1 samples, 0.22%)</title><rect x="124.7" y="483.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="127.7" y="494.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.22%)</title><rect x="127.2" y="531.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="130.2" y="542.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.22%)</title><rect x="127.2" y="515.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="130.2" y="526.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.22%)</title><rect x="127.2" y="499.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="130.2" y="510.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.22%)</title><rect x="127.2" y="483.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="130.2" y="494.0"></text>
</g>
<g>
<title>tcp_push (33 samples, 7.13%)</title><rect x="129.8" y="531.0" width="84.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="132.8" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (33 samples, 7.13%)</title><rect x="129.8" y="515.0" width="84.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="132.8" y="526.0">__tcp_push..</text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.22%)</title><rect x="129.8" y="499.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="132.8" y="510.0"></text>
</g>
<g>
<title>tcp_write_xmit (32 samples, 6.91%)</title><rect x="132.3" y="499.0" width="81.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="135.3" y="510.0">tcp_write..</text>
</g>
<g>
<title>__tcp_transmit_skb (29 samples, 6.26%)</title><rect x="132.3" y="483.0" width="73.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="135.3" y="494.0">__tcp_tr..</text>
</g>
<g>
<title>ip_queue_xmit (26 samples, 5.62%)</title><rect x="137.4" y="467.0" width="66.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="140.4" y="478.0">ip_queu..</text>
</g>
<g>
<title>__ip_queue_xmit (25 samples, 5.40%)</title><rect x="140.0" y="451.0" width="63.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="143.0" y="462.0">__ip_qu..</text>
</g>
<g>
<title>ip_local_out (25 samples, 5.40%)</title><rect x="140.0" y="435.0" width="63.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="143.0" y="446.0">ip_loca..</text>
</g>
<g>
<title>ip_output (25 samples, 5.40%)</title><rect x="140.0" y="419.0" width="63.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="143.0" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (25 samples, 5.40%)</title><rect x="140.0" y="403.0" width="63.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="143.0" y="414.0">ip_fini..</text>
</g>
<g>
<title>__ip_finish_output (25 samples, 5.40%)</title><rect x="140.0" y="387.0" width="63.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="143.0" y="398.0">__ip_fi..</text>
</g>
<g>
<title>ip_finish_output2 (25 samples, 5.40%)</title><rect x="140.0" y="371.0" width="63.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="143.0" y="382.0">ip_fini..</text>
</g>
<g>
<title>__local_bh_enable_ip (24 samples, 5.18%)</title><rect x="142.5" y="355.0" width="61.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="145.5" y="366.0">__loca..</text>
</g>
<g>
<title>do_softirq.part.20 (24 samples, 5.18%)</title><rect x="142.5" y="339.0" width="61.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="145.5" y="350.0">do_sof..</text>
</g>
<g>
<title>do_softirq_own_stack (24 samples, 5.18%)</title><rect x="142.5" y="323.0" width="61.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="145.5" y="334.0">do_sof..</text>
</g>
<g>
<title>__softirqentry_text_start (24 samples, 5.18%)</title><rect x="142.5" y="307.0" width="61.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="145.5" y="318.0">__soft..</text>
</g>
<g>
<title>net_rx_action (23 samples, 4.97%)</title><rect x="145.1" y="291.0" width="58.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="148.1" y="302.0">net_rx..</text>
</g>
<g>
<title>process_backlog (23 samples, 4.97%)</title><rect x="145.1" y="275.0" width="58.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="148.1" y="286.0">proces..</text>
</g>
<g>
<title>__netif_receive_skb (23 samples, 4.97%)</title><rect x="145.1" y="259.0" width="58.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="148.1" y="270.0">__neti..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (23 samples, 4.97%)</title><rect x="145.1" y="243.0" width="58.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="148.1" y="254.0">__neti..</text>
</g>
<g>
<title>ip_rcv (23 samples, 4.97%)</title><rect x="145.1" y="227.0" width="58.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="148.1" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_finish (23 samples, 4.97%)</title><rect x="145.1" y="211.0" width="58.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="148.1" y="222.0">ip_rcv..</text>
</g>
<g>
<title>ip_local_deliver (23 samples, 4.97%)</title><rect x="145.1" y="195.0" width="58.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="148.1" y="206.0">ip_loc..</text>
</g>
<g>
<title>ip_local_deliver_finish (23 samples, 4.97%)</title><rect x="145.1" y="179.0" width="58.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="148.1" y="190.0">ip_loc..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (23 samples, 4.97%)</title><rect x="145.1" y="163.0" width="58.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="148.1" y="174.0">ip_pro..</text>
</g>
<g>
<title>tcp_v4_rcv (22 samples, 4.75%)</title><rect x="147.6" y="147.0" width="56.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="150.6" y="158.0">tcp_v4..</text>
</g>
<g>
<title>__inet_lookup_established (2 samples, 0.43%)</title><rect x="147.6" y="131.0" width="5.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="150.6" y="142.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.22%)</title><rect x="152.7" y="131.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="155.7" y="142.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.22%)</title><rect x="152.7" y="115.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="155.7" y="126.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (19 samples, 4.10%)</title><rect x="155.3" y="131.0" width="48.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="158.3" y="142.0">tcp_..</text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.22%)</title><rect x="155.3" y="115.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="158.3" y="126.0"></text>
</g>
<g>
<title>tcp_rcv_established (18 samples, 3.89%)</title><rect x="157.8" y="115.0" width="45.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="160.8" y="126.0">tcp_..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.22%)</title><rect x="160.4" y="99.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="163.4" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.22%)</title><rect x="160.4" y="83.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="163.4" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.22%)</title><rect x="160.4" y="67.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="163.4" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.22%)</title><rect x="160.4" y="51.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="163.4" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="160.4" y="35.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="163.4" y="46.0"></text>
</g>
<g>
<title>tcp_ack (3 samples, 0.65%)</title><rect x="162.9" y="99.0" width="7.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="165.9" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.22%)</title><rect x="168.0" y="83.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="171.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.22%)</title><rect x="168.0" y="67.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="171.0" y="78.0"></text>
</g>
<g>
<title>tcp_data_ready (13 samples, 2.81%)</title><rect x="170.6" y="99.0" width="33.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="173.6" y="110.0">tc..</text>
</g>
<g>
<title>sock_def_readable (13 samples, 2.81%)</title><rect x="170.6" y="83.0" width="33.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="173.6" y="94.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (13 samples, 2.81%)</title><rect x="170.6" y="67.0" width="33.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="173.6" y="78.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (13 samples, 2.81%)</title><rect x="170.6" y="51.0" width="33.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="173.6" y="62.0">__..</text>
</g>
<g>
<title>__lock_text_start (13 samples, 2.81%)</title><rect x="170.6" y="35.0" width="33.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="173.6" y="46.0">__..</text>
</g>
<g>
<title>tcp_options_write (1 samples, 0.22%)</title><rect x="203.7" y="467.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="206.7" y="478.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.22%)</title><rect x="206.2" y="483.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="209.2" y="494.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.22%)</title><rect x="208.8" y="483.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="211.8" y="494.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.22%)</title><rect x="211.3" y="483.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="214.3" y="494.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.43%)</title><rect x="213.9" y="579.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="216.9" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (2 samples, 0.43%)</title><rect x="213.9" y="563.0" width="5.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="216.9" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.43%)</title><rect x="213.9" y="547.0" width="5.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="216.9" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.22%)</title><rect x="216.4" y="531.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="219.4" y="542.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.22%)</title><rect x="216.4" y="515.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="219.4" y="526.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (2 samples, 0.43%)</title><rect x="219.0" y="771.0" width="5.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="222.0" y="782.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOf (1 samples, 0.22%)</title><rect x="221.5" y="755.0" width="2.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="224.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.getHeader (1 samples, 0.22%)</title><rect x="221.5" y="739.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="224.5" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/DAORocksDB.get (265 samples, 57.24%)</title><rect x="224.1" y="771.0" width="675.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="227.1" y="782.0">ru/mail/polis/dao/basta123/DAORocksDB.get</text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.22%)</title><rect x="224.1" y="755.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.1" y="766.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.22%)</title><rect x="224.1" y="739.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="227.1" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.22%)</title><rect x="224.1" y="723.0" width="2.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="227.1" y="734.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.22%)</title><rect x="224.1" y="707.0" width="2.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="227.1" y="718.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.22%)</title><rect x="224.1" y="691.0" width="2.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="227.1" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.22%)</title><rect x="224.1" y="675.0" width="2.5" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="227.1" y="686.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.22%)</title><rect x="224.1" y="659.0" width="2.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="227.1" y="670.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.22%)</title><rect x="224.1" y="643.0" width="2.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="227.1" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="224.1" y="627.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="227.1" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="224.1" y="611.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="227.1" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="224.1" y="595.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="227.1" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.22%)</title><rect x="224.1" y="579.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="227.1" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.22%)</title><rect x="224.1" y="563.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="227.1" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.22%)</title><rect x="224.1" y="547.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="227.1" y="558.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (264 samples, 57.02%)</title><rect x="226.6" y="755.0" width="672.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="229.6" y="766.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>org/rocksdb/RocksDB.get (264 samples, 57.02%)</title><rect x="226.6" y="739.0" width="672.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="229.6" y="750.0">org/rocksdb/RocksDB.get</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.65%)</title><rect x="226.6" y="723.0" width="7.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="229.6" y="734.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_get__J_3BII (175 samples, 37.80%)</title><rect x="234.3" y="723.0" width="446.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="237.3" y="734.0">Java_org_rocksdb_RocksDB_get__J_3BII</text>
</g>
<g>
<title>operator delete(void*) (1 samples, 0.22%)</title><rect x="234.3" y="707.0" width="2.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="237.3" y="718.0"></text>
</g>
<g>
<title>rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int) (174 samples, 37.58%)</title><rect x="236.8" y="707.0" width="443.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="239.8" y="718.0">rocksdb_get_helper(JNIEnv_*, rocksdb::DB*, rocksdb::ReadOptio..</text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.22%)</title><rect x="236.8" y="691.0" width="2.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="239.8" y="702.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.22%)</title><rect x="236.8" y="675.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="239.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, std::string*) (172 samples, 37.15%)</title><rect x="239.4" y="691.0" width="438.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="242.4" y="702.0">rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Slice..</text>
</g>
<g>
<title>rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, std::string*) (172 samples, 37.15%)</title><rect x="239.4" y="675.0" width="438.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="242.4" y="686.0">rocksdb::DB::Get(rocksdb::ReadOptions const&amp;, rocksdb::Colum..</text>
</g>
<g>
<title>rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::PinnableSlice*) (170 samples, 36.72%)</title><rect x="239.4" y="659.0" width="433.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="242.4" y="670.0">rocksdb::DBImpl::Get(rocksdb::ReadOptions const&amp;, rocksdb::..</text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (169 samples, 36.50%)</title><rect x="239.4" y="643.0" width="430.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="242.4" y="654.0">rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocks..</text>
</g>
<g>
<title>/tmp/librocksdbjni1072992072075371344.so (1 samples, 0.22%)</title><rect x="239.4" y="627.0" width="2.5" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="242.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (3 samples, 0.65%)</title><rect x="241.9" y="627.0" width="7.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="244.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() [clone .plt] (1 samples, 0.22%)</title><rect x="241.9" y="611.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="244.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.22%)</title><rect x="244.5" y="611.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="247.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.22%)</title><rect x="247.0" y="611.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="250.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::ReturnAndCleanupSuperVersion(rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*) (1 samples, 0.22%)</title><rect x="249.6" y="627.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="252.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::ReturnThreadLocalSuperVersion(rocksdb::SuperVersion*) (1 samples, 0.22%)</title><rect x="249.6" y="611.0" width="2.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="252.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::GetThreadLocal() (1 samples, 0.22%)</title><rect x="249.6" y="595.0" width="2.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="252.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) (1 samples, 0.22%)</title><rect x="252.1" y="627.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="255.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::string*, rocksdb::Status*, rocksdb::MergeContext*, unsigned long*, unsigned long*, rocksdb::ReadOptions const&amp;, rocksdb::ReadCallback*, bool*, bool) (163 samples, 35.21%)</title><rect x="254.7" y="627.0" width="415.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="257.7" y="638.0">rocksdb::MemTable::Get(rocksdb::LookupKey const&amp;, std::st..</text>
</g>
<g>
<title>/tmp/librocksdbjni1072992072075371344.so (163 samples, 35.21%)</title><rect x="254.7" y="611.0" width="415.4" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="257.7" y="622.0">/tmp/librocksdbjni1072992072075371344.so</text>
</g>
<g>
<title>/tmp/librocksdbjni1072992072075371344.so (4 samples, 0.86%)</title><rect x="254.7" y="595.0" width="10.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="257.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.65%)</title><rect x="257.2" y="579.0" width="7.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="260.2" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="257.2" y="563.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="260.2" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.22%)</title><rect x="257.2" y="547.0" width="2.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="260.2" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="257.2" y="531.0" width="2.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="260.2" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="257.2" y="515.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="260.2" y="526.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.22%)</title><rect x="257.2" y="499.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="260.2" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.43%)</title><rect x="259.8" y="563.0" width="5.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="262.8" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.43%)</title><rect x="259.8" y="547.0" width="5.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="262.8" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.43%)</title><rect x="259.8" y="531.0" width="5.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="262.8" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="259.8" y="515.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="262.8" y="526.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.22%)</title><rect x="262.3" y="515.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="265.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (159 samples, 34.34%)</title><rect x="264.9" y="595.0" width="405.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="267.9" y="606.0">rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyCompar..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.22%)</title><rect x="287.8" y="579.0" width="2.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="290.8" y="590.0"></text>
</g>
<g>
<title>non-virtual thunk to rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.43%)</title><rect x="290.3" y="579.0" width="5.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="293.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (146 samples, 31.53%)</title><rect x="295.4" y="579.0" width="372.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="298.4" y="590.0">rocksdb::MemTable::KeyComparator::operator()(char c..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="295.4" y="563.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="298.4" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="298.0" y="563.0" width="2.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="301.0" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.43%)</title><rect x="300.5" y="563.0" width="5.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="303.5" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.65%)</title><rect x="305.6" y="563.0" width="7.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="308.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (131 samples, 28.29%)</title><rect x="313.3" y="563.0" width="333.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="316.3" y="574.0">rocksdb::BaseComparatorJniCallback::Compare(r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (32 samples, 6.91%)</title><rect x="318.4" y="547.0" width="81.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="321.4" y="558.0">JNIEnv_::..</text>
</g>
<g>
<title>jni_CallIntMethodV (30 samples, 6.48%)</title><rect x="320.9" y="531.0" width="76.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="323.9" y="542.0">jni_Call..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (2 samples, 0.43%)</title><rect x="328.6" y="515.0" width="5.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="331.6" y="526.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.22%)</title><rect x="333.7" y="515.0" width="2.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="336.7" y="526.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.22%)</title><rect x="336.2" y="515.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="339.2" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.22%)</title><rect x="338.8" y="515.0" width="2.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="341.8" y="526.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (22 samples, 4.75%)</title><rect x="341.3" y="515.0" width="56.1" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="344.3" y="526.0">jni_in..</text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.22%)</title><rect x="346.4" y="499.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="349.4" y="510.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (5 samples, 1.08%)</title><rect x="349.0" y="499.0" width="12.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="352.0" y="510.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (10 samples, 2.16%)</title><rect x="361.7" y="499.0" width="25.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="364.7" y="510.0">J..</text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.22%)</title><rect x="366.8" y="483.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="369.8" y="494.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.22%)</title><rect x="369.4" y="483.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="372.4" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="369.4" y="467.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="372.4" y="478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="369.4" y="451.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="372.4" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="369.4" y="435.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="372.4" y="446.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.22%)</title><rect x="371.9" y="483.0" width="2.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="374.9" y="494.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.43%)</title><rect x="374.4" y="483.0" width="5.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="377.4" y="494.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.22%)</title><rect x="379.5" y="483.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="382.5" y="494.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.43%)</title><rect x="382.1" y="483.0" width="5.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="385.1" y="494.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (2 samples, 0.43%)</title><rect x="387.2" y="499.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="390.2" y="510.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.22%)</title><rect x="392.3" y="499.0" width="2.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="395.3" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="394.8" y="499.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="397.8" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="394.8" y="483.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="397.8" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="394.8" y="467.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="397.8" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="397.4" y="531.0" width="2.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="400.4" y="542.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (68 samples, 14.69%)</title><rect x="399.9" y="547.0" width="173.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="402.9" y="558.0">JNIEnv_::CallVoidMetho..</text>
</g>
<g>
<title>jni_CallVoidMethodV (64 samples, 13.82%)</title><rect x="410.1" y="531.0" width="163.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="413.1" y="542.0">jni_CallVoidMethodV</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.22%)</title><rect x="417.8" y="515.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="420.8" y="526.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (4 samples, 0.86%)</title><rect x="420.3" y="515.0" width="10.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="423.3" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="428.0" y="499.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="431.0" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="428.0" y="483.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="431.0" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="428.0" y="467.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="431.0" y="478.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.22%)</title><rect x="430.5" y="515.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="433.5" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="433.1" y="515.0" width="2.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="436.1" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.43%)</title><rect x="435.6" y="515.0" width="5.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="438.6" y="526.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.22%)</title><rect x="440.7" y="515.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="443.7" y="526.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.22%)</title><rect x="443.3" y="515.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="446.3" y="526.0"></text>
</g>
<g>
<title>SignatureIterator::SignatureIterator(Symbol*) (1 samples, 0.22%)</title><rect x="445.8" y="515.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="448.8" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.22%)</title><rect x="448.4" y="515.0" width="2.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="451.4" y="526.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (4 samples, 0.86%)</title><rect x="450.9" y="515.0" width="10.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="453.9" y="526.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (42 samples, 9.07%)</title><rect x="461.1" y="515.0" width="107.0" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="464.1" y="526.0">jni_invoke_no..</text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.22%)</title><rect x="471.3" y="499.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="474.3" y="510.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.22%)</title><rect x="473.8" y="499.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="476.8" y="510.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (11 samples, 2.38%)</title><rect x="476.4" y="499.0" width="28.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="479.4" y="510.0">JN..</text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (22 samples, 4.75%)</title><rect x="504.4" y="499.0" width="56.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="507.4" y="510.0">JavaCa..</text>
</g>
<g>
<title>JavaCallArguments::parameters() (3 samples, 0.65%)</title><rect x="517.2" y="483.0" width="7.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="520.2" y="494.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="522.3" y="467.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="525.3" y="478.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="522.3" y="451.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="525.3" y="462.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="522.3" y="435.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="525.3" y="446.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (5 samples, 1.08%)</title><rect x="524.8" y="483.0" width="12.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="527.8" y="494.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.22%)</title><rect x="535.0" y="467.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="538.0" y="478.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (3 samples, 0.65%)</title><rect x="537.6" y="483.0" width="7.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="540.6" y="494.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.22%)</title><rect x="545.2" y="483.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="548.2" y="494.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (5 samples, 1.08%)</title><rect x="547.8" y="483.0" width="12.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="550.8" y="494.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.22%)</title><rect x="557.9" y="467.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="560.9" y="478.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.22%)</title><rect x="560.5" y="499.0" width="2.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="563.5" y="510.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.22%)</title><rect x="563.0" y="499.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="566.0" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="563.0" y="483.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="566.0" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="563.0" y="467.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="566.0" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="563.0" y="451.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="566.0" y="462.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.22%)</title><rect x="565.6" y="499.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="568.6" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="565.6" y="483.0" width="2.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="568.6" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="565.6" y="467.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="568.6" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="565.6" y="451.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="568.6" y="462.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.22%)</title><rect x="568.1" y="515.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="571.1" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="570.7" y="515.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="573.7" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="570.7" y="499.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="573.7" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="570.7" y="483.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="573.7" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.22%)</title><rect x="573.2" y="547.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="576.2" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="573.2" y="531.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="576.2" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="573.2" y="515.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="576.2" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="573.2" y="499.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="576.2" y="510.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.22%)</title><rect x="573.2" y="483.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="576.2" y="494.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.22%)</title><rect x="573.2" y="467.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="576.2" y="478.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.22%)</title><rect x="573.2" y="451.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="576.2" y="462.0"></text>
</g>
<g>
<title>__lll_lock_wait (3 samples, 0.65%)</title><rect x="575.8" y="547.0" width="7.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="578.8" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.65%)</title><rect x="575.8" y="531.0" width="7.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="578.8" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.65%)</title><rect x="575.8" y="515.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="578.8" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.43%)</title><rect x="578.3" y="499.0" width="5.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="581.3" y="510.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.43%)</title><rect x="578.3" y="483.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="581.3" y="494.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.43%)</title><rect x="578.3" y="467.0" width="5.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="581.3" y="478.0"></text>
</g>
<g>
<title>futex_wait_setup (2 samples, 0.43%)</title><rect x="578.3" y="451.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="581.3" y="462.0"></text>
</g>
<g>
<title>get_futex_value_locked (1 samples, 0.22%)</title><rect x="580.9" y="435.0" width="2.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="583.9" y="446.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.86%)</title><rect x="583.4" y="547.0" width="10.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="586.4" y="558.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.86%)</title><rect x="583.4" y="531.0" width="10.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="586.4" y="542.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.86%)</title><rect x="583.4" y="515.0" width="10.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="586.4" y="526.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.86%)</title><rect x="583.4" y="499.0" width="10.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="586.4" y="510.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.86%)</title><rect x="583.4" y="483.0" width="10.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="586.4" y="494.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.65%)</title><rect x="583.4" y="467.0" width="7.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="586.4" y="478.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.65%)</title><rect x="583.4" y="451.0" width="7.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="586.4" y="462.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.65%)</title><rect x="583.4" y="435.0" width="7.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="586.4" y="446.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.65%)</title><rect x="583.4" y="419.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="586.4" y="430.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.22%)</title><rect x="591.1" y="467.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="594.1" y="478.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.43%)</title><rect x="593.6" y="547.0" width="5.1" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="596.6" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="596.2" y="531.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="599.2" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="596.2" y="515.0" width="2.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="599.2" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="596.2" y="499.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="599.2" y="510.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (8 samples, 1.73%)</title><rect x="598.7" y="547.0" width="20.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="601.7" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.86%)</title><rect x="603.8" y="531.0" width="10.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="606.8" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.43%)</title><rect x="608.9" y="515.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="611.9" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.43%)</title><rect x="608.9" y="499.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="611.9" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.43%)</title><rect x="608.9" y="483.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="611.9" y="494.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.22%)</title><rect x="614.0" y="531.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="617.0" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="616.6" y="531.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="619.6" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="616.6" y="515.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="619.6" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="616.6" y="499.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="619.6" y="510.0"></text>
</g>
<g>
<title>jni_GetEnv (4 samples, 0.86%)</title><rect x="619.1" y="547.0" width="10.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="622.1" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="626.8" y="531.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="629.8" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="626.8" y="515.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="629.8" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="626.8" y="499.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="629.8" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (3 samples, 0.65%)</title><rect x="629.3" y="547.0" width="7.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="632.3" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.43%)</title><rect x="631.9" y="531.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="634.9" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.43%)</title><rect x="631.9" y="515.0" width="5.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="634.9" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.43%)</title><rect x="631.9" y="499.0" width="5.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="634.9" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.43%)</title><rect x="637.0" y="547.0" width="5.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="640.0" y="558.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.43%)</title><rect x="642.1" y="547.0" width="5.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="645.1" y="558.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.22%)</title><rect x="642.1" y="531.0" width="2.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="645.1" y="542.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.22%)</title><rect x="644.6" y="531.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="647.6" y="542.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.22%)</title><rect x="647.1" y="563.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="650.1" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::releaseJniEnv(unsigned char&amp;) const (3 samples, 0.65%)</title><rect x="649.7" y="563.0" width="7.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="652.7" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="654.8" y="547.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="657.8" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="654.8" y="531.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="657.8" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="654.8" y="515.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="657.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (2 samples, 0.43%)</title><rect x="657.3" y="563.0" width="5.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="660.3" y="574.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (2 samples, 0.43%)</title><rect x="662.4" y="563.0" width="5.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="665.4" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="665.0" y="547.0" width="2.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="668.0" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="665.0" y="531.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="668.0" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="665.0" y="515.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="668.0" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="667.5" y="579.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="670.5" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="667.5" y="563.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="670.5" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="667.5" y="547.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="670.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::StopWatch::~StopWatch() (1 samples, 0.22%)</title><rect x="670.1" y="643.0" width="2.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="673.1" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="670.1" y="627.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="673.1" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="670.1" y="611.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="673.1" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="670.1" y="595.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="673.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::GetImpl(rocksdb::ReadOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::DBImpl::GetImplOptions) (2 samples, 0.43%)</title><rect x="672.6" y="659.0" width="5.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="675.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::JniUtil::createJavaByteArrayWithSizeCheck(JNIEnv_*, char const*, unsigned long) (1 samples, 0.22%)</title><rect x="677.7" y="691.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="680.7" y="702.0"></text>
</g>
<g>
<title>__malloc (2 samples, 0.43%)</title><rect x="680.3" y="723.0" width="5.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="683.3" y="734.0"></text>
</g>
<g>
<title>call_stub (4 samples, 0.86%)</title><rect x="685.4" y="723.0" width="10.2" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="688.4" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="693.0" y="707.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="696.0" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="693.0" y="691.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="696.0" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="693.0" y="675.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="696.0" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (7 samples, 1.51%)</title><rect x="695.6" y="723.0" width="17.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="698.6" y="734.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/SingedBytesComparator.compare (73 samples, 15.77%)</title><rect x="713.4" y="723.0" width="186.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="716.4" y="734.0">ru/mail/polis/dao/basta1..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/SingedBytesComparator.compare (71 samples, 15.33%)</title><rect x="716.0" y="707.0" width="180.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.0" y="718.0">ru/mail/polis/dao/basta..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (3 samples, 0.65%)</title><rect x="716.0" y="691.0" width="7.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="719.0" y="702.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (3 samples, 0.65%)</title><rect x="716.0" y="675.0" width="7.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="719.0" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (68 samples, 14.69%)</title><rect x="723.6" y="691.0" width="173.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="726.6" y="702.0">org/rocksdb/AbstractSl..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (4 samples, 0.86%)</title><rect x="723.6" y="675.0" width="10.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.6" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="731.3" y="659.0" width="2.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="734.3" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="731.3" y="643.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="734.3" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="731.3" y="627.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="734.3" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (64 samples, 13.82%)</title><rect x="733.8" y="675.0" width="163.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="736.8" y="686.0">org/rocksdb/Slice.data0</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (62 samples, 13.39%)</title><rect x="738.9" y="659.0" width="158.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="741.9" y="670.0">org/rocksdb/Slice.da..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (56 samples, 12.10%)</title><rect x="746.5" y="643.0" width="142.8" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="749.5" y="654.0">Java_org_rocksdb_S..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.22%)</title><rect x="749.1" y="627.0" width="2.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="752.1" y="638.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.22%)</title><rect x="751.6" y="627.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="754.6" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.22%)</title><rect x="754.2" y="627.0" width="2.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="757.2" y="638.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.65%)</title><rect x="756.7" y="627.0" width="7.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="759.7" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="761.8" y="611.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="764.8" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="761.8" y="595.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="764.8" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="761.8" y="579.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="764.8" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (8 samples, 1.73%)</title><rect x="764.4" y="627.0" width="20.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="767.4" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.65%)</title><rect x="764.4" y="611.0" width="7.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="767.4" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (5 samples, 1.08%)</title><rect x="772.0" y="611.0" width="12.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="775.0" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.43%)</title><rect x="779.7" y="595.0" width="5.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="782.7" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.43%)</title><rect x="779.7" y="579.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="782.7" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.43%)</title><rect x="779.7" y="563.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="782.7" y="574.0"></text>
</g>
<g>
<title>jni_NewByteArray (30 samples, 6.48%)</title><rect x="784.8" y="627.0" width="76.4" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="787.8" y="638.0">jni_NewB..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.43%)</title><rect x="787.3" y="611.0" width="5.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="790.3" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.43%)</title><rect x="792.4" y="611.0" width="5.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="795.4" y="622.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.43%)</title><rect x="797.5" y="611.0" width="5.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="800.5" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.22%)</title><rect x="802.6" y="611.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="805.6" y="622.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (22 samples, 4.75%)</title><rect x="805.2" y="611.0" width="56.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="808.2" y="622.0">TypeAr..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (18 samples, 3.89%)</title><rect x="815.4" y="595.0" width="45.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="818.4" y="606.0">Coll..</text>
</g>
<g>
<title>MemAllocator::allocate() const (14 samples, 3.02%)</title><rect x="817.9" y="579.0" width="35.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="820.9" y="590.0">Mem..</text>
</g>
<g>
<title>MemAllocator::Allocation::notify_allocation_jvmti_sampler() (2 samples, 0.43%)</title><rect x="825.6" y="563.0" width="5.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="828.6" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (3 samples, 0.65%)</title><rect x="830.6" y="563.0" width="7.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="833.6" y="574.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (5 samples, 1.08%)</title><rect x="838.3" y="563.0" width="12.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="841.3" y="574.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.22%)</title><rect x="851.0" y="563.0" width="2.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="854.0" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.22%)</title><rect x="853.6" y="579.0" width="2.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="856.6" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.22%)</title><rect x="856.1" y="579.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="859.1" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="858.7" y="579.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="861.7" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="858.7" y="563.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="861.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="858.7" y="547.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="861.7" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (11 samples, 2.38%)</title><rect x="861.2" y="627.0" width="28.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="864.2" y="638.0">jn..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.22%)</title><rect x="866.3" y="611.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="869.3" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="866.3" y="595.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="869.3" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="866.3" y="579.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="869.3" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="866.3" y="563.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="869.3" y="574.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.22%)</title><rect x="866.3" y="547.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="869.3" y="558.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.22%)</title><rect x="866.3" y="531.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="869.3" y="542.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.22%)</title><rect x="866.3" y="515.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="869.3" y="526.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (4 samples, 0.86%)</title><rect x="868.9" y="611.0" width="10.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="871.9" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.43%)</title><rect x="879.1" y="611.0" width="5.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="882.1" y="622.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.22%)</title><rect x="884.2" y="611.0" width="2.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="887.2" y="622.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.22%)</title><rect x="884.2" y="595.0" width="2.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="887.2" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="886.7" y="611.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="889.7" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="886.7" y="595.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="889.7" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="886.7" y="579.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="889.7" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.22%)</title><rect x="889.3" y="643.0" width="2.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="892.3" y="654.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.22%)</title><rect x="891.8" y="643.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="894.8" y="654.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.22%)</title><rect x="894.4" y="643.0" width="2.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="897.4" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="896.9" y="707.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="899.9" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="896.9" y="691.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="899.9" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="896.9" y="675.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="899.9" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/AsyncHttpServerImpl.proxying (54 samples, 11.66%)</title><rect x="899.5" y="771.0" width="137.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="902.5" y="782.0">ru/mail/polis/ser..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (54 samples, 11.66%)</title><rect x="899.5" y="755.0" width="137.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="902.5" y="766.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpClient.invoke (54 samples, 11.66%)</title><rect x="899.5" y="739.0" width="137.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="902.5" y="750.0">one/nio/http/Http..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.22%)</title><rect x="899.5" y="723.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.5" y="734.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.22%)</title><rect x="899.5" y="707.0" width="2.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="902.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.&lt;init&gt; (14 samples, 3.02%)</title><rect x="902.0" y="723.0" width="35.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="905.0" y="734.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (14 samples, 3.02%)</title><rect x="902.0" y="707.0" width="35.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="905.0" y="718.0">one..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.22%)</title><rect x="902.0" y="691.0" width="2.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="905.0" y="702.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.22%)</title><rect x="902.0" y="675.0" width="2.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="905.0" y="686.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.22%)</title><rect x="902.0" y="659.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="905.0" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="902.0" y="643.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="905.0" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="902.0" y="627.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="905.0" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="902.0" y="611.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="905.0" y="622.0"></text>
</g>
<g>
<title>__recv (13 samples, 2.81%)</title><rect x="904.6" y="691.0" width="33.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="907.6" y="702.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (13 samples, 2.81%)</title><rect x="904.6" y="675.0" width="33.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="907.6" y="686.0">en..</text>
</g>
<g>
<title>do_syscall_64 (13 samples, 2.81%)</title><rect x="904.6" y="659.0" width="33.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="907.6" y="670.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (12 samples, 2.59%)</title><rect x="907.1" y="643.0" width="30.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="910.1" y="654.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (12 samples, 2.59%)</title><rect x="907.1" y="627.0" width="30.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="910.1" y="638.0">__..</text>
</g>
<g>
<title>sock_recvmsg (12 samples, 2.59%)</title><rect x="907.1" y="611.0" width="30.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="910.1" y="622.0">so..</text>
</g>
<g>
<title>inet6_recvmsg (11 samples, 2.38%)</title><rect x="907.1" y="595.0" width="28.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="910.1" y="606.0">in..</text>
</g>
<g>
<title>tcp_recvmsg (11 samples, 2.38%)</title><rect x="907.1" y="579.0" width="28.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="910.1" y="590.0">tc..</text>
</g>
<g>
<title>sk_wait_data (4 samples, 0.86%)</title><rect x="907.1" y="563.0" width="10.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="910.1" y="574.0"></text>
</g>
<g>
<title>add_wait_queue (1 samples, 0.22%)</title><rect x="907.1" y="547.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="910.1" y="558.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="907.1" y="531.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="910.1" y="542.0"></text>
</g>
<g>
<title>wait_woken (3 samples, 0.65%)</title><rect x="909.7" y="547.0" width="7.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="912.7" y="558.0"></text>
</g>
<g>
<title>schedule_timeout (3 samples, 0.65%)</title><rect x="909.7" y="531.0" width="7.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="912.7" y="542.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.65%)</title><rect x="909.7" y="515.0" width="7.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="912.7" y="526.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.65%)</title><rect x="909.7" y="499.0" width="7.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="912.7" y="510.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.65%)</title><rect x="909.7" y="483.0" width="7.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="912.7" y="494.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (7 samples, 1.51%)</title><rect x="917.3" y="563.0" width="17.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="920.3" y="574.0"></text>
</g>
<g>
<title>tcp_send_ack (7 samples, 1.51%)</title><rect x="917.3" y="547.0" width="17.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="920.3" y="558.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (7 samples, 1.51%)</title><rect x="917.3" y="531.0" width="17.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="920.3" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (7 samples, 1.51%)</title><rect x="917.3" y="515.0" width="17.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="920.3" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (7 samples, 1.51%)</title><rect x="917.3" y="499.0" width="17.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="920.3" y="510.0"></text>
</g>
<g>
<title>__ip_queue_xmit (7 samples, 1.51%)</title><rect x="917.3" y="483.0" width="17.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="920.3" y="494.0"></text>
</g>
<g>
<title>ip_local_out (7 samples, 1.51%)</title><rect x="917.3" y="467.0" width="17.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="920.3" y="478.0"></text>
</g>
<g>
<title>ip_output (7 samples, 1.51%)</title><rect x="917.3" y="451.0" width="17.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="920.3" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (7 samples, 1.51%)</title><rect x="917.3" y="435.0" width="17.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="920.3" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (7 samples, 1.51%)</title><rect x="917.3" y="419.0" width="17.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="920.3" y="430.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 1.30%)</title><rect x="919.8" y="403.0" width="15.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="922.8" y="414.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.65%)</title><rect x="924.9" y="387.0" width="7.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="927.9" y="398.0"></text>
</g>
<g>
<title>do_softirq.part.20 (3 samples, 0.65%)</title><rect x="924.9" y="371.0" width="7.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="927.9" y="382.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.65%)</title><rect x="924.9" y="355.0" width="7.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="927.9" y="366.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.65%)</title><rect x="924.9" y="339.0" width="7.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="927.9" y="350.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.65%)</title><rect x="924.9" y="323.0" width="7.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="927.9" y="334.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.65%)</title><rect x="924.9" y="307.0" width="7.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="927.9" y="318.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.65%)</title><rect x="924.9" y="291.0" width="7.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="927.9" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.65%)</title><rect x="924.9" y="275.0" width="7.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="927.9" y="286.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.65%)</title><rect x="924.9" y="259.0" width="7.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="927.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.65%)</title><rect x="924.9" y="243.0" width="7.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="927.9" y="254.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.65%)</title><rect x="924.9" y="227.0" width="7.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="927.9" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.65%)</title><rect x="924.9" y="211.0" width="7.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="927.9" y="222.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.65%)</title><rect x="924.9" y="195.0" width="7.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="927.9" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.43%)</title><rect x="927.5" y="179.0" width="5.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="930.5" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.43%)</title><rect x="927.5" y="163.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="930.5" y="174.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.22%)</title><rect x="927.5" y="147.0" width="2.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="930.5" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (1 samples, 0.22%)</title><rect x="930.0" y="147.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="933.0" y="158.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.22%)</title><rect x="930.0" y="131.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="933.0" y="142.0"></text>
</g>
<g>
<title>tcp_newly_delivered (1 samples, 0.22%)</title><rect x="930.0" y="115.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="933.0" y="126.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.22%)</title><rect x="932.6" y="387.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="935.6" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.22%)</title><rect x="932.6" y="371.0" width="2.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="935.6" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.22%)</title><rect x="932.6" y="355.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="935.6" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.22%)</title><rect x="932.6" y="339.0" width="2.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="935.6" y="350.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.22%)</title><rect x="932.6" y="323.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="935.6" y="334.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.22%)</title><rect x="935.1" y="595.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="938.1" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.22%)</title><rect x="935.1" y="579.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="938.1" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.22%)</title><rect x="935.1" y="563.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="938.1" y="574.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readResponse (4 samples, 0.86%)</title><rect x="937.7" y="723.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="940.7" y="734.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.22%)</title><rect x="937.7" y="707.0" width="2.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="940.7" y="718.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.22%)</title><rect x="937.7" y="691.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="940.7" y="702.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.22%)</title><rect x="937.7" y="675.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="940.7" y="686.0"></text>
</g>
<g>
<title>java/lang/Character.digit (1 samples, 0.22%)</title><rect x="937.7" y="659.0" width="2.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="940.7" y="670.0"></text>
</g>
<g>
<title>java/lang/CharacterData.of (1 samples, 0.22%)</title><rect x="937.7" y="643.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="940.7" y="654.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.22%)</title><rect x="937.7" y="627.0" width="2.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="940.7" y="638.0"></text>
</g>
<g>
<title>java/lang/String.substring (2 samples, 0.43%)</title><rect x="940.2" y="707.0" width="5.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="943.2" y="718.0"></text>
</g>
<g>
<title>java/lang/String.length (2 samples, 0.43%)</title><rect x="940.2" y="691.0" width="5.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="943.2" y="702.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="942.8" y="675.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="945.8" y="686.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="942.8" y="659.0" width="2.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="945.8" y="670.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="942.8" y="643.0" width="2.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="945.8" y="654.0"></text>
</g>
<g>
<title>one/nio/http/HttpClient$ResponseReader.readLine (1 samples, 0.22%)</title><rect x="945.3" y="707.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.3" y="718.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.22%)</title><rect x="945.3" y="691.0" width="2.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="948.3" y="702.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.22%)</title><rect x="945.3" y="675.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="948.3" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="945.3" y="659.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="948.3" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="945.3" y="643.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="948.3" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="945.3" y="627.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="948.3" y="638.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.setTimeout (4 samples, 0.86%)</title><rect x="947.9" y="723.0" width="10.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="950.9" y="734.0"></text>
</g>
<g>
<title>__GI___setsockopt (4 samples, 0.86%)</title><rect x="947.9" y="707.0" width="10.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="950.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.86%)</title><rect x="947.9" y="691.0" width="10.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="950.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.86%)</title><rect x="947.9" y="675.0" width="10.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="950.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_setsockopt (2 samples, 0.43%)</title><rect x="953.0" y="659.0" width="5.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="956.0" y="670.0"></text>
</g>
<g>
<title>__sys_setsockopt (2 samples, 0.43%)</title><rect x="953.0" y="643.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="956.0" y="654.0"></text>
</g>
<g>
<title>__get_user_4 (1 samples, 0.22%)</title><rect x="953.0" y="627.0" width="2.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="956.0" y="638.0"></text>
</g>
<g>
<title>sock_setsockopt (1 samples, 0.22%)</title><rect x="955.5" y="627.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="958.5" y="638.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.22%)</title><rect x="955.5" y="611.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="958.5" y="622.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.22%)</title><rect x="955.5" y="595.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="958.5" y="606.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.22%)</title><rect x="955.5" y="579.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="958.5" y="590.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.writeFully (31 samples, 6.70%)</title><rect x="958.1" y="723.0" width="79.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="961.1" y="734.0">one/nio/n..</text>
</g>
<g>
<title>__send (31 samples, 6.70%)</title><rect x="958.1" y="707.0" width="79.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="961.1" y="718.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (31 samples, 6.70%)</title><rect x="958.1" y="691.0" width="79.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="961.1" y="702.0">entry_SYS..</text>
</g>
<g>
<title>do_syscall_64 (31 samples, 6.70%)</title><rect x="958.1" y="675.0" width="79.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="961.1" y="686.0">do_syscal..</text>
</g>
<g>
<title>__x64_sys_sendto (27 samples, 5.83%)</title><rect x="958.1" y="659.0" width="68.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="961.1" y="670.0">__x64_s..</text>
</g>
<g>
<title>__sys_sendto (27 samples, 5.83%)</title><rect x="958.1" y="643.0" width="68.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="961.1" y="654.0">__sys_s..</text>
</g>
<g>
<title>sock_sendmsg (27 samples, 5.83%)</title><rect x="958.1" y="627.0" width="68.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="961.1" y="638.0">sock_se..</text>
</g>
<g>
<title>inet6_sendmsg (26 samples, 5.62%)</title><rect x="958.1" y="611.0" width="66.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="961.1" y="622.0">inet6_s..</text>
</g>
<g>
<title>tcp_sendmsg (26 samples, 5.62%)</title><rect x="958.1" y="595.0" width="66.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="961.1" y="606.0">tcp_sen..</text>
</g>
<g>
<title>tcp_sendmsg_locked (26 samples, 5.62%)</title><rect x="958.1" y="579.0" width="66.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="961.1" y="590.0">tcp_sen..</text>
</g>
<g>
<title>_copy_from_iter_full (1 samples, 0.22%)</title><rect x="958.1" y="563.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="961.1" y="574.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.22%)</title><rect x="958.1" y="547.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="961.1" y="558.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (2 samples, 0.43%)</title><rect x="960.6" y="563.0" width="5.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="963.6" y="574.0"></text>
</g>
<g>
<title>__alloc_skb (2 samples, 0.43%)</title><rect x="960.6" y="547.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="963.6" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (1 samples, 0.22%)</title><rect x="960.6" y="531.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="963.6" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.22%)</title><rect x="960.6" y="515.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="963.6" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (1 samples, 0.22%)</title><rect x="963.2" y="531.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="966.2" y="542.0"></text>
</g>
<g>
<title>skb_entail (1 samples, 0.22%)</title><rect x="965.7" y="563.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="968.7" y="574.0"></text>
</g>
<g>
<title>tcp_push (22 samples, 4.75%)</title><rect x="968.3" y="563.0" width="56.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="971.3" y="574.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (22 samples, 4.75%)</title><rect x="968.3" y="547.0" width="56.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="971.3" y="558.0">__tcp_..</text>
</g>
<g>
<title>tcp_write_xmit (22 samples, 4.75%)</title><rect x="968.3" y="531.0" width="56.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="971.3" y="542.0">tcp_wr..</text>
</g>
<g>
<title>__tcp_transmit_skb (18 samples, 3.89%)</title><rect x="970.8" y="515.0" width="45.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="973.8" y="526.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (17 samples, 3.67%)</title><rect x="973.4" y="499.0" width="43.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="976.4" y="510.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (17 samples, 3.67%)</title><rect x="973.4" y="483.0" width="43.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="976.4" y="494.0">__ip..</text>
</g>
<g>
<title>ip_local_out (17 samples, 3.67%)</title><rect x="973.4" y="467.0" width="43.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="976.4" y="478.0">ip_l..</text>
</g>
<g>
<title>ip_output (17 samples, 3.67%)</title><rect x="973.4" y="451.0" width="43.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="976.4" y="462.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (17 samples, 3.67%)</title><rect x="973.4" y="435.0" width="43.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="976.4" y="446.0">ip_f..</text>
</g>
<g>
<title>__ip_finish_output (17 samples, 3.67%)</title><rect x="973.4" y="419.0" width="43.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="976.4" y="430.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (17 samples, 3.67%)</title><rect x="973.4" y="403.0" width="43.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="976.4" y="414.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (16 samples, 3.46%)</title><rect x="973.4" y="387.0" width="40.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="976.4" y="398.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (16 samples, 3.46%)</title><rect x="973.4" y="371.0" width="40.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="976.4" y="382.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (16 samples, 3.46%)</title><rect x="973.4" y="355.0" width="40.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="976.4" y="366.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (16 samples, 3.46%)</title><rect x="973.4" y="339.0" width="40.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="976.4" y="350.0">__s..</text>
</g>
<g>
<title>net_rx_action (15 samples, 3.24%)</title><rect x="975.9" y="323.0" width="38.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="978.9" y="334.0">net..</text>
</g>
<g>
<title>process_backlog (15 samples, 3.24%)</title><rect x="975.9" y="307.0" width="38.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="978.9" y="318.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (15 samples, 3.24%)</title><rect x="975.9" y="291.0" width="38.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="978.9" y="302.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (15 samples, 3.24%)</title><rect x="975.9" y="275.0" width="38.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="978.9" y="286.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_core (2 samples, 0.43%)</title><rect x="975.9" y="259.0" width="5.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="978.9" y="270.0"></text>
</g>
<g>
<title>ip_rcv (13 samples, 2.81%)</title><rect x="981.0" y="259.0" width="33.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="984.0" y="270.0">ip..</text>
</g>
<g>
<title>ip_rcv_finish (13 samples, 2.81%)</title><rect x="981.0" y="243.0" width="33.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="984.0" y="254.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (13 samples, 2.81%)</title><rect x="981.0" y="227.0" width="33.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="984.0" y="238.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (13 samples, 2.81%)</title><rect x="981.0" y="211.0" width="33.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="984.0" y="222.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (13 samples, 2.81%)</title><rect x="981.0" y="195.0" width="33.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="984.0" y="206.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (13 samples, 2.81%)</title><rect x="981.0" y="179.0" width="33.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="984.0" y="190.0">tc..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.22%)</title><rect x="981.0" y="163.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="984.0" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.22%)</title><rect x="983.6" y="163.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="986.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (11 samples, 2.38%)</title><rect x="986.1" y="163.0" width="28.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="989.1" y="174.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 2.38%)</title><rect x="986.1" y="147.0" width="28.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="989.1" y="158.0">tc..</text>
</g>
<g>
<title>tcp_data_ready (10 samples, 2.16%)</title><rect x="986.1" y="131.0" width="25.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="989.1" y="142.0">t..</text>
</g>
<g>
<title>sock_def_readable (10 samples, 2.16%)</title><rect x="986.1" y="115.0" width="25.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="989.1" y="126.0">s..</text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 2.16%)</title><rect x="986.1" y="99.0" width="25.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="989.1" y="110.0">_..</text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 2.16%)</title><rect x="986.1" y="83.0" width="25.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="989.1" y="94.0">_..</text>
</g>
<g>
<title>__lock_text_start (10 samples, 2.16%)</title><rect x="986.1" y="67.0" width="25.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="989.1" y="78.0">_..</text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.22%)</title><rect x="1011.6" y="131.0" width="2.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1014.6" y="142.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.22%)</title><rect x="1014.1" y="387.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1017.1" y="398.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.22%)</title><rect x="1014.1" y="371.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1017.1" y="382.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.22%)</title><rect x="1014.1" y="355.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1017.1" y="366.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.22%)</title><rect x="1014.1" y="339.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1017.1" y="350.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.22%)</title><rect x="1016.7" y="515.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1019.7" y="526.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (2 samples, 0.43%)</title><rect x="1019.2" y="515.0" width="5.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1022.2" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.22%)</title><rect x="1019.2" y="499.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1022.2" y="510.0"></text>
</g>
<g>
<title>tcp_rearm_rto (1 samples, 0.22%)</title><rect x="1021.8" y="499.0" width="2.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1024.8" y="510.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.22%)</title><rect x="1021.8" y="483.0" width="2.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1024.8" y="494.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.22%)</title><rect x="1021.8" y="467.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1024.8" y="478.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="1021.8" y="451.0" width="2.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1024.8" y="462.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.22%)</title><rect x="1024.3" y="611.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1027.3" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.22%)</title><rect x="1024.3" y="595.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1027.3" y="606.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.22%)</title><rect x="1024.3" y="579.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1027.3" y="590.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.22%)</title><rect x="1024.3" y="563.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1027.3" y="574.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.22%)</title><rect x="1024.3" y="547.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1027.3" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (4 samples, 0.86%)</title><rect x="1026.9" y="659.0" width="10.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1029.9" y="670.0"></text>
</g>
<g>
<title>schedule (4 samples, 0.86%)</title><rect x="1026.9" y="643.0" width="10.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1029.9" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 0.86%)</title><rect x="1026.9" y="627.0" width="10.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1029.9" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 0.86%)</title><rect x="1026.9" y="611.0" width="10.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1029.9" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/TopologyImpl.isLocal (1 samples, 0.22%)</title><rect x="1037.1" y="771.0" width="2.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1040.1" y="782.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.22%)</title><rect x="1037.1" y="755.0" width="2.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1040.1" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/Utils.getByteArrayFromByteBuffer (1 samples, 0.22%)</title><rect x="1039.6" y="771.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1042.6" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.22%)</title><rect x="1039.6" y="755.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1042.6" y="766.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (58 samples, 12.53%)</title><rect x="1042.2" y="915.0" width="147.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1045.2" y="926.0">one/nio/server/Sele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (23 samples, 4.97%)</title><rect x="1042.2" y="899.0" width="58.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1045.2" y="910.0">one/ni..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (23 samples, 4.97%)</title><rect x="1042.2" y="883.0" width="58.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1045.2" y="894.0">one/ni..</text>
</g>
<g>
<title>JVM_IHashCode (6 samples, 1.30%)</title><rect x="1042.2" y="867.0" width="15.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1045.2" y="878.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 1.30%)</title><rect x="1042.2" y="851.0" width="15.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1045.2" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.08%)</title><rect x="1044.7" y="835.0" width="12.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1047.7" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.08%)</title><rect x="1044.7" y="819.0" width="12.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1047.7" y="830.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 1.08%)</title><rect x="1044.7" y="803.0" width="12.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1047.7" y="814.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 1.08%)</title><rect x="1044.7" y="787.0" width="12.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1047.7" y="798.0"></text>
</g>
<g>
<title>ep_poll (5 samples, 1.08%)</title><rect x="1044.7" y="771.0" width="12.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1047.7" y="782.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.22%)</title><rect x="1047.3" y="755.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1050.3" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.65%)</title><rect x="1049.8" y="755.0" width="7.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1052.8" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.65%)</title><rect x="1049.8" y="739.0" width="7.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1052.8" y="750.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.65%)</title><rect x="1049.8" y="723.0" width="7.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1052.8" y="734.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.65%)</title><rect x="1049.8" y="707.0" width="7.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1052.8" y="718.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.65%)</title><rect x="1049.8" y="691.0" width="7.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1052.8" y="702.0"></text>
</g>
<g>
<title>[unknown] (17 samples, 3.67%)</title><rect x="1057.5" y="867.0" width="43.3" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1060.5" y="878.0">[unk..</text>
</g>
<g>
<title>epoll_wait (17 samples, 3.67%)</title><rect x="1057.5" y="851.0" width="43.3" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="1060.5" y="862.0">epol..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (17 samples, 3.67%)</title><rect x="1057.5" y="835.0" width="43.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1060.5" y="846.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (17 samples, 3.67%)</title><rect x="1057.5" y="819.0" width="43.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1060.5" y="830.0">do_s..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (17 samples, 3.67%)</title><rect x="1057.5" y="803.0" width="43.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1060.5" y="814.0">__x6..</text>
</g>
<g>
<title>do_epoll_wait (17 samples, 3.67%)</title><rect x="1057.5" y="787.0" width="43.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1060.5" y="798.0">do_e..</text>
</g>
<g>
<title>ep_poll (16 samples, 3.46%)</title><rect x="1060.0" y="771.0" width="40.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1063.0" y="782.0">ep_..</text>
</g>
<g>
<title>schedule_hrtimeout_range (15 samples, 3.24%)</title><rect x="1062.6" y="755.0" width="38.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1065.6" y="766.0">sch..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (15 samples, 3.24%)</title><rect x="1062.6" y="739.0" width="38.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1065.6" y="750.0">sch..</text>
</g>
<g>
<title>schedule (15 samples, 3.24%)</title><rect x="1062.6" y="723.0" width="38.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1065.6" y="734.0">sch..</text>
</g>
<g>
<title>__sched_text_start (15 samples, 3.24%)</title><rect x="1062.6" y="707.0" width="38.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1065.6" y="718.0">__s..</text>
</g>
<g>
<title>finish_task_switch (15 samples, 3.24%)</title><rect x="1062.6" y="691.0" width="38.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1065.6" y="702.0">fin..</text>
</g>
<g>
<title>one/nio/net/Session.process (35 samples, 7.56%)</title><rect x="1100.8" y="899.0" width="89.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1103.8" y="910.0">one/nio/ne..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (35 samples, 7.56%)</title><rect x="1100.8" y="883.0" width="89.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1103.8" y="894.0">one/nio/ht..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (18 samples, 3.89%)</title><rect x="1100.8" y="867.0" width="45.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1103.8" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (15 samples, 3.24%)</title><rect x="1103.3" y="851.0" width="38.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1106.3" y="862.0">one..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (15 samples, 3.24%)</title><rect x="1103.3" y="835.0" width="38.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1106.3" y="846.0">one..</text>
</g>
<g>
<title>RequestHandler1_getValueByKey.handleRequest (13 samples, 2.81%)</title><rect x="1103.3" y="819.0" width="33.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1106.3" y="830.0">Re..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/AsyncHttpServerImpl.getValueByKey (13 samples, 2.81%)</title><rect x="1103.3" y="803.0" width="33.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1106.3" y="814.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/AsyncHttpServerImpl.executeAsync (13 samples, 2.81%)</title><rect x="1103.3" y="787.0" width="33.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1106.3" y="798.0">ru..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (13 samples, 2.81%)</title><rect x="1103.3" y="771.0" width="33.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1106.3" y="782.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (13 samples, 2.81%)</title><rect x="1103.3" y="755.0" width="33.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1106.3" y="766.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.22%)</title><rect x="1103.3" y="739.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1106.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.signal (1 samples, 0.22%)</title><rect x="1103.3" y="723.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.doSignal (1 samples, 0.22%)</title><rect x="1103.3" y="707.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1106.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.transferForSignal (1 samples, 0.22%)</title><rect x="1103.3" y="691.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1106.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.enq (1 samples, 0.22%)</title><rect x="1103.3" y="675.0" width="2.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1106.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (12 samples, 2.59%)</title><rect x="1105.9" y="739.0" width="30.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1108.9" y="750.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (12 samples, 2.59%)</title><rect x="1105.9" y="723.0" width="30.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1108.9" y="734.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (12 samples, 2.59%)</title><rect x="1105.9" y="707.0" width="30.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1108.9" y="718.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (12 samples, 2.59%)</title><rect x="1105.9" y="691.0" width="30.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1108.9" y="702.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (12 samples, 2.59%)</title><rect x="1105.9" y="675.0" width="30.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1108.9" y="686.0">jd..</text>
</g>
<g>
<title>Unsafe_Unpark (3 samples, 0.65%)</title><rect x="1105.9" y="659.0" width="7.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1108.9" y="670.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.22%)</title><rect x="1105.9" y="643.0" width="2.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1108.9" y="654.0"></text>
</g>
<g>
<title>java_lang_Thread::park_event(oopDesc*) (1 samples, 0.22%)</title><rect x="1108.4" y="643.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1111.4" y="654.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.22%)</title><rect x="1111.0" y="643.0" width="2.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1114.0" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (9 samples, 1.94%)</title><rect x="1113.5" y="659.0" width="23.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1116.5" y="670.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 1.94%)</title><rect x="1113.5" y="643.0" width="23.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.5" y="654.0">e..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 1.94%)</title><rect x="1113.5" y="627.0" width="23.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1116.5" y="638.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (9 samples, 1.94%)</title><rect x="1113.5" y="611.0" width="23.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1116.5" y="622.0">_..</text>
</g>
<g>
<title>do_futex (9 samples, 1.94%)</title><rect x="1113.5" y="595.0" width="23.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1116.5" y="606.0">d..</text>
</g>
<g>
<title>futex_wake (9 samples, 1.94%)</title><rect x="1113.5" y="579.0" width="23.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1116.5" y="590.0">f..</text>
</g>
<g>
<title>wake_up_q (9 samples, 1.94%)</title><rect x="1113.5" y="563.0" width="23.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1116.5" y="574.0">w..</text>
</g>
<g>
<title>try_to_wake_up (9 samples, 1.94%)</title><rect x="1113.5" y="547.0" width="23.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1116.5" y="558.0">t..</text>
</g>
<g>
<title>__lock_text_start (9 samples, 1.94%)</title><rect x="1113.5" y="531.0" width="23.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1116.5" y="542.0">_..</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.22%)</title><rect x="1136.5" y="819.0" width="2.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1139.5" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.22%)</title><rect x="1136.5" y="803.0" width="2.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1139.5" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.22%)</title><rect x="1136.5" y="787.0" width="2.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1139.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.22%)</title><rect x="1136.5" y="771.0" width="2.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1139.5" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.22%)</title><rect x="1136.5" y="755.0" width="2.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1139.5" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.22%)</title><rect x="1139.0" y="819.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1142.0" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.22%)</title><rect x="1139.0" y="803.0" width="2.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1142.0" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.22%)</title><rect x="1139.0" y="787.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1142.0" y="798.0"></text>
</g>
<g>
<title>RequestHandler1_getValueByKey.handleRequest (1 samples, 0.22%)</title><rect x="1139.0" y="771.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1142.0" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.22%)</title><rect x="1141.6" y="851.0" width="2.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1144.6" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.22%)</title><rect x="1144.1" y="851.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1147.1" y="862.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.22%)</title><rect x="1144.1" y="835.0" width="2.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1147.1" y="846.0"></text>
</g>
<g>
<title>OptoRuntime::new_instance_C(Klass*, JavaThread*) (1 samples, 0.22%)</title><rect x="1144.1" y="819.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1147.1" y="830.0"></text>
</g>
<g>
<title>InstanceKlass::allocate_instance(Thread*) (1 samples, 0.22%)</title><rect x="1144.1" y="803.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1147.1" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::obj_allocate(Klass*, int, Thread*) (1 samples, 0.22%)</title><rect x="1144.1" y="787.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1147.1" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.22%)</title><rect x="1144.1" y="771.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1147.1" y="782.0"></text>
</g>
<g>
<title>MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&amp;) const (1 samples, 0.22%)</title><rect x="1144.1" y="755.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1147.1" y="766.0"></text>
</g>
<g>
<title>G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*) (1 samples, 0.22%)</title><rect x="1144.1" y="739.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.1" y="750.0"></text>
</g>
<g>
<title>G1CollectedHeap::attempt_allocation_slow(unsigned long) (1 samples, 0.22%)</title><rect x="1144.1" y="723.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1147.1" y="734.0"></text>
</g>
<g>
<title>G1AllocRegion::new_alloc_region_and_allocate(unsigned long, bool) (1 samples, 0.22%)</title><rect x="1144.1" y="707.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1147.1" y="718.0"></text>
</g>
<g>
<title>G1CollectedHeap::new_mutator_alloc_region(unsigned long, bool) (1 samples, 0.22%)</title><rect x="1144.1" y="691.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.1" y="702.0"></text>
</g>
<g>
<title>G1RemSetTrackingPolicy::update_at_allocate(HeapRegion*) (1 samples, 0.22%)</title><rect x="1144.1" y="675.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1147.1" y="686.0"></text>
</g>
<g>
<title>G1FromCardCache::clear(unsigned int) (1 samples, 0.22%)</title><rect x="1144.1" y="659.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1147.1" y="670.0"></text>
</g>
<g>
<title>G1ConcurrentRefine::max_num_threads() (1 samples, 0.22%)</title><rect x="1144.1" y="643.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1147.1" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (17 samples, 3.67%)</title><rect x="1146.7" y="867.0" width="43.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1149.7" y="878.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (17 samples, 3.67%)</title><rect x="1146.7" y="851.0" width="43.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1149.7" y="862.0">one/..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 0.86%)</title><rect x="1146.7" y="835.0" width="10.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1149.7" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.22%)</title><rect x="1146.7" y="819.0" width="2.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1149.7" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.22%)</title><rect x="1149.2" y="819.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1152.2" y="830.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.43%)</title><rect x="1151.8" y="819.0" width="5.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1154.8" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.22%)</title><rect x="1154.3" y="803.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.3" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="1154.3" y="787.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1157.3" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="1154.3" y="771.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1157.3" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="1154.3" y="755.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1157.3" y="766.0"></text>
</g>
<g>
<title>__recv (13 samples, 2.81%)</title><rect x="1156.9" y="835.0" width="33.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="1159.9" y="846.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (11 samples, 2.38%)</title><rect x="1162.0" y="819.0" width="28.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1165.0" y="830.0">en..</text>
</g>
<g>
<title>do_syscall_64 (11 samples, 2.38%)</title><rect x="1162.0" y="803.0" width="28.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1165.0" y="814.0">do..</text>
</g>
<g>
<title>__x64_sys_recvfrom (11 samples, 2.38%)</title><rect x="1162.0" y="787.0" width="28.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1165.0" y="798.0">__..</text>
</g>
<g>
<title>__sys_recvfrom (11 samples, 2.38%)</title><rect x="1162.0" y="771.0" width="28.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1165.0" y="782.0">__..</text>
</g>
<g>
<title>sock_recvmsg (9 samples, 1.94%)</title><rect x="1164.5" y="755.0" width="23.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1167.5" y="766.0">s..</text>
</g>
<g>
<title>inet6_recvmsg (7 samples, 1.51%)</title><rect x="1164.5" y="739.0" width="17.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1167.5" y="750.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.22%)</title><rect x="1164.5" y="723.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1167.5" y="734.0"></text>
</g>
<g>
<title>tcp_recvmsg (6 samples, 1.30%)</title><rect x="1167.1" y="723.0" width="15.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1170.1" y="734.0"></text>
</g>
<g>
<title>__kfree_skb (2 samples, 0.43%)</title><rect x="1167.1" y="707.0" width="5.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1170.1" y="718.0"></text>
</g>
<g>
<title>skb_release_all (2 samples, 0.43%)</title><rect x="1167.1" y="691.0" width="5.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1170.1" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.22%)</title><rect x="1167.1" y="675.0" width="2.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1170.1" y="686.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.22%)</title><rect x="1167.1" y="659.0" width="2.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1170.1" y="670.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.22%)</title><rect x="1169.6" y="675.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1172.6" y="686.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.22%)</title><rect x="1172.2" y="707.0" width="2.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1175.2" y="718.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.22%)</title><rect x="1172.2" y="691.0" width="2.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1175.2" y="702.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.22%)</title><rect x="1172.2" y="675.0" width="2.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1175.2" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.22%)</title><rect x="1174.7" y="707.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1177.7" y="718.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.22%)</title><rect x="1174.7" y="691.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1177.7" y="702.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 0.22%)</title><rect x="1174.7" y="675.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1177.7" y="686.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.22%)</title><rect x="1174.7" y="659.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1177.7" y="670.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.22%)</title><rect x="1177.3" y="707.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1180.3" y="718.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.22%)</title><rect x="1179.8" y="707.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1182.8" y="718.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.22%)</title><rect x="1179.8" y="691.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1182.8" y="702.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.22%)</title><rect x="1179.8" y="675.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.8" y="686.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 0.43%)</title><rect x="1182.4" y="739.0" width="5.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1185.4" y="750.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 0.43%)</title><rect x="1182.4" y="723.0" width="5.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1185.4" y="734.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 0.43%)</title><rect x="1182.4" y="707.0" width="5.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1185.4" y="718.0"></text>
</g>
<g>
<title>aa_sk_perm (2 samples, 0.43%)</title><rect x="1182.4" y="691.0" width="5.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1185.4" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.22%)</title><rect x="1187.5" y="755.0" width="2.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1190.5" y="766.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.22%)</title><rect x="1187.5" y="739.0" width="2.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1190.5" y="750.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.22%)</title><rect x="1187.5" y="723.0" width="2.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1190.5" y="734.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.22%)</title><rect x="1187.5" y="707.0" width="2.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1190.5" y="718.0"></text>
</g>
</g>
</svg>
