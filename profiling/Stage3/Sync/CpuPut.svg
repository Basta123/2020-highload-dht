<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="998" onload="init(evt)" viewBox="0 0 1200 998" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="981"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="981"> </text>
<g id="frames">
<g>
<title>all (320 samples, 100.00%)</title><rect x="10.0" y="947.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="958.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (320 samples, 100.00%)</title><rect x="10.0" y="931.0" width="1180.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="13.0" y="942.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (47 samples, 14.69%)</title><rect x="10.0" y="915.0" width="173.3" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="13.0" y="926.0">one/nio/net/NativeSele..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (43 samples, 13.44%)</title><rect x="24.8" y="899.0" width="158.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="27.8" y="910.0">one/nio/net/NativeSe..</text>
</g>
<g>
<title>[unknown] (40 samples, 12.50%)</title><rect x="32.1" y="883.0" width="147.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="35.1" y="894.0">[unknown]</text>
</g>
<g>
<title>[unknown] (1 samples, 0.31%)</title><rect x="32.1" y="867.0" width="3.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="35.1" y="878.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.31%)</title><rect x="32.1" y="851.0" width="3.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="35.1" y="862.0"></text>
</g>
<g>
<title>epoll_wait (39 samples, 12.19%)</title><rect x="35.8" y="867.0" width="143.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="38.8" y="878.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (36 samples, 11.25%)</title><rect x="46.9" y="851.0" width="132.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="49.9" y="862.0">entry_SYSCALL_64..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.31%)</title><rect x="46.9" y="835.0" width="3.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="49.9" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (35 samples, 10.94%)</title><rect x="50.6" y="835.0" width="129.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="53.6" y="846.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (35 samples, 10.94%)</title><rect x="50.6" y="819.0" width="129.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="53.6" y="830.0">__x64_sys_epoll_..</text>
</g>
<g>
<title>do_epoll_wait (35 samples, 10.94%)</title><rect x="50.6" y="803.0" width="129.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="53.6" y="814.0">do_epoll_wait</text>
</g>
<g>
<title>__fdget (3 samples, 0.94%)</title><rect x="50.6" y="787.0" width="11.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="53.6" y="798.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.94%)</title><rect x="50.6" y="771.0" width="11.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="53.6" y="782.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.94%)</title><rect x="50.6" y="755.0" width="11.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="53.6" y="766.0"></text>
</g>
<g>
<title>ep_poll (32 samples, 10.00%)</title><rect x="61.6" y="787.0" width="118.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="64.6" y="798.0">ep_poll</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (7 samples, 2.19%)</title><rect x="69.0" y="771.0" width="25.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="72.0" y="782.0">e..</text>
</g>
<g>
<title>ep_send_events_proc (4 samples, 1.25%)</title><rect x="76.4" y="755.0" width="14.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="79.4" y="766.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (2 samples, 0.62%)</title><rect x="83.8" y="739.0" width="7.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="86.8" y="750.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.31%)</title><rect x="83.8" y="723.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="86.8" y="734.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.31%)</title><rect x="87.4" y="723.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="90.4" y="734.0"></text>
</g>
<g>
<title>mutex_lock (1 samples, 0.31%)</title><rect x="91.1" y="755.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="94.1" y="766.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.31%)</title><rect x="94.8" y="771.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="97.8" y="782.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (22 samples, 6.88%)</title><rect x="98.5" y="771.0" width="81.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="101.5" y="782.0">schedule_..</text>
</g>
<g>
<title>schedule (1 samples, 0.31%)</title><rect x="98.5" y="755.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="101.5" y="766.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (21 samples, 6.56%)</title><rect x="102.2" y="755.0" width="77.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="105.2" y="766.0">schedule_..</text>
</g>
<g>
<title>schedule (21 samples, 6.56%)</title><rect x="102.2" y="739.0" width="77.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="105.2" y="750.0">schedule</text>
</g>
<g>
<title>__sched_text_start (21 samples, 6.56%)</title><rect x="102.2" y="723.0" width="77.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="105.2" y="734.0">__sched_t..</text>
</g>
<g>
<title>finish_task_switch (19 samples, 5.94%)</title><rect x="109.6" y="707.0" width="70.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="112.6" y="718.0">finish_t..</text>
</g>
<g>
<title>clock_gettime (1 samples, 0.31%)</title><rect x="179.6" y="883.0" width="3.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="182.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (273 samples, 85.31%)</title><rect x="183.3" y="915.0" width="1006.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="186.3" y="926.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (270 samples, 84.38%)</title><rect x="194.4" y="899.0" width="995.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="197.4" y="910.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (216 samples, 67.50%)</title><rect x="198.1" y="883.0" width="796.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="201.1" y="894.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (201 samples, 62.81%)</title><rect x="201.8" y="867.0" width="741.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="204.8" y="878.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (201 samples, 62.81%)</title><rect x="201.8" y="851.0" width="741.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="204.8" y="862.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>one/nio/http/PathMapper.find (4 samples, 1.25%)</title><rect x="201.8" y="835.0" width="14.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="204.8" y="846.0"></text>
</g>
<g>
<title>java/util/HashMap.get (2 samples, 0.62%)</title><rect x="209.1" y="819.0" width="7.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="212.1" y="830.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.31%)</title><rect x="209.1" y="803.0" width="3.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="212.1" y="814.0"></text>
</g>
<g>
<title>java/util/HashMap.hash (1 samples, 0.31%)</title><rect x="212.8" y="803.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="215.8" y="814.0"></text>
</g>
<g>
<title>java/lang/String.hashCode (1 samples, 0.31%)</title><rect x="212.8" y="787.0" width="3.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="215.8" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.hashCode (1 samples, 0.31%)</title><rect x="212.8" y="771.0" width="3.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="215.8" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyHttpServerImpl.handleDefault (197 samples, 61.56%)</title><rect x="216.5" y="835.0" width="726.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="219.5" y="846.0">ru/mail/polis/service/basta123/MyHttpServerImpl.handleDefault</text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.31%)</title><rect x="220.2" y="819.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="223.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (195 samples, 60.94%)</title><rect x="223.9" y="819.0" width="719.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="226.9" y="830.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (191 samples, 59.69%)</title><rect x="223.9" y="803.0" width="704.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="226.9" y="814.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (6 samples, 1.88%)</title><rect x="227.6" y="787.0" width="22.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="230.6" y="798.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (4 samples, 1.25%)</title><rect x="234.9" y="771.0" width="14.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="237.9" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (4 samples, 1.25%)</title><rect x="234.9" y="755.0" width="14.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="237.9" y="766.0"></text>
</g>
<g>
<title>java/lang/String.charAt (4 samples, 1.25%)</title><rect x="234.9" y="739.0" width="14.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="237.9" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (184 samples, 57.50%)</title><rect x="249.7" y="787.0" width="678.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="252.7" y="798.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (184 samples, 57.50%)</title><rect x="249.7" y="771.0" width="678.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="252.7" y="782.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (183 samples, 57.19%)</title><rect x="253.4" y="755.0" width="674.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="256.4" y="766.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (181 samples, 56.56%)</title><rect x="260.8" y="739.0" width="667.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="263.8" y="750.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.31%)</title><rect x="264.4" y="723.0" width="3.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="267.4" y="734.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.31%)</title><rect x="264.4" y="707.0" width="3.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="267.4" y="718.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.31%)</title><rect x="264.4" y="691.0" width="3.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="267.4" y="702.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (2 samples, 0.62%)</title><rect x="268.1" y="723.0" width="7.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="271.1" y="734.0"></text>
</g>
<g>
<title>__send (177 samples, 55.31%)</title><rect x="275.5" y="723.0" width="652.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="278.5" y="734.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (169 samples, 52.81%)</title><rect x="305.0" y="707.0" width="623.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="308.0" y="718.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (169 samples, 52.81%)</title><rect x="305.0" y="691.0" width="623.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="308.0" y="702.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (166 samples, 51.88%)</title><rect x="316.1" y="675.0" width="612.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="319.1" y="686.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (165 samples, 51.56%)</title><rect x="319.8" y="659.0" width="608.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="322.8" y="670.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (162 samples, 50.62%)</title><rect x="323.4" y="643.0" width="597.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="326.4" y="654.0">sock_sendmsg</text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.31%)</title><rect x="323.4" y="627.0" width="3.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="326.4" y="638.0"></text>
</g>
<g>
<title>inet6_sendmsg (158 samples, 49.38%)</title><rect x="327.1" y="627.0" width="582.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="330.1" y="638.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (157 samples, 49.06%)</title><rect x="330.8" y="611.0" width="579.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="333.8" y="622.0">tcp_sendmsg</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.31%)</title><rect x="334.5" y="595.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="337.5" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.31%)</title><rect x="334.5" y="579.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="337.5" y="590.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.31%)</title><rect x="338.2" y="595.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="341.2" y="606.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.31%)</title><rect x="338.2" y="579.0" width="3.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="341.2" y="590.0"></text>
</g>
<g>
<title>tcp_release_cb (1 samples, 0.31%)</title><rect x="341.9" y="595.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="344.9" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (153 samples, 47.81%)</title><rect x="345.6" y="595.0" width="564.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="348.6" y="606.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>sk_page_frag_refill (2 samples, 0.62%)</title><rect x="356.6" y="579.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="359.6" y="590.0"></text>
</g>
<g>
<title>skb_page_frag_refill (2 samples, 0.62%)</title><rect x="356.6" y="563.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="359.6" y="574.0"></text>
</g>
<g>
<title>alloc_pages_current (1 samples, 0.31%)</title><rect x="360.3" y="547.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="363.3" y="558.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.31%)</title><rect x="360.3" y="531.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="363.3" y="542.0"></text>
</g>
<g>
<title>get_page_from_freelist (1 samples, 0.31%)</title><rect x="360.3" y="515.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="363.3" y="526.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (15 samples, 4.69%)</title><rect x="364.0" y="579.0" width="55.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="367.0" y="590.0">sk_st..</text>
</g>
<g>
<title>__alloc_skb (13 samples, 4.06%)</title><rect x="367.7" y="563.0" width="47.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="370.7" y="574.0">__al..</text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.31%)</title><rect x="375.1" y="547.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="378.1" y="558.0"></text>
</g>
<g>
<title>__kmalloc_reserve.isra.62 (3 samples, 0.94%)</title><rect x="378.8" y="547.0" width="11.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="381.8" y="558.0"></text>
</g>
<g>
<title>__kmalloc_node_track_caller (1 samples, 0.31%)</title><rect x="378.8" y="531.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="381.8" y="542.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.31%)</title><rect x="378.8" y="515.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="381.8" y="526.0"></text>
</g>
<g>
<title>kmalloc_slab (1 samples, 0.31%)</title><rect x="382.4" y="531.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="385.4" y="542.0"></text>
</g>
<g>
<title>memset (1 samples, 0.31%)</title><rect x="386.1" y="531.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="389.1" y="542.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.31%)</title><rect x="389.8" y="547.0" width="3.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="392.8" y="558.0"></text>
</g>
<g>
<title>kmem_cache_alloc_node (4 samples, 1.25%)</title><rect x="393.5" y="547.0" width="14.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="396.5" y="558.0"></text>
</g>
<g>
<title>__slab_alloc (1 samples, 0.31%)</title><rect x="404.6" y="531.0" width="3.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="407.6" y="542.0"></text>
</g>
<g>
<title>should_failslab (2 samples, 0.62%)</title><rect x="408.2" y="547.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="411.2" y="558.0"></text>
</g>
<g>
<title>ksize (1 samples, 0.31%)</title><rect x="415.6" y="563.0" width="3.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="418.6" y="574.0"></text>
</g>
<g>
<title>skb_entail (2 samples, 0.62%)</title><rect x="419.3" y="579.0" width="7.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="422.3" y="590.0"></text>
</g>
<g>
<title>tcp_push (128 samples, 40.00%)</title><rect x="426.7" y="579.0" width="472.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="429.7" y="590.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (128 samples, 40.00%)</title><rect x="426.7" y="563.0" width="472.0" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="429.7" y="574.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.31%)</title><rect x="426.7" y="547.0" width="3.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="429.7" y="558.0"></text>
</g>
<g>
<title>tcp_write_xmit (127 samples, 39.69%)</title><rect x="430.4" y="547.0" width="468.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="433.4" y="558.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.31%)</title><rect x="430.4" y="531.0" width="3.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="433.4" y="542.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (113 samples, 35.31%)</title><rect x="434.1" y="531.0" width="416.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="437.1" y="542.0">__tcp_transmit_skb</text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.31%)</title><rect x="448.8" y="515.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="451.8" y="526.0"></text>
</g>
<g>
<title>__tcp_v4_send_check (1 samples, 0.31%)</title><rect x="452.5" y="515.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="455.5" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (1 samples, 0.31%)</title><rect x="456.2" y="515.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="459.2" y="526.0"></text>
</g>
<g>
<title>ip_queue_xmit (105 samples, 32.81%)</title><rect x="459.9" y="515.0" width="387.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="462.9" y="526.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (105 samples, 32.81%)</title><rect x="459.9" y="499.0" width="387.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="462.9" y="510.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (105 samples, 32.81%)</title><rect x="459.9" y="483.0" width="387.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="462.9" y="494.0">ip_local_out</text>
</g>
<g>
<title>__ip_local_out (1 samples, 0.31%)</title><rect x="459.9" y="467.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="462.9" y="478.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.31%)</title><rect x="459.9" y="451.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="462.9" y="462.0"></text>
</g>
<g>
<title>ip_output (103 samples, 32.19%)</title><rect x="463.6" y="467.0" width="379.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="466.6" y="478.0">ip_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (1 samples, 0.31%)</title><rect x="463.6" y="451.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="466.6" y="462.0"></text>
</g>
<g>
<title>ip_finish_output (102 samples, 31.88%)</title><rect x="467.2" y="451.0" width="376.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="470.2" y="462.0">ip_finish_output</text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (4 samples, 1.25%)</title><rect x="470.9" y="435.0" width="14.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="473.9" y="446.0"></text>
</g>
<g>
<title>__ip_finish_output (97 samples, 30.31%)</title><rect x="485.7" y="435.0" width="357.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="488.7" y="446.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (97 samples, 30.31%)</title><rect x="485.7" y="419.0" width="357.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="488.7" y="430.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (87 samples, 27.19%)</title><rect x="493.1" y="403.0" width="320.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="496.1" y="414.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.20 (87 samples, 27.19%)</title><rect x="493.1" y="387.0" width="320.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="496.1" y="398.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (86 samples, 26.88%)</title><rect x="496.8" y="371.0" width="317.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="499.8" y="382.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (86 samples, 26.88%)</title><rect x="496.8" y="355.0" width="317.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="499.8" y="366.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (83 samples, 25.94%)</title><rect x="507.8" y="339.0" width="306.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="510.8" y="350.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (80 samples, 25.00%)</title><rect x="518.9" y="323.0" width="295.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="521.9" y="334.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (80 samples, 25.00%)</title><rect x="518.9" y="307.0" width="295.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="521.9" y="318.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (80 samples, 25.00%)</title><rect x="518.9" y="291.0" width="295.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="521.9" y="302.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>ip_rcv (79 samples, 24.69%)</title><rect x="522.6" y="275.0" width="291.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="525.6" y="286.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (2 samples, 0.62%)</title><rect x="526.2" y="259.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="529.2" y="270.0"></text>
</g>
<g>
<title>ip_rcv_finish (76 samples, 23.75%)</title><rect x="533.6" y="259.0" width="280.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="536.6" y="270.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (76 samples, 23.75%)</title><rect x="533.6" y="243.0" width="280.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="536.6" y="254.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (76 samples, 23.75%)</title><rect x="533.6" y="227.0" width="280.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="536.6" y="238.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (76 samples, 23.75%)</title><rect x="533.6" y="211.0" width="280.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="536.6" y="222.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>sk_filter_trim_cap (1 samples, 0.31%)</title><rect x="533.6" y="195.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="536.6" y="206.0"></text>
</g>
<g>
<title>tcp_v4_rcv (75 samples, 23.44%)</title><rect x="537.3" y="195.0" width="276.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="540.3" y="206.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (4 samples, 1.25%)</title><rect x="552.1" y="179.0" width="14.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="555.1" y="190.0"></text>
</g>
<g>
<title>sk_filter_trim_cap (2 samples, 0.62%)</title><rect x="566.8" y="179.0" width="7.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="569.8" y="190.0"></text>
</g>
<g>
<title>__cgroup_bpf_run_filter_skb (2 samples, 0.62%)</title><rect x="566.8" y="163.0" width="7.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="569.8" y="174.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.62%)</title><rect x="574.2" y="179.0" width="7.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="577.2" y="190.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (62 samples, 19.38%)</title><rect x="581.6" y="179.0" width="228.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="584.6" y="190.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (62 samples, 19.38%)</title><rect x="581.6" y="163.0" width="228.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="584.6" y="174.0">tcp_rcv_established</text>
</g>
<g>
<title>__tcp_ack_snd_check (3 samples, 0.94%)</title><rect x="585.2" y="147.0" width="11.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="588.2" y="158.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (3 samples, 0.94%)</title><rect x="585.2" y="131.0" width="11.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="588.2" y="142.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.62%)</title><rect x="588.9" y="115.0" width="7.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="591.9" y="126.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.62%)</title><rect x="588.9" y="99.0" width="7.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="591.9" y="110.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.31%)</title><rect x="592.6" y="83.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="595.6" y="94.0"></text>
</g>
<g>
<title>bictcp_cong_avoid (1 samples, 0.31%)</title><rect x="596.3" y="147.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="599.3" y="158.0"></text>
</g>
<g>
<title>tcp_ack (21 samples, 6.56%)</title><rect x="600.0" y="147.0" width="77.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="603.0" y="158.0">tcp_ack</text>
</g>
<g>
<title>bictcp_acked (2 samples, 0.62%)</title><rect x="611.1" y="131.0" width="7.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="614.1" y="142.0"></text>
</g>
<g>
<title>tcp_chrono_stop (1 samples, 0.31%)</title><rect x="618.4" y="131.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="621.4" y="142.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (14 samples, 4.38%)</title><rect x="622.1" y="131.0" width="51.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="625.1" y="142.0">tcp_c..</text>
</g>
<g>
<title>__kfree_skb (11 samples, 3.44%)</title><rect x="625.8" y="115.0" width="40.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="628.8" y="126.0">__k..</text>
</g>
<g>
<title>kfree_skbmem (5 samples, 1.56%)</title><rect x="625.8" y="99.0" width="18.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="628.8" y="110.0"></text>
</g>
<g>
<title>kmem_cache_free (5 samples, 1.56%)</title><rect x="625.8" y="83.0" width="18.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="628.8" y="94.0"></text>
</g>
<g>
<title>__slab_free (2 samples, 0.62%)</title><rect x="636.9" y="67.0" width="7.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="639.9" y="78.0"></text>
</g>
<g>
<title>skb_release_all (5 samples, 1.56%)</title><rect x="644.2" y="99.0" width="18.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="647.2" y="110.0"></text>
</g>
<g>
<title>skb_release_data (5 samples, 1.56%)</title><rect x="644.2" y="83.0" width="18.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="647.2" y="94.0"></text>
</g>
<g>
<title>skb_free_head (3 samples, 0.94%)</title><rect x="651.6" y="67.0" width="11.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="654.6" y="78.0"></text>
</g>
<g>
<title>kfree (3 samples, 0.94%)</title><rect x="651.6" y="51.0" width="11.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="654.6" y="62.0"></text>
</g>
<g>
<title>__slab_free (1 samples, 0.31%)</title><rect x="659.0" y="35.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="662.0" y="46.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.31%)</title><rect x="662.7" y="99.0" width="3.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="665.7" y="110.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (2 samples, 0.62%)</title><rect x="666.4" y="115.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="669.4" y="126.0"></text>
</g>
<g>
<title>tcp_rack_update_reo_wnd (1 samples, 0.31%)</title><rect x="673.8" y="131.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="676.8" y="142.0"></text>
</g>
<g>
<title>tcp_check_space (2 samples, 0.62%)</title><rect x="677.4" y="147.0" width="7.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="680.4" y="158.0"></text>
</g>
<g>
<title>tcp_data_ready (31 samples, 9.69%)</title><rect x="684.8" y="147.0" width="114.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="687.8" y="158.0">tcp_data_ready</text>
</g>
<g>
<title>sock_def_readable (31 samples, 9.69%)</title><rect x="684.8" y="131.0" width="114.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="687.8" y="142.0">sock_def_reada..</text>
</g>
<g>
<title>__wake_up_sync_key (30 samples, 9.38%)</title><rect x="688.5" y="115.0" width="110.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="691.5" y="126.0">__wake_up_syn..</text>
</g>
<g>
<title>__wake_up_common_lock (30 samples, 9.38%)</title><rect x="688.5" y="99.0" width="110.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="691.5" y="110.0">__wake_up_com..</text>
</g>
<g>
<title>__lock_text_start (30 samples, 9.38%)</title><rect x="688.5" y="83.0" width="110.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="691.5" y="94.0">__lock_text_s..</text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 0.31%)</title><rect x="799.1" y="147.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="802.1" y="158.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.62%)</title><rect x="802.8" y="147.0" width="7.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="805.8" y="158.0"></text>
</g>
<g>
<title>tcp_v4_inbound_md5_hash (1 samples, 0.31%)</title><rect x="810.2" y="179.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="813.2" y="190.0"></text>
</g>
<g>
<title>dev_queue_xmit (8 samples, 2.50%)</title><rect x="813.9" y="403.0" width="29.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="816.9" y="414.0">de..</text>
</g>
<g>
<title>__dev_queue_xmit (8 samples, 2.50%)</title><rect x="813.9" y="387.0" width="29.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="816.9" y="398.0">__..</text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.62%)</title><rect x="821.2" y="371.0" width="7.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="824.2" y="382.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.31%)</title><rect x="821.2" y="355.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="824.2" y="366.0"></text>
</g>
<g>
<title>tcp_wfree (1 samples, 0.31%)</title><rect x="821.2" y="339.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="824.2" y="350.0"></text>
</g>
<g>
<title>skb_clone_tx_timestamp (1 samples, 0.31%)</title><rect x="824.9" y="355.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="827.9" y="366.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.31%)</title><rect x="828.6" y="371.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="831.6" y="382.0"></text>
</g>
<g>
<title>validate_xmit_skb (3 samples, 0.94%)</title><rect x="832.3" y="371.0" width="11.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="835.3" y="382.0"></text>
</g>
<g>
<title>skb_network_protocol (1 samples, 0.31%)</title><rect x="839.7" y="355.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="842.7" y="366.0"></text>
</g>
<g>
<title>ip_send_check (1 samples, 0.31%)</title><rect x="843.4" y="467.0" width="3.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="846.4" y="478.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.31%)</title><rect x="847.1" y="515.0" width="3.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="850.1" y="526.0"></text>
</g>
<g>
<title>bictcp_cwnd_event (2 samples, 0.62%)</title><rect x="850.8" y="531.0" width="7.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="853.8" y="542.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.62%)</title><rect x="858.1" y="531.0" width="7.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="861.1" y="542.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.31%)</title><rect x="865.5" y="531.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="868.5" y="542.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (4 samples, 1.25%)</title><rect x="869.2" y="531.0" width="14.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="872.2" y="542.0"></text>
</g>
<g>
<title>tcp_rearm_rto (4 samples, 1.25%)</title><rect x="869.2" y="515.0" width="14.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="872.2" y="526.0"></text>
</g>
<g>
<title>sk_reset_timer (3 samples, 0.94%)</title><rect x="872.9" y="499.0" width="11.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="875.9" y="510.0"></text>
</g>
<g>
<title>mod_timer (3 samples, 0.94%)</title><rect x="872.9" y="483.0" width="11.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="875.9" y="494.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.94%)</title><rect x="872.9" y="467.0" width="11.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="875.9" y="478.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 0.31%)</title><rect x="883.9" y="531.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="886.9" y="542.0"></text>
</g>
<g>
<title>tcp_rbtree_insert (1 samples, 0.31%)</title><rect x="887.6" y="531.0" width="3.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="890.6" y="542.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (2 samples, 0.62%)</title><rect x="891.3" y="531.0" width="7.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="894.3" y="542.0"></text>
</g>
<g>
<title>sk_reset_timer (2 samples, 0.62%)</title><rect x="891.3" y="515.0" width="7.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="894.3" y="526.0"></text>
</g>
<g>
<title>mod_timer (2 samples, 0.62%)</title><rect x="891.3" y="499.0" width="7.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="894.3" y="510.0"></text>
</g>
<g>
<title>tcp_rate_check_app_limited (1 samples, 0.31%)</title><rect x="898.7" y="579.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="901.7" y="590.0"></text>
</g>
<g>
<title>tcp_send_mss (2 samples, 0.62%)</title><rect x="902.4" y="579.0" width="7.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="905.4" y="590.0"></text>
</g>
<g>
<title>ipv4_mtu (1 samples, 0.31%)</title><rect x="902.4" y="563.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="905.4" y="574.0"></text>
</g>
<g>
<title>tcp_current_mss (1 samples, 0.31%)</title><rect x="906.1" y="563.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="909.1" y="574.0"></text>
</g>
<g>
<title>security_socket_sendmsg (2 samples, 0.62%)</title><rect x="909.8" y="627.0" width="7.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="912.8" y="638.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.31%)</title><rect x="909.8" y="611.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="912.8" y="622.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.31%)</title><rect x="913.4" y="611.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="916.4" y="622.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.31%)</title><rect x="913.4" y="595.0" width="3.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="916.4" y="606.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.31%)</title><rect x="913.4" y="579.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="916.4" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (1 samples, 0.31%)</title><rect x="917.1" y="627.0" width="3.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="920.1" y="638.0"></text>
</g>
<g>
<title>sockfd_lookup_light (2 samples, 0.62%)</title><rect x="920.8" y="643.0" width="7.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="923.8" y="654.0"></text>
</g>
<g>
<title>__fdget (2 samples, 0.62%)</title><rect x="920.8" y="627.0" width="7.4" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="923.8" y="638.0"></text>
</g>
<g>
<title>__fget_light (2 samples, 0.62%)</title><rect x="920.8" y="611.0" width="7.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="923.8" y="622.0"></text>
</g>
<g>
<title>__fget (2 samples, 0.62%)</title><rect x="920.8" y="595.0" width="7.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="923.8" y="606.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (4 samples, 1.25%)</title><rect x="928.2" y="803.0" width="14.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="931.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (4 samples, 1.25%)</title><rect x="928.2" y="787.0" width="14.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="931.2" y="798.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (4 samples, 1.25%)</title><rect x="928.2" y="771.0" width="14.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="931.2" y="782.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.62%)</title><rect x="931.9" y="755.0" width="7.4" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="934.9" y="766.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (2 samples, 0.62%)</title><rect x="931.9" y="739.0" width="7.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="934.9" y="750.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.31%)</title><rect x="939.2" y="755.0" width="3.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="942.2" y="766.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (8 samples, 2.50%)</title><rect x="942.9" y="867.0" width="29.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="945.9" y="878.0">on..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.31%)</title><rect x="961.4" y="851.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="964.4" y="862.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.31%)</title><rect x="961.4" y="835.0" width="3.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="964.4" y="846.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.31%)</title><rect x="961.4" y="819.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="964.4" y="830.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.31%)</title><rect x="961.4" y="803.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="964.4" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (2 samples, 0.62%)</title><rect x="965.1" y="851.0" width="7.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="968.1" y="862.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (5 samples, 1.56%)</title><rect x="972.4" y="867.0" width="18.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="975.4" y="878.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (2 samples, 0.62%)</title><rect x="983.5" y="851.0" width="7.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="986.5" y="862.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (2 samples, 0.62%)</title><rect x="983.5" y="835.0" width="7.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="986.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.62%)</title><rect x="983.5" y="819.0" width="7.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="986.5" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.31%)</title><rect x="990.9" y="867.0" width="3.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="993.9" y="878.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.31%)</title><rect x="990.9" y="851.0" width="3.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="993.9" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.31%)</title><rect x="994.6" y="883.0" width="3.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="997.6" y="894.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (52 samples, 16.25%)</title><rect x="998.2" y="883.0" width="191.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1001.2" y="894.0">one/nio/net/Session.read</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (52 samples, 16.25%)</title><rect x="998.2" y="867.0" width="191.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1001.2" y="878.0">one/nio/net/NativeSocket...</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (12 samples, 3.75%)</title><rect x="998.2" y="851.0" width="44.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1001.2" y="862.0">Java..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.31%)</title><rect x="998.2" y="835.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1001.2" y="846.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned (1 samples, 0.31%)</title><rect x="1001.9" y="835.0" width="3.7" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1004.9" y="846.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.31%)</title><rect x="1005.6" y="835.0" width="3.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1008.6" y="846.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (7 samples, 2.19%)</title><rect x="1009.3" y="835.0" width="25.8" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="1012.3" y="846.0">j..</text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.31%)</title><rect x="1013.0" y="819.0" width="3.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1016.0" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (2 samples, 0.62%)</title><rect x="1016.7" y="819.0" width="7.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1019.7" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.62%)</title><rect x="1024.1" y="819.0" width="7.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1027.1" y="830.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.31%)</title><rect x="1031.4" y="819.0" width="3.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1034.4" y="830.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.31%)</title><rect x="1031.4" y="803.0" width="3.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1034.4" y="814.0"></text>
</g>
<g>
<title>memmove@plt (1 samples, 0.31%)</title><rect x="1035.1" y="835.0" width="3.7" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="1038.1" y="846.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.31%)</title><rect x="1038.8" y="835.0" width="3.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1041.8" y="846.0"></text>
</g>
<g>
<title>__pthread_disable_asynccancel (1 samples, 0.31%)</title><rect x="1042.5" y="851.0" width="3.7" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1045.5" y="862.0"></text>
</g>
<g>
<title>__recv (37 samples, 11.56%)</title><rect x="1046.2" y="851.0" width="136.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1049.2" y="862.0">__recv</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (28 samples, 8.75%)</title><rect x="1079.4" y="835.0" width="103.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1082.4" y="846.0">entry_SYSCAL..</text>
</g>
<g>
<title>do_syscall_64 (28 samples, 8.75%)</title><rect x="1079.4" y="819.0" width="103.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1082.4" y="830.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_recvfrom (28 samples, 8.75%)</title><rect x="1079.4" y="803.0" width="103.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1082.4" y="814.0">__x64_sys_re..</text>
</g>
<g>
<title>__sys_recvfrom (27 samples, 8.44%)</title><rect x="1079.4" y="787.0" width="99.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1082.4" y="798.0">__sys_recvfrom</text>
</g>
<g>
<title>fput (1 samples, 0.31%)</title><rect x="1079.4" y="771.0" width="3.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1082.4" y="782.0"></text>
</g>
<g>
<title>fput_many (1 samples, 0.31%)</title><rect x="1079.4" y="755.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1082.4" y="766.0"></text>
</g>
<g>
<title>sock_recvmsg (23 samples, 7.19%)</title><rect x="1083.1" y="771.0" width="84.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1086.1" y="782.0">sock_recvmsg</text>
</g>
<g>
<title>inet6_recvmsg (20 samples, 6.25%)</title><rect x="1083.1" y="755.0" width="73.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1086.1" y="766.0">inet6_re..</text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.31%)</title><rect x="1083.1" y="739.0" width="3.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1086.1" y="750.0"></text>
</g>
<g>
<title>apic_timer_interrupt (1 samples, 0.31%)</title><rect x="1083.1" y="723.0" width="3.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1086.1" y="734.0"></text>
</g>
<g>
<title>smp_apic_timer_interrupt (1 samples, 0.31%)</title><rect x="1083.1" y="707.0" width="3.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1086.1" y="718.0"></text>
</g>
<g>
<title>irq_exit (1 samples, 0.31%)</title><rect x="1083.1" y="691.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1086.1" y="702.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.31%)</title><rect x="1083.1" y="675.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1086.1" y="686.0"></text>
</g>
<g>
<title>tcp_recvmsg (19 samples, 5.94%)</title><rect x="1086.8" y="739.0" width="70.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1089.8" y="750.0">tcp_recv..</text>
</g>
<g>
<title>__kfree_skb (6 samples, 1.88%)</title><rect x="1094.1" y="723.0" width="22.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1097.1" y="734.0">_..</text>
</g>
<g>
<title>skb_release_all (6 samples, 1.88%)</title><rect x="1094.1" y="707.0" width="22.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1097.1" y="718.0">s..</text>
</g>
<g>
<title>dst_release (2 samples, 0.62%)</title><rect x="1094.1" y="691.0" width="7.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1097.1" y="702.0"></text>
</g>
<g>
<title>skb_release_data (2 samples, 0.62%)</title><rect x="1101.5" y="691.0" width="7.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1104.5" y="702.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.31%)</title><rect x="1108.9" y="691.0" width="3.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1111.9" y="702.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.31%)</title><rect x="1108.9" y="675.0" width="3.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1111.9" y="686.0"></text>
</g>
<g>
<title>sock_rfree (1 samples, 0.31%)</title><rect x="1112.6" y="691.0" width="3.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1115.6" y="702.0"></text>
</g>
<g>
<title>__tcp_select_window (1 samples, 0.31%)</title><rect x="1116.2" y="723.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1119.2" y="734.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.31%)</title><rect x="1119.9" y="723.0" width="3.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1122.9" y="734.0"></text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.31%)</title><rect x="1123.6" y="723.0" width="3.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1126.6" y="734.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.31%)</title><rect x="1123.6" y="707.0" width="3.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1126.6" y="718.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (3 samples, 0.94%)</title><rect x="1127.3" y="723.0" width="11.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1130.3" y="734.0"></text>
</g>
<g>
<title>__skb_datagram_iter (3 samples, 0.94%)</title><rect x="1127.3" y="707.0" width="11.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1130.3" y="718.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.62%)</title><rect x="1138.4" y="723.0" width="7.4" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1141.4" y="734.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (3 samples, 0.94%)</title><rect x="1145.8" y="723.0" width="11.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1148.8" y="734.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (3 samples, 0.94%)</title><rect x="1145.8" y="707.0" width="11.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1148.8" y="718.0"></text>
</g>
<g>
<title>ktime_get (2 samples, 0.62%)</title><rect x="1145.8" y="691.0" width="7.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1148.8" y="702.0"></text>
</g>
<g>
<title>read_tsc (2 samples, 0.62%)</title><rect x="1145.8" y="675.0" width="7.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1148.8" y="686.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.31%)</title><rect x="1153.1" y="691.0" width="3.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1156.1" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (3 samples, 0.94%)</title><rect x="1156.8" y="755.0" width="11.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1159.8" y="766.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (3 samples, 0.94%)</title><rect x="1156.8" y="739.0" width="11.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1159.8" y="750.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (3 samples, 0.94%)</title><rect x="1156.8" y="723.0" width="11.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1159.8" y="734.0"></text>
</g>
<g>
<title>aa_sk_perm (3 samples, 0.94%)</title><rect x="1156.8" y="707.0" width="11.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1159.8" y="718.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.31%)</title><rect x="1164.2" y="691.0" width="3.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1167.2" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (3 samples, 0.94%)</title><rect x="1167.9" y="771.0" width="11.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1170.9" y="782.0"></text>
</g>
<g>
<title>__fdget (3 samples, 0.94%)</title><rect x="1167.9" y="755.0" width="11.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1170.9" y="766.0"></text>
</g>
<g>
<title>__fget_light (3 samples, 0.94%)</title><rect x="1167.9" y="739.0" width="11.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1170.9" y="750.0"></text>
</g>
<g>
<title>__fget (3 samples, 0.94%)</title><rect x="1167.9" y="723.0" width="11.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1170.9" y="734.0"></text>
</g>
<g>
<title>import_single_range (1 samples, 0.31%)</title><rect x="1178.9" y="787.0" width="3.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1181.9" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.62%)</title><rect x="1182.6" y="851.0" width="7.4" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1185.6" y="862.0"></text>
</g>
</g>
</svg>
