<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (374 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=6052] (95 samples, 25.40%)</title><rect x="10.0" y="899.0" width="299.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="910.0">[NIO Selector #0 tid=6052]</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.27%)</title><rect x="10.0" y="883.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.27%)</title><rect x="10.0" y="867.0" width="3.2" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.80%)</title><rect x="13.2" y="883.0" width="9.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="16.2" y="894.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (3 samples, 0.80%)</title><rect x="13.2" y="867.0" width="9.4" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="16.2" y="878.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (3 samples, 0.80%)</title><rect x="13.2" y="851.0" width="9.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.2" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.80%)</title><rect x="13.2" y="835.0" width="9.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.2" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.80%)</title><rect x="13.2" y="819.0" width="9.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="16.2" y="830.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.80%)</title><rect x="13.2" y="803.0" width="9.4" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.2" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (3 samples, 0.80%)</title><rect x="13.2" y="787.0" width="9.4" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.2" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (3 samples, 0.80%)</title><rect x="13.2" y="771.0" width="9.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.2" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (3 samples, 0.80%)</title><rect x="13.2" y="755.0" width="9.4" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="16.2" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.80%)</title><rect x="13.2" y="739.0" width="9.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.2" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.80%)</title><rect x="13.2" y="723.0" width="9.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.2" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.80%)</title><rect x="13.2" y="707.0" width="9.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="16.2" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.80%)</title><rect x="13.2" y="691.0" width="9.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="16.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.80%)</title><rect x="13.2" y="675.0" width="9.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="16.2" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.80%)</title><rect x="13.2" y="659.0" width="9.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.2" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (3 samples, 0.80%)</title><rect x="13.2" y="643.0" width="9.4" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="16.2" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (2 samples, 0.53%)</title><rect x="13.2" y="627.0" width="6.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="16.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.53%)</title><rect x="13.2" y="611.0" width="6.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.53%)</title><rect x="13.2" y="595.0" width="6.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="16.2" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="13.2" y="579.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="16.2" y="590.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.27%)</title><rect x="13.2" y="563.0" width="3.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="16.2" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="13.2" y="547.0" width="3.1" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="16.2" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="13.2" y="531.0" width="3.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.2" y="542.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.27%)</title><rect x="13.2" y="515.0" width="3.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="16.2" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="16.3" y="579.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="19.3" y="590.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.27%)</title><rect x="16.3" y="563.0" width="3.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="19.3" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="16.3" y="547.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="19.3" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="16.3" y="531.0" width="3.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="19.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.27%)</title><rect x="19.5" y="627.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="22.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.27%)</title><rect x="19.5" y="611.0" width="3.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.5" y="622.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="19.5" y="595.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="22.5" y="606.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.27%)</title><rect x="19.5" y="579.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="22.5" y="590.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="19.5" y="563.0" width="3.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="22.5" y="574.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="19.5" y="547.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="22.5" y="558.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.27%)</title><rect x="19.5" y="531.0" width="3.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="22.5" y="542.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (91 samples, 24.33%)</title><rect x="22.6" y="883.0" width="287.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="25.6" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.80%)</title><rect x="28.9" y="867.0" width="9.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="31.9" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.80%)</title><rect x="28.9" y="851.0" width="9.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="31.9" y="862.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.80%)</title><rect x="28.9" y="835.0" width="9.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="31.9" y="846.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.80%)</title><rect x="28.9" y="819.0" width="9.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="31.9" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.80%)</title><rect x="28.9" y="803.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="31.9" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.80%)</title><rect x="28.9" y="787.0" width="9.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="31.9" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.80%)</title><rect x="28.9" y="771.0" width="9.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="31.9" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.80%)</title><rect x="28.9" y="755.0" width="9.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="31.9" y="766.0"></text>
</g>
<g>
<title>_raw_write_lock_irq (1 samples, 0.27%)</title><rect x="28.9" y="739.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="31.9" y="750.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.53%)</title><rect x="32.1" y="739.0" width="6.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="35.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.53%)</title><rect x="32.1" y="723.0" width="6.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="35.1" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.53%)</title><rect x="32.1" y="707.0" width="6.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="35.1" y="718.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.53%)</title><rect x="32.1" y="691.0" width="6.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="35.1" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.53%)</title><rect x="32.1" y="675.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="35.1" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.53%)</title><rect x="32.1" y="659.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="35.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (85 samples, 22.73%)</title><rect x="38.4" y="867.0" width="268.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="41.4" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (1 samples, 0.27%)</title><rect x="38.4" y="851.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="41.4" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (84 samples, 22.46%)</title><rect x="41.6" y="851.0" width="265.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="44.6" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (82 samples, 21.93%)</title><rect x="41.6" y="835.0" width="258.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="44.6" y="846.0">one/nio/http/HttpSession.processHt..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (76 samples, 20.32%)</title><rect x="41.6" y="819.0" width="239.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="44.6" y="830.0">one/nio/http/HttpSession.handleP..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (76 samples, 20.32%)</title><rect x="41.6" y="803.0" width="239.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.6" y="814.0">one/nio/http/HttpServer.handleRe..</text>
</g>
<g>
<title>RequestHandler3_putValueByKey.handleRequest (76 samples, 20.32%)</title><rect x="41.6" y="787.0" width="239.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="44.6" y="798.0">RequestHandler3_putValueByKey.ha..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (11 samples, 2.94%)</title><rect x="41.6" y="771.0" width="34.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="44.6" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (11 samples, 2.94%)</title><rect x="41.6" y="755.0" width="34.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="44.6" y="766.0">on..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.27%)</title><rect x="41.6" y="739.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="44.6" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.67%)</title><rect x="44.7" y="739.0" width="31.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="47.7" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (10 samples, 2.67%)</title><rect x="44.7" y="723.0" width="31.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="47.7" y="734.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (10 samples, 2.67%)</title><rect x="44.7" y="707.0" width="31.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="47.7" y="718.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (10 samples, 2.67%)</title><rect x="44.7" y="691.0" width="31.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="47.7" y="702.0">on..</text>
</g>
<g>
<title>__send (10 samples, 2.67%)</title><rect x="44.7" y="675.0" width="31.6" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="47.7" y="686.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (10 samples, 2.67%)</title><rect x="44.7" y="659.0" width="31.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="47.7" y="670.0">en..</text>
</g>
<g>
<title>do_syscall_64 (10 samples, 2.67%)</title><rect x="44.7" y="643.0" width="31.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="47.7" y="654.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (9 samples, 2.41%)</title><rect x="44.7" y="627.0" width="28.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.7" y="638.0">__..</text>
</g>
<g>
<title>__sys_sendto (9 samples, 2.41%)</title><rect x="44.7" y="611.0" width="28.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="47.7" y="622.0">__..</text>
</g>
<g>
<title>sock_sendmsg (9 samples, 2.41%)</title><rect x="44.7" y="595.0" width="28.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="47.7" y="606.0">so..</text>
</g>
<g>
<title>inet6_sendmsg (9 samples, 2.41%)</title><rect x="44.7" y="579.0" width="28.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="47.7" y="590.0">in..</text>
</g>
<g>
<title>tcp_sendmsg (9 samples, 2.41%)</title><rect x="44.7" y="563.0" width="28.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="47.7" y="574.0">tc..</text>
</g>
<g>
<title>tcp_sendmsg_locked (9 samples, 2.41%)</title><rect x="44.7" y="547.0" width="28.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="47.7" y="558.0">tc..</text>
</g>
<g>
<title>tcp_push (9 samples, 2.41%)</title><rect x="44.7" y="531.0" width="28.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="47.7" y="542.0">tc..</text>
</g>
<g>
<title>__tcp_push_pending_frames (9 samples, 2.41%)</title><rect x="44.7" y="515.0" width="28.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="47.7" y="526.0">__..</text>
</g>
<g>
<title>tcp_write_xmit (9 samples, 2.41%)</title><rect x="44.7" y="499.0" width="28.4" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="47.7" y="510.0">tc..</text>
</g>
<g>
<title>__tcp_transmit_skb (9 samples, 2.41%)</title><rect x="44.7" y="483.0" width="28.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="47.7" y="494.0">__..</text>
</g>
<g>
<title>ip_queue_xmit (9 samples, 2.41%)</title><rect x="44.7" y="467.0" width="28.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.7" y="478.0">ip..</text>
</g>
<g>
<title>__ip_queue_xmit (9 samples, 2.41%)</title><rect x="44.7" y="451.0" width="28.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="47.7" y="462.0">__..</text>
</g>
<g>
<title>ip_local_out (9 samples, 2.41%)</title><rect x="44.7" y="435.0" width="28.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="47.7" y="446.0">ip..</text>
</g>
<g>
<title>ip_output (9 samples, 2.41%)</title><rect x="44.7" y="419.0" width="28.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="47.7" y="430.0">ip..</text>
</g>
<g>
<title>ip_finish_output (9 samples, 2.41%)</title><rect x="44.7" y="403.0" width="28.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="47.7" y="414.0">ip..</text>
</g>
<g>
<title>__ip_finish_output (9 samples, 2.41%)</title><rect x="44.7" y="387.0" width="28.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="47.7" y="398.0">__..</text>
</g>
<g>
<title>ip_finish_output2 (9 samples, 2.41%)</title><rect x="44.7" y="371.0" width="28.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="47.7" y="382.0">ip..</text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 1.60%)</title><rect x="44.7" y="355.0" width="18.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="47.7" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.20 (6 samples, 1.60%)</title><rect x="44.7" y="339.0" width="18.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="47.7" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 1.60%)</title><rect x="44.7" y="323.0" width="18.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="47.7" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 1.60%)</title><rect x="44.7" y="307.0" width="18.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="47.7" y="318.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 1.60%)</title><rect x="44.7" y="291.0" width="18.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="47.7" y="302.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 1.60%)</title><rect x="44.7" y="275.0" width="18.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="47.7" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (6 samples, 1.60%)</title><rect x="44.7" y="259.0" width="18.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="47.7" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (6 samples, 1.60%)</title><rect x="44.7" y="243.0" width="18.9" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="47.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv (6 samples, 1.60%)</title><rect x="44.7" y="227.0" width="18.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="47.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (6 samples, 1.60%)</title><rect x="44.7" y="211.0" width="18.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="47.7" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (6 samples, 1.60%)</title><rect x="44.7" y="195.0" width="18.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="47.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (6 samples, 1.60%)</title><rect x="44.7" y="179.0" width="18.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="47.7" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (6 samples, 1.60%)</title><rect x="44.7" y="163.0" width="18.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="47.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (6 samples, 1.60%)</title><rect x="44.7" y="147.0" width="18.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="47.7" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (6 samples, 1.60%)</title><rect x="44.7" y="131.0" width="18.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="47.7" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (6 samples, 1.60%)</title><rect x="44.7" y="115.0" width="18.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="47.7" y="126.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.27%)</title><rect x="44.7" y="99.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="47.7" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.27%)</title><rect x="44.7" y="83.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="47.7" y="94.0"></text>
</g>
<g>
<title>tcp_ack_update_rtt.isra.45 (1 samples, 0.27%)</title><rect x="44.7" y="67.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="47.7" y="78.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 1.34%)</title><rect x="47.9" y="99.0" width="15.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="50.9" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 1.34%)</title><rect x="47.9" y="83.0" width="15.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="50.9" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 1.34%)</title><rect x="47.9" y="67.0" width="15.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="50.9" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 1.34%)</title><rect x="47.9" y="51.0" width="15.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="50.9" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.34%)</title><rect x="47.9" y="35.0" width="15.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="50.9" y="46.0"></text>
</g>
<g>
<title>dev_queue_xmit (3 samples, 0.80%)</title><rect x="63.6" y="355.0" width="9.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="66.6" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (3 samples, 0.80%)</title><rect x="63.6" y="339.0" width="9.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="66.6" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (2 samples, 0.53%)</title><rect x="66.8" y="323.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="69.8" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (2 samples, 0.53%)</title><rect x="66.8" y="307.0" width="6.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="69.8" y="318.0"></text>
</g>
<g>
<title>eth_type_trans (1 samples, 0.27%)</title><rect x="69.9" y="291.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="72.9" y="302.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="73.1" y="627.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="76.1" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.27%)</title><rect x="73.1" y="611.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="76.1" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.27%)</title><rect x="73.1" y="595.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="76.1" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.27%)</title><rect x="73.1" y="579.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="76.1" y="590.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.53%)</title><rect x="76.3" y="771.0" width="6.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="79.3" y="782.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.27%)</title><rect x="79.4" y="755.0" width="3.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="82.4" y="766.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyHttpServerImpl.putValueByKey (63 samples, 16.84%)</title><rect x="82.6" y="771.0" width="198.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="85.6" y="782.0">ru/mail/polis/service/bast..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.upsert (63 samples, 16.84%)</title><rect x="82.6" y="755.0" width="198.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="85.6" y="766.0">ru/mail/polis/dao/basta123..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (63 samples, 16.84%)</title><rect x="82.6" y="739.0" width="198.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="85.6" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (63 samples, 16.84%)</title><rect x="82.6" y="723.0" width="198.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="85.6" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.27%)</title><rect x="82.6" y="707.0" width="3.1" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="85.6" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (31 samples, 8.29%)</title><rect x="85.7" y="707.0" width="97.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="88.7" y="718.0">Java_org_ro..</text>
</g>
<g>
<title>__malloc (1 samples, 0.27%)</title><rect x="85.7" y="691.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="88.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.27%)</title><rect x="88.9" y="691.0" width="3.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="91.9" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (29 samples, 7.75%)</title><rect x="92.0" y="691.0" width="91.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="95.0" y="702.0">rocksdb_put..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (29 samples, 7.75%)</title><rect x="92.0" y="675.0" width="91.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="95.0" y="686.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (29 samples, 7.75%)</title><rect x="92.0" y="659.0" width="91.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="95.0" y="670.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (29 samples, 7.75%)</title><rect x="92.0" y="643.0" width="91.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="95.0" y="654.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (27 samples, 7.22%)</title><rect x="92.0" y="627.0" width="85.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="95.0" y="638.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (27 samples, 7.22%)</title><rect x="92.0" y="611.0" width="85.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="95.0" y="622.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::FlushScheduler::Empty() (1 samples, 0.27%)</title><rect x="92.0" y="595.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="95.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (12 samples, 3.21%)</title><rect x="95.2" y="595.0" width="37.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="98.2" y="606.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (12 samples, 3.21%)</title><rect x="95.2" y="579.0" width="37.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="98.2" y="590.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (12 samples, 3.21%)</title><rect x="95.2" y="563.0" width="37.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="98.2" y="574.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 3.21%)</title><rect x="95.2" y="547.0" width="37.8" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="98.2" y="558.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 3.21%)</title><rect x="95.2" y="531.0" width="37.8" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="98.2" y="542.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (12 samples, 3.21%)</title><rect x="95.2" y="515.0" width="37.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="98.2" y="526.0">roc..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (12 samples, 3.21%)</title><rect x="95.2" y="499.0" width="37.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="98.2" y="510.0">boo..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (12 samples, 3.21%)</title><rect x="95.2" y="483.0" width="37.8" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="98.2" y="494.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (7 samples, 1.87%)</title><rect x="95.2" y="467.0" width="22.1" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="98.2" y="478.0">/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (7 samples, 1.87%)</title><rect x="95.2" y="451.0" width="22.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="98.2" y="462.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (6 samples, 1.60%)</title><rect x="98.3" y="435.0" width="19.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="101.3" y="446.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.53%)</title><rect x="98.3" y="419.0" width="6.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="101.3" y="430.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.53%)</title><rect x="98.3" y="403.0" width="6.4" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="101.3" y="414.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.80%)</title><rect x="104.7" y="419.0" width="9.4" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="107.7" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.80%)</title><rect x="104.7" y="403.0" width="9.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="107.7" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.80%)</title><rect x="104.7" y="387.0" width="9.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="107.7" y="398.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.27%)</title><rect x="104.7" y="371.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="107.7" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="107.8" y="371.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="110.8" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.27%)</title><rect x="107.8" y="355.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="110.8" y="366.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.27%)</title><rect x="107.8" y="339.0" width="3.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="110.8" y="350.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.27%)</title><rect x="111.0" y="371.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="114.0" y="382.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.27%)</title><rect x="114.1" y="419.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="117.1" y="430.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.27%)</title><rect x="114.1" y="403.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="117.1" y="414.0"></text>
</g>
<g>
<title>non-virtual thunk to rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.27%)</title><rect x="117.3" y="467.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="120.3" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 1.07%)</title><rect x="120.4" y="467.0" width="12.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="123.4" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="123.6" y="451.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="126.6" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.53%)</title><rect x="126.7" y="451.0" width="6.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="129.7" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.53%)</title><rect x="126.7" y="435.0" width="6.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="129.7" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.53%)</title><rect x="126.7" y="419.0" width="6.3" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="129.7" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="129.9" y="403.0" width="3.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="132.9" y="414.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (12 samples, 3.21%)</title><rect x="133.0" y="595.0" width="37.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="136.0" y="606.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (12 samples, 3.21%)</title><rect x="133.0" y="579.0" width="37.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="136.0" y="590.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (12 samples, 3.21%)</title><rect x="133.0" y="563.0" width="37.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="136.0" y="574.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 3.21%)</title><rect x="133.0" y="547.0" width="37.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="136.0" y="558.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (11 samples, 2.94%)</title><rect x="133.0" y="531.0" width="34.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="136.0" y="542.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (11 samples, 2.94%)</title><rect x="133.0" y="515.0" width="34.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="136.0" y="526.0">ro..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (11 samples, 2.94%)</title><rect x="133.0" y="499.0" width="34.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="136.0" y="510.0">ro..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (11 samples, 2.94%)</title><rect x="133.0" y="483.0" width="34.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="136.0" y="494.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (11 samples, 2.94%)</title><rect x="133.0" y="467.0" width="34.8" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="136.0" y="478.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (9 samples, 2.41%)</title><rect x="139.4" y="451.0" width="28.4" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="142.4" y="462.0">/t..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.27%)</title><rect x="139.4" y="435.0" width="3.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="142.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 2.14%)</title><rect x="142.5" y="435.0" width="25.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="145.5" y="446.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 2.14%)</title><rect x="142.5" y="419.0" width="25.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="145.5" y="430.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.80%)</title><rect x="142.5" y="403.0" width="9.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="145.5" y="414.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (3 samples, 0.80%)</title><rect x="142.5" y="387.0" width="9.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="145.5" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.53%)</title><rect x="145.7" y="371.0" width="6.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="148.7" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="148.8" y="355.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="151.8" y="366.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.27%)</title><rect x="148.8" y="339.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="151.8" y="350.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.53%)</title><rect x="152.0" y="403.0" width="6.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="155.0" y="414.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.53%)</title><rect x="152.0" y="387.0" width="6.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="155.0" y="398.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.27%)</title><rect x="152.0" y="371.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="155.0" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="155.1" y="371.0" width="3.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="158.1" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="155.1" y="355.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="158.1" y="366.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.27%)</title><rect x="155.1" y="339.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="158.1" y="350.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.27%)</title><rect x="158.3" y="403.0" width="3.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="161.3" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.27%)</title><rect x="158.3" y="387.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="161.3" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.27%)</title><rect x="158.3" y="371.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="161.3" y="382.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.27%)</title><rect x="158.3" y="355.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="161.3" y="366.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.27%)</title><rect x="158.3" y="339.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="161.3" y="350.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.27%)</title><rect x="158.3" y="323.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="161.3" y="334.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.27%)</title><rect x="158.3" y="307.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="161.3" y="318.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.27%)</title><rect x="158.3" y="291.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="161.3" y="302.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.27%)</title><rect x="158.3" y="275.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="161.3" y="286.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.27%)</title><rect x="161.4" y="403.0" width="3.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="164.4" y="414.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.27%)</title><rect x="164.6" y="403.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="167.6" y="414.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.27%)</title><rect x="164.6" y="387.0" width="3.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="167.6" y="398.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, rocksdb::MemTable* const&amp;) (1 samples, 0.27%)</title><rect x="167.8" y="531.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="170.8" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.27%)</title><rect x="170.9" y="595.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="173.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.27%)</title><rect x="170.9" y="579.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="173.9" y="590.0"></text>
</g>
<g>
<title>sched_yield (1 samples, 0.27%)</title><rect x="174.1" y="595.0" width="3.1" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="177.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.27%)</title><rect x="177.2" y="627.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="180.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Put(rocksdb::WriteBatch*, unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.27%)</title><rect x="177.2" y="611.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="180.2" y="622.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.27%)</title><rect x="180.4" y="627.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="183.4" y="638.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 1.87%)</title><rect x="183.5" y="707.0" width="22.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="186.5" y="718.0">[..</text>
</g>
<g>
<title>__libc_write (6 samples, 1.60%)</title><rect x="183.5" y="691.0" width="19.0" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="186.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.60%)</title><rect x="183.5" y="675.0" width="19.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="186.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.60%)</title><rect x="183.5" y="659.0" width="19.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="186.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (6 samples, 1.60%)</title><rect x="183.5" y="643.0" width="19.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="186.5" y="654.0"></text>
</g>
<g>
<title>ksys_write (6 samples, 1.60%)</title><rect x="183.5" y="627.0" width="19.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="186.5" y="638.0"></text>
</g>
<g>
<title>vfs_write (6 samples, 1.60%)</title><rect x="183.5" y="611.0" width="19.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="186.5" y="622.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.80%)</title><rect x="183.5" y="595.0" width="9.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="186.5" y="606.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.80%)</title><rect x="183.5" y="579.0" width="9.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="186.5" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (3 samples, 0.80%)</title><rect x="183.5" y="563.0" width="9.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="186.5" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (3 samples, 0.80%)</title><rect x="183.5" y="547.0" width="9.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="186.5" y="558.0"></text>
</g>
<g>
<title>generic_perform_write (3 samples, 0.80%)</title><rect x="183.5" y="531.0" width="9.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="186.5" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.27%)</title><rect x="183.5" y="515.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="186.5" y="526.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.27%)</title><rect x="183.5" y="499.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="186.5" y="510.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.27%)</title><rect x="183.5" y="483.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="186.5" y="494.0"></text>
</g>
<g>
<title>find_get_entry (1 samples, 0.27%)</title><rect x="183.5" y="467.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="186.5" y="478.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.27%)</title><rect x="183.5" y="451.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="186.5" y="462.0"></text>
</g>
<g>
<title>xas_start (1 samples, 0.27%)</title><rect x="183.5" y="435.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="186.5" y="446.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.53%)</title><rect x="186.7" y="515.0" width="6.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="189.7" y="526.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.53%)</title><rect x="186.7" y="499.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="189.7" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.53%)</title><rect x="186.7" y="483.0" width="6.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="189.7" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.53%)</title><rect x="186.7" y="467.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="189.7" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.53%)</title><rect x="186.7" y="451.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="189.7" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.27%)</title><rect x="186.7" y="435.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="189.7" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.27%)</title><rect x="186.7" y="419.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="189.7" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.27%)</title><rect x="189.8" y="435.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="192.8" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.27%)</title><rect x="189.8" y="419.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="192.8" y="430.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.27%)</title><rect x="189.8" y="403.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="192.8" y="414.0"></text>
</g>
<g>
<title>rw_verify_area (3 samples, 0.80%)</title><rect x="193.0" y="595.0" width="9.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="196.0" y="606.0"></text>
</g>
<g>
<title>security_file_permission (2 samples, 0.53%)</title><rect x="196.1" y="579.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="199.1" y="590.0"></text>
</g>
<g>
<title>apparmor_file_permission (2 samples, 0.53%)</title><rect x="196.1" y="563.0" width="6.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="199.1" y="574.0"></text>
</g>
<g>
<title>common_file_perm (2 samples, 0.53%)</title><rect x="196.1" y="547.0" width="6.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="199.1" y="558.0"></text>
</g>
<g>
<title>aa_file_perm (2 samples, 0.53%)</title><rect x="196.1" y="531.0" width="6.4" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="199.1" y="542.0"></text>
</g>
<g>
<title>aa_label_is_subset (1 samples, 0.27%)</title><rect x="199.3" y="515.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="202.3" y="526.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.27%)</title><rect x="202.5" y="691.0" width="3.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="205.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.27%)</title><rect x="202.5" y="675.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="205.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.27%)</title><rect x="202.5" y="659.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="205.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.27%)</title><rect x="202.5" y="643.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="205.5" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.27%)</title><rect x="202.5" y="627.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="205.5" y="638.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.27%)</title><rect x="202.5" y="611.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="205.5" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.27%)</title><rect x="202.5" y="595.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="205.5" y="606.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.27%)</title><rect x="202.5" y="579.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="205.5" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.27%)</title><rect x="202.5" y="563.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="205.5" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.27%)</title><rect x="202.5" y="547.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="205.5" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 1.07%)</title><rect x="205.6" y="707.0" width="12.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="208.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.07%)</title><rect x="205.6" y="691.0" width="12.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="208.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.07%)</title><rect x="205.6" y="675.0" width="12.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="208.6" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 1.07%)</title><rect x="205.6" y="659.0" width="12.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="208.6" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 1.07%)</title><rect x="205.6" y="643.0" width="12.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="208.6" y="654.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 1.07%)</title><rect x="205.6" y="627.0" width="12.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="208.6" y="638.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 1.07%)</title><rect x="205.6" y="611.0" width="12.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="208.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 1.07%)</title><rect x="205.6" y="595.0" width="12.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="208.6" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 1.07%)</title><rect x="205.6" y="579.0" width="12.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="208.6" y="590.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.27%)</title><rect x="218.2" y="707.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="221.2" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.27%)</title><rect x="221.4" y="707.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (18 samples, 4.81%)</title><rect x="224.5" y="707.0" width="56.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="227.5" y="718.0">ru/mai..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (18 samples, 4.81%)</title><rect x="224.5" y="691.0" width="56.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="227.5" y="702.0">ru/mai..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (18 samples, 4.81%)</title><rect x="224.5" y="675.0" width="56.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="227.5" y="686.0">org/ro..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (1 samples, 0.27%)</title><rect x="224.5" y="659.0" width="3.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="227.5" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (17 samples, 4.55%)</title><rect x="227.7" y="659.0" width="53.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="230.7" y="670.0">org/r..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (17 samples, 4.55%)</title><rect x="227.7" y="643.0" width="53.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="230.7" y="654.0">org/r..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (14 samples, 3.74%)</title><rect x="230.9" y="627.0" width="44.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="233.9" y="638.0">Java..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.27%)</title><rect x="230.9" y="611.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="233.9" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.27%)</title><rect x="234.0" y="611.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="237.0" y="622.0"></text>
</g>
<g>
<title>jni_NewByteArray (11 samples, 2.94%)</title><rect x="237.2" y="611.0" width="34.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="240.2" y="622.0">jn..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.53%)</title><rect x="240.3" y="595.0" width="6.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="243.3" y="606.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.27%)</title><rect x="246.6" y="595.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="249.6" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.27%)</title><rect x="249.8" y="595.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="252.8" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (6 samples, 1.60%)</title><rect x="252.9" y="595.0" width="19.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="255.9" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (6 samples, 1.60%)</title><rect x="252.9" y="579.0" width="19.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="255.9" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.80%)</title><rect x="252.9" y="563.0" width="9.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="255.9" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.27%)</title><rect x="252.9" y="547.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="255.9" y="558.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="252.9" y="531.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="255.9" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="252.9" y="515.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="255.9" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="252.9" y="499.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="255.9" y="510.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (2 samples, 0.53%)</title><rect x="256.1" y="547.0" width="6.3" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="259.1" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.27%)</title><rect x="262.4" y="563.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="265.4" y="574.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.53%)</title><rect x="265.6" y="563.0" width="6.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="268.6" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.27%)</title><rect x="271.9" y="611.0" width="3.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="274.9" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.27%)</title><rect x="271.9" y="595.0" width="3.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="274.9" y="606.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.53%)</title><rect x="275.0" y="627.0" width="6.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="278.0" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="278.2" y="611.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="281.2" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="278.2" y="595.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="281.2" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="278.2" y="579.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="281.2" y="590.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.27%)</title><rect x="278.2" y="563.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="281.2" y="574.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.27%)</title><rect x="278.2" y="547.0" width="3.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="281.2" y="558.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.27%)</title><rect x="278.2" y="531.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="281.2" y="542.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.27%)</title><rect x="281.3" y="819.0" width="3.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="284.3" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.27%)</title><rect x="281.3" y="803.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="284.3" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.27%)</title><rect x="281.3" y="787.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="284.3" y="798.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.27%)</title><rect x="281.3" y="771.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="284.3" y="782.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.27%)</title><rect x="281.3" y="755.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="284.3" y="766.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.27%)</title><rect x="281.3" y="739.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="284.3" y="750.0"></text>
</g>
<g>
<title>mem_cgroup_from_task (1 samples, 0.27%)</title><rect x="281.3" y="723.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="284.3" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (2 samples, 0.53%)</title><rect x="284.5" y="819.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="287.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (2 samples, 0.53%)</title><rect x="284.5" y="803.0" width="6.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="287.5" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.27%)</title><rect x="284.5" y="787.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="287.5" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.27%)</title><rect x="284.5" y="771.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.5" y="782.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.27%)</title><rect x="287.6" y="787.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="290.6" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.27%)</title><rect x="290.8" y="819.0" width="3.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="293.8" y="830.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.27%)</title><rect x="290.8" y="803.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="293.8" y="814.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.27%)</title><rect x="290.8" y="787.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="293.8" y="798.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (1 samples, 0.27%)</title><rect x="290.8" y="771.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="293.8" y="782.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.53%)</title><rect x="294.0" y="819.0" width="6.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="297.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.53%)</title><rect x="294.0" y="803.0" width="6.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="297.0" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.53%)</title><rect x="300.3" y="835.0" width="6.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="303.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.53%)</title><rect x="300.3" y="819.0" width="6.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="303.3" y="830.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.53%)</title><rect x="300.3" y="803.0" width="6.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="303.3" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.53%)</title><rect x="300.3" y="787.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="303.3" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.53%)</title><rect x="300.3" y="771.0" width="6.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="303.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.53%)</title><rect x="300.3" y="755.0" width="6.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="303.3" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.53%)</title><rect x="300.3" y="739.0" width="6.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="303.3" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.53%)</title><rect x="300.3" y="723.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="303.3" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.27%)</title><rect x="300.3" y="707.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="303.3" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.27%)</title><rect x="300.3" y="691.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="303.3" y="702.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (1 samples, 0.27%)</title><rect x="300.3" y="675.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="303.3" y="686.0"></text>
</g>
<g>
<title>tcp_send_ack (1 samples, 0.27%)</title><rect x="300.3" y="659.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="303.3" y="670.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (1 samples, 0.27%)</title><rect x="300.3" y="643.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="303.3" y="654.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (1 samples, 0.27%)</title><rect x="300.3" y="627.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="303.3" y="638.0"></text>
</g>
<g>
<title>ip_queue_xmit (1 samples, 0.27%)</title><rect x="300.3" y="611.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="303.3" y="622.0"></text>
</g>
<g>
<title>__ip_queue_xmit (1 samples, 0.27%)</title><rect x="300.3" y="595.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="303.3" y="606.0"></text>
</g>
<g>
<title>ip_local_out (1 samples, 0.27%)</title><rect x="300.3" y="579.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="303.3" y="590.0"></text>
</g>
<g>
<title>ip_output (1 samples, 0.27%)</title><rect x="300.3" y="563.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="303.3" y="574.0"></text>
</g>
<g>
<title>ip_finish_output (1 samples, 0.27%)</title><rect x="300.3" y="547.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="303.3" y="558.0"></text>
</g>
<g>
<title>__ip_finish_output (1 samples, 0.27%)</title><rect x="300.3" y="531.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="303.3" y="542.0"></text>
</g>
<g>
<title>ip_finish_output2 (1 samples, 0.27%)</title><rect x="300.3" y="515.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="303.3" y="526.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.27%)</title><rect x="300.3" y="499.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="303.3" y="510.0"></text>
</g>
<g>
<title>do_softirq.part.20 (1 samples, 0.27%)</title><rect x="300.3" y="483.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="303.3" y="494.0"></text>
</g>
<g>
<title>do_softirq_own_stack (1 samples, 0.27%)</title><rect x="300.3" y="467.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="303.3" y="478.0"></text>
</g>
<g>
<title>__softirqentry_text_start (1 samples, 0.27%)</title><rect x="300.3" y="451.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="303.3" y="462.0"></text>
</g>
<g>
<title>net_rx_action (1 samples, 0.27%)</title><rect x="300.3" y="435.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="303.3" y="446.0"></text>
</g>
<g>
<title>process_backlog (1 samples, 0.27%)</title><rect x="300.3" y="419.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="303.3" y="430.0"></text>
</g>
<g>
<title>__netif_receive_skb (1 samples, 0.27%)</title><rect x="300.3" y="403.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="303.3" y="414.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (1 samples, 0.27%)</title><rect x="300.3" y="387.0" width="3.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="303.3" y="398.0"></text>
</g>
<g>
<title>ip_rcv (1 samples, 0.27%)</title><rect x="300.3" y="371.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="303.3" y="382.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.27%)</title><rect x="300.3" y="355.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="303.3" y="366.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.27%)</title><rect x="303.4" y="707.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="306.4" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.27%)</title><rect x="303.4" y="691.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="306.4" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.27%)</title><rect x="303.4" y="675.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="306.4" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.27%)</title><rect x="303.4" y="659.0" width="3.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="306.4" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.27%)</title><rect x="303.4" y="643.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="306.4" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.27%)</title><rect x="303.4" y="627.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="306.4" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="306.6" y="867.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="309.6" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="306.6" y="851.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="309.6" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="306.6" y="835.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="309.6" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6053] (114 samples, 30.48%)</title><rect x="309.7" y="899.0" width="359.7" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="312.7" y="910.0">[NIO Selector #1 tid=6053]</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.53%)</title><rect x="309.7" y="883.0" width="6.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="312.7" y="894.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (2 samples, 0.53%)</title><rect x="309.7" y="867.0" width="6.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="312.7" y="878.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.53%)</title><rect x="309.7" y="851.0" width="6.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="312.7" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="309.7" y="835.0" width="6.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="312.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="309.7" y="819.0" width="6.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="312.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="309.7" y="803.0" width="6.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="312.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.53%)</title><rect x="309.7" y="787.0" width="6.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="312.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.53%)</title><rect x="309.7" y="771.0" width="6.3" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="312.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.27%)</title><rect x="309.7" y="755.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="312.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.27%)</title><rect x="309.7" y="739.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="312.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.27%)</title><rect x="309.7" y="723.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="312.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.27%)</title><rect x="309.7" y="707.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="312.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.27%)</title><rect x="309.7" y="691.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="312.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.27%)</title><rect x="309.7" y="675.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="312.7" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.27%)</title><rect x="309.7" y="659.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="312.7" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (1 samples, 0.27%)</title><rect x="309.7" y="643.0" width="3.2" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="312.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.27%)</title><rect x="309.7" y="627.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="312.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.27%)</title><rect x="309.7" y="611.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="312.7" y="622.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="309.7" y="595.0" width="3.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="312.7" y="606.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.27%)</title><rect x="309.7" y="579.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="312.7" y="590.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="309.7" y="563.0" width="3.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="312.7" y="574.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.27%)</title><rect x="309.7" y="547.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="312.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.27%)</title><rect x="312.9" y="755.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="315.9" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.27%)</title><rect x="312.9" y="739.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="315.9" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.27%)</title><rect x="312.9" y="723.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="315.9" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.27%)</title><rect x="312.9" y="707.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="315.9" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.27%)</title><rect x="312.9" y="691.0" width="3.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="315.9" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.27%)</title><rect x="312.9" y="675.0" width="3.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="315.9" y="686.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.27%)</title><rect x="312.9" y="659.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="315.9" y="670.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.27%)</title><rect x="312.9" y="643.0" width="3.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="315.9" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (1 samples, 0.27%)</title><rect x="312.9" y="627.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="315.9" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (1 samples, 0.27%)</title><rect x="312.9" y="611.0" width="3.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="315.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.27%)</title><rect x="312.9" y="595.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="315.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.27%)</title><rect x="312.9" y="579.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="315.9" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="312.9" y="563.0" width="3.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="315.9" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.27%)</title><rect x="312.9" y="547.0" width="3.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="315.9" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="312.9" y="531.0" width="3.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="315.9" y="542.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.27%)</title><rect x="312.9" y="515.0" width="3.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="315.9" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (112 samples, 29.95%)</title><rect x="316.0" y="883.0" width="353.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="319.0" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.27%)</title><rect x="331.8" y="867.0" width="3.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="334.8" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="331.8" y="851.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="334.8" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="331.8" y="835.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="334.8" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="331.8" y="819.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="334.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 1.60%)</title><rect x="335.0" y="867.0" width="18.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="338.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 1.34%)</title><rect x="338.1" y="851.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="341.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.34%)</title><rect x="338.1" y="835.0" width="15.8" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="341.1" y="846.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 1.34%)</title><rect x="338.1" y="819.0" width="15.8" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="341.1" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.34%)</title><rect x="338.1" y="803.0" width="15.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="341.1" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.34%)</title><rect x="338.1" y="787.0" width="15.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="341.1" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 1.34%)</title><rect x="338.1" y="771.0" width="15.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="341.1" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 1.34%)</title><rect x="338.1" y="755.0" width="15.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="341.1" y="766.0"></text>
</g>
<g>
<title>ep_poll (5 samples, 1.34%)</title><rect x="338.1" y="739.0" width="15.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="341.1" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 1.34%)</title><rect x="338.1" y="723.0" width="15.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="341.1" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 1.34%)</title><rect x="338.1" y="707.0" width="15.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="341.1" y="718.0"></text>
</g>
<g>
<title>schedule (5 samples, 1.34%)</title><rect x="338.1" y="691.0" width="15.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="341.1" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 1.34%)</title><rect x="338.1" y="675.0" width="15.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="341.1" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 1.34%)</title><rect x="338.1" y="659.0" width="15.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="341.1" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (100 samples, 26.74%)</title><rect x="353.9" y="867.0" width="315.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="356.9" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (99 samples, 26.47%)</title><rect x="353.9" y="851.0" width="312.4" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.9" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (94 samples, 25.13%)</title><rect x="353.9" y="835.0" width="296.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="356.9" y="846.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (92 samples, 24.60%)</title><rect x="353.9" y="819.0" width="290.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="356.9" y="830.0">one/nio/http/HttpSession.handleParsedRe..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (91 samples, 24.33%)</title><rect x="357.1" y="803.0" width="287.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="360.1" y="814.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler3_putValueByKey.handleRequest (91 samples, 24.33%)</title><rect x="357.1" y="787.0" width="287.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="360.1" y="798.0">RequestHandler3_putValueByKey.handleReq..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (17 samples, 4.55%)</title><rect x="357.1" y="771.0" width="53.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="360.1" y="782.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (17 samples, 4.55%)</title><rect x="357.1" y="755.0" width="53.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="360.1" y="766.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.27%)</title><rect x="357.1" y="739.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="360.1" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="357.1" y="723.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="360.1" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="357.1" y="707.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="360.1" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="357.1" y="691.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="360.1" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 4.28%)</title><rect x="360.2" y="739.0" width="50.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="363.2" y="750.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session.write (16 samples, 4.28%)</title><rect x="360.2" y="723.0" width="50.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="363.2" y="734.0">one/n..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (16 samples, 4.28%)</title><rect x="360.2" y="707.0" width="50.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="363.2" y="718.0">one/n..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (16 samples, 4.28%)</title><rect x="360.2" y="691.0" width="50.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="363.2" y="702.0">one/n..</text>
</g>
<g>
<title>__send (16 samples, 4.28%)</title><rect x="360.2" y="675.0" width="50.5" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="363.2" y="686.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (16 samples, 4.28%)</title><rect x="360.2" y="659.0" width="50.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="363.2" y="670.0">entry..</text>
</g>
<g>
<title>do_syscall_64 (16 samples, 4.28%)</title><rect x="360.2" y="643.0" width="50.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="363.2" y="654.0">do_sy..</text>
</g>
<g>
<title>__x64_sys_sendto (15 samples, 4.01%)</title><rect x="363.4" y="627.0" width="47.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="366.4" y="638.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (15 samples, 4.01%)</title><rect x="363.4" y="611.0" width="47.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="366.4" y="622.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (15 samples, 4.01%)</title><rect x="363.4" y="595.0" width="47.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="366.4" y="606.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (14 samples, 3.74%)</title><rect x="363.4" y="579.0" width="44.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="366.4" y="590.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (14 samples, 3.74%)</title><rect x="363.4" y="563.0" width="44.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="366.4" y="574.0">tcp_..</text>
</g>
<g>
<title>tcp_sendmsg_locked (14 samples, 3.74%)</title><rect x="363.4" y="547.0" width="44.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="366.4" y="558.0">tcp_..</text>
</g>
<g>
<title>sk_page_frag_refill (1 samples, 0.27%)</title><rect x="363.4" y="531.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="366.4" y="542.0"></text>
</g>
<g>
<title>skb_page_frag_refill (1 samples, 0.27%)</title><rect x="363.4" y="515.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="366.4" y="526.0"></text>
</g>
<g>
<title>tcp_push (13 samples, 3.48%)</title><rect x="366.5" y="531.0" width="41.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="369.5" y="542.0">tcp..</text>
</g>
<g>
<title>__tcp_push_pending_frames (13 samples, 3.48%)</title><rect x="366.5" y="515.0" width="41.0" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="369.5" y="526.0">__t..</text>
</g>
<g>
<title>tcp_write_xmit (13 samples, 3.48%)</title><rect x="366.5" y="499.0" width="41.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="369.5" y="510.0">tcp..</text>
</g>
<g>
<title>__tcp_transmit_skb (13 samples, 3.48%)</title><rect x="366.5" y="483.0" width="41.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="369.5" y="494.0">__t..</text>
</g>
<g>
<title>ip_queue_xmit (13 samples, 3.48%)</title><rect x="366.5" y="467.0" width="41.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="369.5" y="478.0">ip_..</text>
</g>
<g>
<title>__ip_queue_xmit (13 samples, 3.48%)</title><rect x="366.5" y="451.0" width="41.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="369.5" y="462.0">__i..</text>
</g>
<g>
<title>ip_local_out (13 samples, 3.48%)</title><rect x="366.5" y="435.0" width="41.0" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="369.5" y="446.0">ip_..</text>
</g>
<g>
<title>ip_output (13 samples, 3.48%)</title><rect x="366.5" y="419.0" width="41.0" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="369.5" y="430.0">ip_..</text>
</g>
<g>
<title>ip_finish_output (13 samples, 3.48%)</title><rect x="366.5" y="403.0" width="41.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="369.5" y="414.0">ip_..</text>
</g>
<g>
<title>__ip_finish_output (13 samples, 3.48%)</title><rect x="366.5" y="387.0" width="41.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="369.5" y="398.0">__i..</text>
</g>
<g>
<title>ip_finish_output2 (13 samples, 3.48%)</title><rect x="366.5" y="371.0" width="41.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="369.5" y="382.0">ip_..</text>
</g>
<g>
<title>__local_bh_enable_ip (13 samples, 3.48%)</title><rect x="366.5" y="355.0" width="41.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="369.5" y="366.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (13 samples, 3.48%)</title><rect x="366.5" y="339.0" width="41.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="369.5" y="350.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (13 samples, 3.48%)</title><rect x="366.5" y="323.0" width="41.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="369.5" y="334.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (13 samples, 3.48%)</title><rect x="366.5" y="307.0" width="41.0" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="369.5" y="318.0">__s..</text>
</g>
<g>
<title>net_rx_action (13 samples, 3.48%)</title><rect x="366.5" y="291.0" width="41.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="369.5" y="302.0">net..</text>
</g>
<g>
<title>process_backlog (13 samples, 3.48%)</title><rect x="366.5" y="275.0" width="41.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="369.5" y="286.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (13 samples, 3.48%)</title><rect x="366.5" y="259.0" width="41.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="369.5" y="270.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (13 samples, 3.48%)</title><rect x="366.5" y="243.0" width="41.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="369.5" y="254.0">__n..</text>
</g>
<g>
<title>ip_rcv (13 samples, 3.48%)</title><rect x="366.5" y="227.0" width="41.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="369.5" y="238.0">ip_..</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.27%)</title><rect x="366.5" y="211.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="369.5" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (12 samples, 3.21%)</title><rect x="369.7" y="211.0" width="37.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="372.7" y="222.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver (12 samples, 3.21%)</title><rect x="369.7" y="195.0" width="37.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="372.7" y="206.0">ip_..</text>
</g>
<g>
<title>ip_local_deliver_finish (12 samples, 3.21%)</title><rect x="369.7" y="179.0" width="37.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="372.7" y="190.0">ip_..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (12 samples, 3.21%)</title><rect x="369.7" y="163.0" width="37.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="372.7" y="174.0">ip_..</text>
</g>
<g>
<title>tcp_v4_rcv (12 samples, 3.21%)</title><rect x="369.7" y="147.0" width="37.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="372.7" y="158.0">tcp..</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 0.27%)</title><rect x="369.7" y="131.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="372.7" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (11 samples, 2.94%)</title><rect x="372.8" y="131.0" width="34.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="375.8" y="142.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (11 samples, 2.94%)</title><rect x="372.8" y="115.0" width="34.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="375.8" y="126.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.27%)</title><rect x="372.8" y="99.0" width="3.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="375.8" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.27%)</title><rect x="372.8" y="83.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="375.8" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.27%)</title><rect x="372.8" y="67.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="375.8" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.27%)</title><rect x="372.8" y="51.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="375.8" y="62.0"></text>
</g>
<g>
<title>lock_timer_base (1 samples, 0.27%)</title><rect x="372.8" y="35.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="375.8" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (10 samples, 2.67%)</title><rect x="376.0" y="99.0" width="31.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="379.0" y="110.0">tc..</text>
</g>
<g>
<title>sock_def_readable (10 samples, 2.67%)</title><rect x="376.0" y="83.0" width="31.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="379.0" y="94.0">so..</text>
</g>
<g>
<title>__wake_up_sync_key (10 samples, 2.67%)</title><rect x="376.0" y="67.0" width="31.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="379.0" y="78.0">__..</text>
</g>
<g>
<title>__wake_up_common_lock (10 samples, 2.67%)</title><rect x="376.0" y="51.0" width="31.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="379.0" y="62.0">__..</text>
</g>
<g>
<title>__lock_text_start (10 samples, 2.67%)</title><rect x="376.0" y="35.0" width="31.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="379.0" y="46.0">__..</text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.27%)</title><rect x="407.5" y="579.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="410.5" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.27%)</title><rect x="407.5" y="563.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="410.5" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.27%)</title><rect x="407.5" y="547.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="410.5" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyHttpServerImpl.putValueByKey (74 samples, 19.79%)</title><rect x="410.7" y="771.0" width="233.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.7" y="782.0">ru/mail/polis/service/basta123/..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.upsert (74 samples, 19.79%)</title><rect x="410.7" y="755.0" width="233.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="413.7" y="766.0">ru/mail/polis/dao/basta123/MyDA..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (74 samples, 19.79%)</title><rect x="410.7" y="739.0" width="233.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="413.7" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (74 samples, 19.79%)</title><rect x="410.7" y="723.0" width="233.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="413.7" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (45 samples, 12.03%)</title><rect x="410.7" y="707.0" width="142.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="413.7" y="718.0">Java_org_rocksdb_R..</text>
</g>
<g>
<title>__malloc (1 samples, 0.27%)</title><rect x="410.7" y="691.0" width="3.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="413.7" y="702.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (44 samples, 11.76%)</title><rect x="413.9" y="691.0" width="138.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="416.9" y="702.0">rocksdb_put_helpe..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (44 samples, 11.76%)</title><rect x="413.9" y="675.0" width="138.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="416.9" y="686.0">rocksdb::DB::Put(..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (44 samples, 11.76%)</title><rect x="413.9" y="659.0" width="138.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="416.9" y="670.0">rocksdb::DBImpl::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (43 samples, 11.50%)</title><rect x="413.9" y="643.0" width="135.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="416.9" y="654.0">rocksdb::DB::Put(..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (42 samples, 11.23%)</title><rect x="413.9" y="627.0" width="132.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="416.9" y="638.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (40 samples, 10.70%)</title><rect x="413.9" y="611.0" width="126.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="416.9" y="622.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>rocksdb::DBImpl::PreprocessWrite(rocksdb::WriteOptions const&amp;, bool*, rocksdb::DBImpl::WriteContext*) (1 samples, 0.27%)</title><rect x="417.0" y="595.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="420.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (2 samples, 0.53%)</title><rect x="420.2" y="595.0" width="6.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="423.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (2 samples, 0.53%)</title><rect x="420.2" y="579.0" width="6.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="423.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="420.2" y="563.0" width="6.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="423.2" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.53%)</title><rect x="420.2" y="547.0" width="6.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="423.2" y="558.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.27%)</title><rect x="420.2" y="531.0" width="3.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="423.2" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="423.3" y="531.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="426.3" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="423.3" y="515.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="426.3" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="423.3" y="499.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="426.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (12 samples, 3.21%)</title><rect x="426.5" y="595.0" width="37.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="429.5" y="606.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (12 samples, 3.21%)</title><rect x="426.5" y="579.0" width="37.8" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="429.5" y="590.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (12 samples, 3.21%)</title><rect x="426.5" y="563.0" width="37.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="429.5" y="574.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 3.21%)</title><rect x="426.5" y="547.0" width="37.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="429.5" y="558.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 3.21%)</title><rect x="426.5" y="531.0" width="37.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="429.5" y="542.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (12 samples, 3.21%)</title><rect x="426.5" y="515.0" width="37.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="429.5" y="526.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (1 samples, 0.27%)</title><rect x="426.5" y="499.0" width="3.1" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="429.5" y="510.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (11 samples, 2.94%)</title><rect x="429.6" y="499.0" width="34.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="432.6" y="510.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (11 samples, 2.94%)</title><rect x="429.6" y="483.0" width="34.7" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="432.6" y="494.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (8 samples, 2.14%)</title><rect x="432.8" y="467.0" width="25.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="435.8" y="478.0">/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 2.14%)</title><rect x="432.8" y="451.0" width="25.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="435.8" y="462.0">r..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 2.14%)</title><rect x="432.8" y="435.0" width="25.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="435.8" y="446.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.80%)</title><rect x="432.8" y="419.0" width="9.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="435.8" y="430.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (3 samples, 0.80%)</title><rect x="432.8" y="403.0" width="9.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="435.8" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.53%)</title><rect x="435.9" y="387.0" width="6.3" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="438.9" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="439.1" y="371.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="442.1" y="382.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.27%)</title><rect x="439.1" y="355.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="442.1" y="366.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (5 samples, 1.34%)</title><rect x="442.2" y="419.0" width="15.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="445.2" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (5 samples, 1.34%)</title><rect x="442.2" y="403.0" width="15.8" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="445.2" y="414.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.27%)</title><rect x="442.2" y="387.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="445.2" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 1.07%)</title><rect x="445.4" y="387.0" width="12.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="448.4" y="398.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.53%)</title><rect x="445.4" y="371.0" width="6.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="448.4" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.53%)</title><rect x="451.7" y="371.0" width="6.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="454.7" y="382.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (2 samples, 0.53%)</title><rect x="451.7" y="355.0" width="6.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="454.7" y="366.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.53%)</title><rect x="458.0" y="467.0" width="6.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="461.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.53%)</title><rect x="458.0" y="451.0" width="6.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="461.0" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.53%)</title><rect x="458.0" y="435.0" width="6.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="461.0" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.53%)</title><rect x="458.0" y="419.0" width="6.3" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="461.0" y="430.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.27%)</title><rect x="458.0" y="403.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="461.0" y="414.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.27%)</title><rect x="461.2" y="403.0" width="3.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="464.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (13 samples, 3.48%)</title><rect x="464.3" y="595.0" width="41.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="467.3" y="606.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (13 samples, 3.48%)</title><rect x="464.3" y="579.0" width="41.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="467.3" y="590.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (13 samples, 3.48%)</title><rect x="464.3" y="563.0" width="41.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="467.3" y="574.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 3.21%)</title><rect x="467.5" y="547.0" width="37.8" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="470.5" y="558.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 3.21%)</title><rect x="467.5" y="531.0" width="37.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="470.5" y="542.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (12 samples, 3.21%)</title><rect x="467.5" y="515.0" width="37.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="470.5" y="526.0">roc..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (11 samples, 2.94%)</title><rect x="467.5" y="499.0" width="34.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="470.5" y="510.0">ro..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (11 samples, 2.94%)</title><rect x="467.5" y="483.0" width="34.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="470.5" y="494.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (10 samples, 2.67%)</title><rect x="467.5" y="467.0" width="31.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="470.5" y="478.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (10 samples, 2.67%)</title><rect x="467.5" y="451.0" width="31.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="470.5" y="462.0">/t..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (10 samples, 2.67%)</title><rect x="467.5" y="435.0" width="31.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="470.5" y="446.0">ro..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.27%)</title><rect x="467.5" y="419.0" width="3.1" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="470.5" y="430.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.27%)</title><rect x="470.6" y="419.0" width="3.2" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="473.6" y="430.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (8 samples, 2.14%)</title><rect x="473.8" y="419.0" width="25.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="476.8" y="430.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="473.8" y="403.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="476.8" y="414.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.27%)</title><rect x="473.8" y="387.0" width="3.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="476.8" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="473.8" y="371.0" width="3.2" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="476.8" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="473.8" y="355.0" width="3.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="476.8" y="366.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (5 samples, 1.34%)</title><rect x="477.0" y="403.0" width="15.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="480.0" y="414.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (5 samples, 1.34%)</title><rect x="477.0" y="387.0" width="15.7" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="480.0" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (5 samples, 1.34%)</title><rect x="477.0" y="371.0" width="15.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="480.0" y="382.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.27%)</title><rect x="480.1" y="355.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="483.1" y="366.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.27%)</title><rect x="483.3" y="355.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="486.3" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.53%)</title><rect x="486.4" y="355.0" width="6.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="489.4" y="366.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.27%)</title><rect x="489.6" y="339.0" width="3.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="492.6" y="350.0"></text>
</g>
<g>
<title>__lll_unlock_wake (2 samples, 0.53%)</title><rect x="492.7" y="403.0" width="6.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="495.7" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.53%)</title><rect x="492.7" y="387.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="495.7" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.53%)</title><rect x="492.7" y="371.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="495.7" y="382.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.53%)</title><rect x="492.7" y="355.0" width="6.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="495.7" y="366.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.53%)</title><rect x="492.7" y="339.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="495.7" y="350.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.53%)</title><rect x="492.7" y="323.0" width="6.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="495.7" y="334.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.53%)</title><rect x="492.7" y="307.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="495.7" y="318.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.53%)</title><rect x="492.7" y="291.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="495.7" y="302.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.53%)</title><rect x="492.7" y="275.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="495.7" y="286.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.27%)</title><rect x="499.0" y="467.0" width="3.2" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="502.0" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.27%)</title><rect x="499.0" y="451.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="502.0" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="499.0" y="435.0" width="3.2" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="502.0" y="446.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.27%)</title><rect x="499.0" y="419.0" width="3.2" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="502.0" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="499.0" y="403.0" width="3.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="502.0" y="414.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.27%)</title><rect x="499.0" y="387.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="502.0" y="398.0"></text>
</g>
<g>
<title>rocksdb::Random::GetTLSInstance() (1 samples, 0.27%)</title><rect x="502.2" y="499.0" width="3.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="505.2" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (6 samples, 1.60%)</title><rect x="505.3" y="595.0" width="19.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="508.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (2 samples, 0.53%)</title><rect x="524.3" y="595.0" width="6.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="527.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.53%)</title><rect x="524.3" y="579.0" width="6.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="527.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::EnterAsBatchGroupLeader(rocksdb::WriteThread::Writer*, rocksdb::WriteThread::WriteGroup*) (1 samples, 0.27%)</title><rect x="530.6" y="595.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="533.6" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="530.6" y="579.0" width="3.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="533.6" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="530.6" y="563.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="533.6" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="530.6" y="547.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="533.6" y="558.0"></text>
</g>
<g>
<title>sched_yield (1 samples, 0.27%)</title><rect x="533.7" y="595.0" width="3.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="536.7" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.27%)</title><rect x="533.7" y="579.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="536.7" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.27%)</title><rect x="533.7" y="563.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="536.7" y="574.0"></text>
</g>
<g>
<title>__x64_sys_sched_yield (1 samples, 0.27%)</title><rect x="533.7" y="547.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="536.7" y="558.0"></text>
</g>
<g>
<title>do_sched_yield (1 samples, 0.27%)</title><rect x="533.7" y="531.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="536.7" y="542.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.27%)</title><rect x="533.7" y="515.0" width="3.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="536.7" y="526.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.27%)</title><rect x="533.7" y="499.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="536.7" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="536.9" y="595.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="539.9" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="536.9" y="579.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="539.9" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="536.9" y="563.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="539.9" y="574.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::AppendedByteSize(unsigned long, unsigned long) (1 samples, 0.27%)</title><rect x="540.1" y="611.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="543.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.27%)</title><rect x="543.2" y="611.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="546.2" y="622.0"></text>
</g>
<g>
<title>std::string::resize(unsigned long, char) (1 samples, 0.27%)</title><rect x="546.4" y="627.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="549.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::WriteBatch(unsigned long, unsigned long) [clone .plt] (1 samples, 0.27%)</title><rect x="549.5" y="643.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="552.5" y="654.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 1.87%)</title><rect x="552.7" y="707.0" width="22.1" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="555.7" y="718.0">[..</text>
</g>
<g>
<title>__libc_write (4 samples, 1.07%)</title><rect x="552.7" y="691.0" width="12.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="555.7" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.07%)</title><rect x="552.7" y="675.0" width="12.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="555.7" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.07%)</title><rect x="552.7" y="659.0" width="12.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="555.7" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (4 samples, 1.07%)</title><rect x="552.7" y="643.0" width="12.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="555.7" y="654.0"></text>
</g>
<g>
<title>ksys_write (4 samples, 1.07%)</title><rect x="552.7" y="627.0" width="12.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="555.7" y="638.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 1.07%)</title><rect x="552.7" y="611.0" width="12.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="555.7" y="622.0"></text>
</g>
<g>
<title>__vfs_write (4 samples, 1.07%)</title><rect x="552.7" y="595.0" width="12.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="555.7" y="606.0"></text>
</g>
<g>
<title>new_sync_write (4 samples, 1.07%)</title><rect x="552.7" y="579.0" width="12.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="555.7" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (4 samples, 1.07%)</title><rect x="552.7" y="563.0" width="12.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="555.7" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (4 samples, 1.07%)</title><rect x="552.7" y="547.0" width="12.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="555.7" y="558.0"></text>
</g>
<g>
<title>generic_perform_write (4 samples, 1.07%)</title><rect x="552.7" y="531.0" width="12.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="555.7" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.27%)</title><rect x="552.7" y="515.0" width="3.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="555.7" y="526.0"></text>
</g>
<g>
<title>ext4_da_write_end (3 samples, 0.80%)</title><rect x="555.8" y="515.0" width="9.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="558.8" y="526.0"></text>
</g>
<g>
<title>generic_write_end (3 samples, 0.80%)</title><rect x="555.8" y="499.0" width="9.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="558.8" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (3 samples, 0.80%)</title><rect x="555.8" y="483.0" width="9.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="558.8" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.53%)</title><rect x="559.0" y="467.0" width="6.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="562.0" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.53%)</title><rect x="559.0" y="451.0" width="6.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="562.0" y="462.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (2 samples, 0.53%)</title><rect x="559.0" y="435.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="562.0" y="446.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (2 samples, 0.53%)</title><rect x="559.0" y="419.0" width="6.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="562.0" y="430.0"></text>
</g>
<g>
<title>ext4_get_group_desc (2 samples, 0.53%)</title><rect x="559.0" y="403.0" width="6.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="562.0" y="414.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.80%)</title><rect x="565.3" y="691.0" width="9.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="568.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.80%)</title><rect x="565.3" y="675.0" width="9.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="568.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.80%)</title><rect x="565.3" y="659.0" width="9.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="568.3" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.80%)</title><rect x="565.3" y="643.0" width="9.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="568.3" y="654.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.80%)</title><rect x="565.3" y="627.0" width="9.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="568.3" y="638.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.80%)</title><rect x="565.3" y="611.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="568.3" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.80%)</title><rect x="565.3" y="595.0" width="9.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="568.3" y="606.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.27%)</title><rect x="565.3" y="579.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="568.3" y="590.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.53%)</title><rect x="568.4" y="579.0" width="6.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="571.4" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.53%)</title><rect x="568.4" y="563.0" width="6.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="571.4" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.27%)</title><rect x="571.6" y="547.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="574.6" y="558.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned (1 samples, 0.27%)</title><rect x="574.8" y="707.0" width="3.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="577.8" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="574.8" y="691.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="577.8" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="574.8" y="675.0" width="3.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="577.8" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="574.8" y="659.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="577.8" y="670.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 1.07%)</title><rect x="577.9" y="707.0" width="12.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="580.9" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.07%)</title><rect x="577.9" y="691.0" width="12.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="580.9" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.07%)</title><rect x="577.9" y="675.0" width="12.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="580.9" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 1.07%)</title><rect x="577.9" y="659.0" width="12.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="580.9" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 1.07%)</title><rect x="577.9" y="643.0" width="12.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="580.9" y="654.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 1.07%)</title><rect x="577.9" y="627.0" width="12.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="580.9" y="638.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.27%)</title><rect x="577.9" y="611.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="580.9" y="622.0"></text>
</g>
<g>
<title>__unqueue_futex (1 samples, 0.27%)</title><rect x="577.9" y="595.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="580.9" y="606.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.80%)</title><rect x="581.1" y="611.0" width="9.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="584.1" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.80%)</title><rect x="581.1" y="595.0" width="9.4" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="584.1" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.80%)</title><rect x="581.1" y="579.0" width="9.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="584.1" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (2 samples, 0.53%)</title><rect x="590.5" y="707.0" width="6.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="593.5" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (15 samples, 4.01%)</title><rect x="596.8" y="707.0" width="47.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="599.8" y="718.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (14 samples, 3.74%)</title><rect x="600.0" y="691.0" width="44.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="603.0" y="702.0">ru/m..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.27%)</title><rect x="600.0" y="675.0" width="3.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="603.0" y="686.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.27%)</title><rect x="600.0" y="659.0" width="3.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="603.0" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (13 samples, 3.48%)</title><rect x="603.2" y="675.0" width="41.0" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="606.2" y="686.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (1 samples, 0.27%)</title><rect x="603.2" y="659.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="606.2" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (12 samples, 3.21%)</title><rect x="606.3" y="659.0" width="37.9" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="609.3" y="670.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (12 samples, 3.21%)</title><rect x="606.3" y="643.0" width="37.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="609.3" y="654.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (12 samples, 3.21%)</title><rect x="606.3" y="627.0" width="37.9" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="609.3" y="638.0">Jav..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.27%)</title><rect x="606.3" y="611.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="609.3" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.27%)</title><rect x="609.5" y="611.0" width="3.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="612.5" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.27%)</title><rect x="609.5" y="595.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="612.5" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (8 samples, 2.14%)</title><rect x="612.6" y="611.0" width="25.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="615.6" y="622.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.27%)</title><rect x="612.6" y="595.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="615.6" y="606.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.53%)</title><rect x="615.8" y="595.0" width="6.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="618.8" y="606.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.27%)</title><rect x="622.1" y="595.0" width="3.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="625.1" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 1.07%)</title><rect x="625.2" y="595.0" width="12.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="628.2" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 1.07%)</title><rect x="625.2" y="579.0" width="12.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="628.2" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.27%)</title><rect x="628.4" y="563.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="631.4" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.27%)</title><rect x="628.4" y="547.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="631.4" y="558.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.27%)</title><rect x="628.4" y="531.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="631.4" y="542.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.27%)</title><rect x="628.4" y="515.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="631.4" y="526.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.27%)</title><rect x="628.4" y="499.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="631.4" y="510.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.27%)</title><rect x="628.4" y="483.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="631.4" y="494.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.27%)</title><rect x="628.4" y="467.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="631.4" y="478.0"></text>
</g>
<g>
<title>mem_cgroup_commit_charge (1 samples, 0.27%)</title><rect x="628.4" y="451.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="631.4" y="462.0"></text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.53%)</title><rect x="631.6" y="563.0" width="6.3" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="634.6" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.53%)</title><rect x="637.9" y="611.0" width="6.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="640.9" y="622.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.27%)</title><rect x="644.2" y="819.0" width="3.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="647.2" y="830.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.27%)</title><rect x="644.2" y="803.0" width="3.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="647.2" y="814.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.27%)</title><rect x="644.2" y="787.0" width="3.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="647.2" y="798.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.27%)</title><rect x="644.2" y="771.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="647.2" y="782.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.27%)</title><rect x="644.2" y="755.0" width="3.1" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="647.2" y="766.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.27%)</title><rect x="644.2" y="739.0" width="3.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="647.2" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.27%)</title><rect x="647.3" y="819.0" width="3.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="650.3" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.27%)</title><rect x="647.3" y="803.0" width="3.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="650.3" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.27%)</title><rect x="647.3" y="787.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="650.3" y="798.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.27%)</title><rect x="647.3" y="771.0" width="3.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="650.3" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 1.34%)</title><rect x="650.5" y="835.0" width="15.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="653.5" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 1.34%)</title><rect x="650.5" y="819.0" width="15.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="653.5" y="830.0"></text>
</g>
<g>
<title>__recv (5 samples, 1.34%)</title><rect x="650.5" y="803.0" width="15.8" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="653.5" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.34%)</title><rect x="650.5" y="787.0" width="15.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="653.5" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.34%)</title><rect x="650.5" y="771.0" width="15.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="653.5" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (5 samples, 1.34%)</title><rect x="650.5" y="755.0" width="15.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="653.5" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (5 samples, 1.34%)</title><rect x="650.5" y="739.0" width="15.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="653.5" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (5 samples, 1.34%)</title><rect x="650.5" y="723.0" width="15.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="653.5" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 1.07%)</title><rect x="650.5" y="707.0" width="12.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="653.5" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 1.07%)</title><rect x="650.5" y="691.0" width="12.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="653.5" y="702.0"></text>
</g>
<g>
<title>_raw_spin_lock_bh (1 samples, 0.27%)</title><rect x="653.6" y="675.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="656.6" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.53%)</title><rect x="656.8" y="675.0" width="6.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="659.8" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.53%)</title><rect x="656.8" y="659.0" width="6.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="659.8" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.53%)</title><rect x="656.8" y="643.0" width="6.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="659.8" y="654.0"></text>
</g>
<g>
<title>__check_object_size (1 samples, 0.27%)</title><rect x="656.8" y="627.0" width="3.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="659.8" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (1 samples, 0.27%)</title><rect x="659.9" y="627.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="662.9" y="638.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.27%)</title><rect x="659.9" y="611.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="662.9" y="622.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.27%)</title><rect x="663.1" y="707.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="666.1" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.27%)</title><rect x="663.1" y="691.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="666.1" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.27%)</title><rect x="663.1" y="675.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="666.1" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.27%)</title><rect x="663.1" y="659.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="666.1" y="670.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.27%)</title><rect x="663.1" y="643.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="666.1" y="654.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.27%)</title><rect x="663.1" y="627.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="666.1" y="638.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.27%)</title><rect x="666.3" y="851.0" width="3.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="669.3" y="862.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.27%)</title><rect x="666.3" y="835.0" width="3.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="669.3" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6054] (89 samples, 23.80%)</title><rect x="669.4" y="899.0" width="280.8" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="672.4" y="910.0">[NIO Selector #2 tid=6054]</text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.53%)</title><rect x="669.4" y="883.0" width="6.3" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="672.4" y="894.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (2 samples, 0.53%)</title><rect x="669.4" y="867.0" width="6.3" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="672.4" y="878.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.53%)</title><rect x="669.4" y="851.0" width="6.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="672.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="669.4" y="835.0" width="6.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="672.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="669.4" y="819.0" width="6.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="672.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="669.4" y="803.0" width="6.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="672.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.53%)</title><rect x="669.4" y="787.0" width="6.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="672.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.53%)</title><rect x="669.4" y="771.0" width="6.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="672.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (2 samples, 0.53%)</title><rect x="669.4" y="755.0" width="6.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="672.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.53%)</title><rect x="669.4" y="739.0" width="6.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="672.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.53%)</title><rect x="669.4" y="723.0" width="6.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="672.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="669.4" y="707.0" width="6.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="672.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.53%)</title><rect x="669.4" y="691.0" width="6.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="672.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.53%)</title><rect x="669.4" y="675.0" width="6.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="672.4" y="686.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.53%)</title><rect x="669.4" y="659.0" width="6.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="672.4" y="670.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (2 samples, 0.53%)</title><rect x="669.4" y="643.0" width="6.3" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="672.4" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (2 samples, 0.53%)</title><rect x="669.4" y="627.0" width="6.3" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="672.4" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.53%)</title><rect x="669.4" y="611.0" width="6.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="672.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.53%)</title><rect x="669.4" y="595.0" width="6.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="672.4" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.53%)</title><rect x="669.4" y="579.0" width="6.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="672.4" y="590.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.53%)</title><rect x="669.4" y="563.0" width="6.3" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="672.4" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.53%)</title><rect x="669.4" y="547.0" width="6.3" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="672.4" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.53%)</title><rect x="669.4" y="531.0" width="6.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="672.4" y="542.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (2 samples, 0.53%)</title><rect x="669.4" y="515.0" width="6.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="672.4" y="526.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (87 samples, 23.26%)</title><rect x="675.7" y="883.0" width="274.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="678.7" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.27%)</title><rect x="682.0" y="867.0" width="3.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="685.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 1.34%)</title><rect x="685.2" y="867.0" width="15.8" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="688.2" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 1.34%)</title><rect x="685.2" y="851.0" width="15.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="688.2" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.34%)</title><rect x="685.2" y="835.0" width="15.8" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="688.2" y="846.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 1.34%)</title><rect x="685.2" y="819.0" width="15.8" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="688.2" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.34%)</title><rect x="685.2" y="803.0" width="15.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="688.2" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.34%)</title><rect x="685.2" y="787.0" width="15.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="688.2" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 1.34%)</title><rect x="685.2" y="771.0" width="15.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="688.2" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 1.34%)</title><rect x="685.2" y="755.0" width="15.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="688.2" y="766.0"></text>
</g>
<g>
<title>ep_poll (5 samples, 1.34%)</title><rect x="685.2" y="739.0" width="15.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="688.2" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 1.07%)</title><rect x="688.3" y="723.0" width="12.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="691.3" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 1.07%)</title><rect x="688.3" y="707.0" width="12.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="691.3" y="718.0"></text>
</g>
<g>
<title>schedule (4 samples, 1.07%)</title><rect x="688.3" y="691.0" width="12.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="691.3" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 1.07%)</title><rect x="688.3" y="675.0" width="12.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="691.3" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 1.07%)</title><rect x="688.3" y="659.0" width="12.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="691.3" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (79 samples, 21.12%)</title><rect x="701.0" y="867.0" width="249.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="704.0" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.53%)</title><rect x="701.0" y="851.0" width="6.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="704.0" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (77 samples, 20.59%)</title><rect x="707.3" y="851.0" width="242.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.3" y="862.0">one/nio/http/HttpSession.process..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (75 samples, 20.05%)</title><rect x="707.3" y="835.0" width="236.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.3" y="846.0">one/nio/http/HttpSession.proces..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (75 samples, 20.05%)</title><rect x="707.3" y="819.0" width="236.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="710.3" y="830.0">one/nio/http/HttpSession.handle..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (75 samples, 20.05%)</title><rect x="707.3" y="803.0" width="236.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="710.3" y="814.0">one/nio/http/HttpServer.handleR..</text>
</g>
<g>
<title>RequestHandler3_putValueByKey.handleRequest (75 samples, 20.05%)</title><rect x="707.3" y="787.0" width="236.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="710.3" y="798.0">RequestHandler3_putValueByKey.h..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 1.60%)</title><rect x="707.3" y="771.0" width="18.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="710.3" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 1.60%)</title><rect x="707.3" y="755.0" width="18.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="710.3" y="766.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.27%)</title><rect x="707.3" y="739.0" width="3.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="710.3" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.34%)</title><rect x="710.4" y="739.0" width="15.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="713.4" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.34%)</title><rect x="710.4" y="723.0" width="15.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="713.4" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 1.34%)</title><rect x="710.4" y="707.0" width="15.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="713.4" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 1.34%)</title><rect x="710.4" y="691.0" width="15.8" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="713.4" y="702.0"></text>
</g>
<g>
<title>__send (5 samples, 1.34%)</title><rect x="710.4" y="675.0" width="15.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="713.4" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.34%)</title><rect x="710.4" y="659.0" width="15.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="713.4" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.34%)</title><rect x="710.4" y="643.0" width="15.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="713.4" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (5 samples, 1.34%)</title><rect x="710.4" y="627.0" width="15.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="713.4" y="638.0"></text>
</g>
<g>
<title>__sys_sendto (5 samples, 1.34%)</title><rect x="710.4" y="611.0" width="15.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.4" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (5 samples, 1.34%)</title><rect x="710.4" y="595.0" width="15.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="713.4" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (5 samples, 1.34%)</title><rect x="710.4" y="579.0" width="15.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="713.4" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (5 samples, 1.34%)</title><rect x="710.4" y="563.0" width="15.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="713.4" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (5 samples, 1.34%)</title><rect x="710.4" y="547.0" width="15.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="713.4" y="558.0"></text>
</g>
<g>
<title>tcp_push (5 samples, 1.34%)</title><rect x="710.4" y="531.0" width="15.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="713.4" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 1.34%)</title><rect x="710.4" y="515.0" width="15.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.4" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 1.34%)</title><rect x="710.4" y="499.0" width="15.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="713.4" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 1.34%)</title><rect x="710.4" y="483.0" width="15.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="713.4" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 1.34%)</title><rect x="710.4" y="467.0" width="15.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="713.4" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 1.34%)</title><rect x="710.4" y="451.0" width="15.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="713.4" y="462.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 1.34%)</title><rect x="710.4" y="435.0" width="15.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.4" y="446.0"></text>
</g>
<g>
<title>ip_output (5 samples, 1.34%)</title><rect x="710.4" y="419.0" width="15.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="713.4" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 1.34%)</title><rect x="710.4" y="403.0" width="15.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="713.4" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (5 samples, 1.34%)</title><rect x="710.4" y="387.0" width="15.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.4" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 1.34%)</title><rect x="710.4" y="371.0" width="15.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="713.4" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 1.34%)</title><rect x="710.4" y="355.0" width="15.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="713.4" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.20 (5 samples, 1.34%)</title><rect x="710.4" y="339.0" width="15.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="713.4" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 1.34%)</title><rect x="710.4" y="323.0" width="15.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="713.4" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 1.34%)</title><rect x="710.4" y="307.0" width="15.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="713.4" y="318.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 1.34%)</title><rect x="710.4" y="291.0" width="15.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="713.4" y="302.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 1.34%)</title><rect x="710.4" y="275.0" width="15.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="713.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 1.34%)</title><rect x="710.4" y="259.0" width="15.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="713.4" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 1.34%)</title><rect x="710.4" y="243.0" width="15.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="713.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 1.34%)</title><rect x="710.4" y="227.0" width="15.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="713.4" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 1.34%)</title><rect x="710.4" y="211.0" width="15.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="713.4" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 1.34%)</title><rect x="710.4" y="195.0" width="15.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.4" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 1.34%)</title><rect x="710.4" y="179.0" width="15.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="713.4" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 1.34%)</title><rect x="710.4" y="163.0" width="15.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="713.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 1.34%)</title><rect x="710.4" y="147.0" width="15.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="713.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 1.34%)</title><rect x="710.4" y="131.0" width="15.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.4" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 1.34%)</title><rect x="710.4" y="115.0" width="15.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="713.4" y="126.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.27%)</title><rect x="710.4" y="99.0" width="3.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="713.4" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.27%)</title><rect x="710.4" y="83.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="713.4" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.27%)</title><rect x="710.4" y="67.0" width="3.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="713.4" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.27%)</title><rect x="710.4" y="51.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="713.4" y="62.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.27%)</title><rect x="713.6" y="99.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="716.6" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.80%)</title><rect x="716.7" y="99.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="719.7" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.80%)</title><rect x="716.7" y="83.0" width="9.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="719.7" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.80%)</title><rect x="716.7" y="67.0" width="9.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="719.7" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.80%)</title><rect x="716.7" y="51.0" width="9.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="719.7" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.80%)</title><rect x="716.7" y="35.0" width="9.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="719.7" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyHttpServerImpl.putValueByKey (69 samples, 18.45%)</title><rect x="726.2" y="771.0" width="217.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="729.2" y="782.0">ru/mail/polis/service/basta12..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.upsert (69 samples, 18.45%)</title><rect x="726.2" y="755.0" width="217.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="729.2" y="766.0">ru/mail/polis/dao/basta123/My..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (69 samples, 18.45%)</title><rect x="726.2" y="739.0" width="217.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="729.2" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (69 samples, 18.45%)</title><rect x="726.2" y="723.0" width="217.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="729.2" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (43 samples, 11.50%)</title><rect x="729.4" y="707.0" width="135.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="732.4" y="718.0">Java_org_rocksdb_..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (43 samples, 11.50%)</title><rect x="729.4" y="691.0" width="135.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="732.4" y="702.0">rocksdb_put_helpe..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (43 samples, 11.50%)</title><rect x="729.4" y="675.0" width="135.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="732.4" y="686.0">rocksdb::DB::Put(..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (43 samples, 11.50%)</title><rect x="729.4" y="659.0" width="135.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="732.4" y="670.0">rocksdb::DBImpl::..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (42 samples, 11.23%)</title><rect x="729.4" y="643.0" width="132.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="732.4" y="654.0">rocksdb::DB::Put..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (42 samples, 11.23%)</title><rect x="729.4" y="627.0" width="132.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="732.4" y="638.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>__pthread_cond_destroy (1 samples, 0.27%)</title><rect x="729.4" y="611.0" width="3.1" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="732.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (40 samples, 10.70%)</title><rect x="732.5" y="611.0" width="126.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="735.5" y="622.0">rocksdb::DBImpl:..</text>
</g>
<g>
<title>__tls_get_addr (2 samples, 0.53%)</title><rect x="732.5" y="595.0" width="6.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="735.5" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="735.7" y="579.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="738.7" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="735.7" y="563.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="738.7" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="735.7" y="547.0" width="3.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="738.7" y="558.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.80%)</title><rect x="738.8" y="595.0" width="9.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="741.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.80%)</title><rect x="738.8" y="579.0" width="9.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="741.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.80%)</title><rect x="738.8" y="563.0" width="9.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="741.8" y="574.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (2 samples, 0.53%)</title><rect x="738.8" y="547.0" width="6.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="741.8" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.27%)</title><rect x="745.1" y="547.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="748.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::SetPerfLevel(rocksdb::PerfLevel) [clone .plt] (1 samples, 0.27%)</title><rect x="745.1" y="531.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="748.1" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (14 samples, 3.74%)</title><rect x="748.3" y="595.0" width="44.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="751.3" y="606.0">rock..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (14 samples, 3.74%)</title><rect x="748.3" y="579.0" width="44.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="751.3" y="590.0">rock..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (14 samples, 3.74%)</title><rect x="748.3" y="563.0" width="44.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="751.3" y="574.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (14 samples, 3.74%)</title><rect x="748.3" y="547.0" width="44.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="751.3" y="558.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (14 samples, 3.74%)</title><rect x="748.3" y="531.0" width="44.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="751.3" y="542.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (14 samples, 3.74%)</title><rect x="748.3" y="515.0" width="44.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="751.3" y="526.0">rock..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (13 samples, 3.48%)</title><rect x="748.3" y="499.0" width="41.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="751.3" y="510.0">boo..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (11 samples, 2.94%)</title><rect x="751.4" y="483.0" width="34.7" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="754.4" y="494.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (9 samples, 2.41%)</title><rect x="751.4" y="467.0" width="28.4" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="754.4" y="478.0">/t..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 2.41%)</title><rect x="751.4" y="451.0" width="28.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="754.4" y="462.0">ro..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (9 samples, 2.41%)</title><rect x="751.4" y="435.0" width="28.4" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="754.4" y="446.0">ro..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (4 samples, 1.07%)</title><rect x="751.4" y="419.0" width="12.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="754.4" y="430.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (4 samples, 1.07%)</title><rect x="751.4" y="403.0" width="12.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="754.4" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 1.07%)</title><rect x="751.4" y="387.0" width="12.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="754.4" y="398.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.27%)</title><rect x="757.8" y="371.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="760.8" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="760.9" y="371.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="763.9" y="382.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 1.07%)</title><rect x="764.1" y="419.0" width="12.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="767.1" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 1.07%)</title><rect x="764.1" y="403.0" width="12.6" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="767.1" y="414.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.27%)</title><rect x="764.1" y="387.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="767.1" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.80%)</title><rect x="767.2" y="387.0" width="9.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="770.2" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.80%)</title><rect x="767.2" y="371.0" width="9.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="770.2" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (3 samples, 0.80%)</title><rect x="767.2" y="355.0" width="9.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="770.2" y="366.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.27%)</title><rect x="776.7" y="419.0" width="3.1" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="779.7" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.27%)</title><rect x="776.7" y="403.0" width="3.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="779.7" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.53%)</title><rect x="779.8" y="467.0" width="6.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="782.8" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.53%)</title><rect x="779.8" y="451.0" width="6.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="782.8" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="779.8" y="435.0" width="3.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="782.8" y="446.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.27%)</title><rect x="779.8" y="419.0" width="3.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="782.8" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="779.8" y="403.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="782.8" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="779.8" y="387.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="782.8" y="398.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.27%)</title><rect x="779.8" y="371.0" width="3.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="782.8" y="382.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.27%)</title><rect x="783.0" y="435.0" width="3.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="786.0" y="446.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.27%)</title><rect x="783.0" y="419.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="786.0" y="430.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="783.0" y="403.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="786.0" y="414.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="783.0" y="387.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="786.0" y="398.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="783.0" y="371.0" width="3.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="786.0" y="382.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.27%)</title><rect x="786.1" y="483.0" width="3.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="789.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.27%)</title><rect x="786.1" y="467.0" width="3.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="789.1" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="786.1" y="451.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="789.1" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.27%)</title><rect x="786.1" y="435.0" width="3.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="789.1" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="786.1" y="419.0" width="3.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="789.1" y="430.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="786.1" y="403.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="789.1" y="414.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.27%)</title><rect x="789.3" y="499.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="792.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (13 samples, 3.48%)</title><rect x="792.5" y="595.0" width="41.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="795.5" y="606.0">roc..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.27%)</title><rect x="792.5" y="579.0" width="3.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="795.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (12 samples, 3.21%)</title><rect x="795.6" y="579.0" width="37.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="798.6" y="590.0">roc..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (12 samples, 3.21%)</title><rect x="795.6" y="563.0" width="37.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="798.6" y="574.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (12 samples, 3.21%)</title><rect x="795.6" y="547.0" width="37.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="798.6" y="558.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (12 samples, 3.21%)</title><rect x="795.6" y="531.0" width="37.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="798.6" y="542.0">roc..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (12 samples, 3.21%)</title><rect x="795.6" y="515.0" width="37.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="798.6" y="526.0">roc..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (12 samples, 3.21%)</title><rect x="795.6" y="499.0" width="37.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="798.6" y="510.0">roc..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (12 samples, 3.21%)</title><rect x="795.6" y="483.0" width="37.9" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="798.6" y="494.0">boo..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (12 samples, 3.21%)</title><rect x="795.6" y="467.0" width="37.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="798.6" y="478.0">/tm..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (11 samples, 2.94%)</title><rect x="798.8" y="451.0" width="34.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="801.8" y="462.0">/t..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (11 samples, 2.94%)</title><rect x="798.8" y="435.0" width="34.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="801.8" y="446.0">ro..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) [clone .plt] (1 samples, 0.27%)</title><rect x="798.8" y="419.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="801.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (10 samples, 2.67%)</title><rect x="801.9" y="419.0" width="31.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="804.9" y="430.0">ro..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="801.9" y="403.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="804.9" y="414.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.27%)</title><rect x="801.9" y="387.0" width="3.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="804.9" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="801.9" y="371.0" width="3.2" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="804.9" y="382.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="801.9" y="355.0" width="3.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="804.9" y="366.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.80%)</title><rect x="805.1" y="403.0" width="9.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="808.1" y="414.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.80%)</title><rect x="805.1" y="387.0" width="9.4" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="808.1" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.53%)</title><rect x="808.2" y="371.0" width="6.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="811.2" y="382.0"></text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.27%)</title><rect x="808.2" y="355.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="811.2" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="811.4" y="355.0" width="3.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="814.4" y="366.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.27%)</title><rect x="811.4" y="339.0" width="3.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="814.4" y="350.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.27%)</title><rect x="814.5" y="403.0" width="3.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="817.5" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.27%)</title><rect x="814.5" y="387.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="817.5" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.27%)</title><rect x="814.5" y="371.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="817.5" y="382.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.27%)</title><rect x="814.5" y="355.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="817.5" y="366.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.27%)</title><rect x="814.5" y="339.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="817.5" y="350.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.27%)</title><rect x="814.5" y="323.0" width="3.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="817.5" y="334.0"></text>
</g>
<g>
<title>futex_wait_setup (1 samples, 0.27%)</title><rect x="814.5" y="307.0" width="3.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="817.5" y="318.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 1.07%)</title><rect x="817.7" y="403.0" width="12.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="820.7" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.07%)</title><rect x="817.7" y="387.0" width="12.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="820.7" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.07%)</title><rect x="817.7" y="371.0" width="12.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="820.7" y="382.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 1.07%)</title><rect x="817.7" y="355.0" width="12.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="820.7" y="366.0"></text>
</g>
<g>
<title>do_futex (4 samples, 1.07%)</title><rect x="817.7" y="339.0" width="12.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="820.7" y="350.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 1.07%)</title><rect x="817.7" y="323.0" width="12.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="820.7" y="334.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 1.07%)</title><rect x="817.7" y="307.0" width="12.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="820.7" y="318.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 1.07%)</title><rect x="817.7" y="291.0" width="12.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="820.7" y="302.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 1.07%)</title><rect x="817.7" y="275.0" width="12.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="820.7" y="286.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.27%)</title><rect x="830.3" y="403.0" width="3.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="833.3" y="414.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 1.34%)</title><rect x="833.5" y="595.0" width="15.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="836.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.27%)</title><rect x="849.3" y="595.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="852.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.27%)</title><rect x="849.3" y="579.0" width="3.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="852.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupLeader(rocksdb::WriteThread::WriteGroup&amp;, rocksdb::Status) [clone .plt] (1 samples, 0.27%)</title><rect x="852.4" y="595.0" width="3.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="855.4" y="606.0"></text>
</g>
<g>
<title>std::_Rb_tree_increment(std::_Rb_tree_node_base*) (1 samples, 0.27%)</title><rect x="855.6" y="595.0" width="3.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="858.6" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.27%)</title><rect x="858.7" y="611.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="861.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::~WriteBatch() (1 samples, 0.27%)</title><rect x="861.9" y="643.0" width="3.1" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="864.9" y="654.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.34%)</title><rect x="865.0" y="707.0" width="15.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="868.0" y="718.0"></text>
</g>
<g>
<title>__libc_write (3 samples, 0.80%)</title><rect x="865.0" y="691.0" width="9.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="868.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.80%)</title><rect x="865.0" y="675.0" width="9.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="868.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.80%)</title><rect x="865.0" y="659.0" width="9.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="868.0" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (3 samples, 0.80%)</title><rect x="865.0" y="643.0" width="9.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="868.0" y="654.0"></text>
</g>
<g>
<title>ksys_write (3 samples, 0.80%)</title><rect x="865.0" y="627.0" width="9.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="868.0" y="638.0"></text>
</g>
<g>
<title>vfs_write (3 samples, 0.80%)</title><rect x="865.0" y="611.0" width="9.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="868.0" y="622.0"></text>
</g>
<g>
<title>__vfs_write (3 samples, 0.80%)</title><rect x="865.0" y="595.0" width="9.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="868.0" y="606.0"></text>
</g>
<g>
<title>new_sync_write (3 samples, 0.80%)</title><rect x="865.0" y="579.0" width="9.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="868.0" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (3 samples, 0.80%)</title><rect x="865.0" y="563.0" width="9.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="868.0" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (3 samples, 0.80%)</title><rect x="865.0" y="547.0" width="9.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="868.0" y="558.0"></text>
</g>
<g>
<title>generic_perform_write (3 samples, 0.80%)</title><rect x="865.0" y="531.0" width="9.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="868.0" y="542.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.27%)</title><rect x="865.0" y="515.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="868.0" y="526.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.27%)</title><rect x="865.0" y="499.0" width="3.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="868.0" y="510.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.27%)</title><rect x="865.0" y="483.0" width="3.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="868.0" y="494.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.53%)</title><rect x="868.2" y="515.0" width="6.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="871.2" y="526.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.53%)</title><rect x="868.2" y="499.0" width="6.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="871.2" y="510.0"></text>
</g>
<g>
<title>__mark_inode_dirty (2 samples, 0.53%)</title><rect x="868.2" y="483.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="871.2" y="494.0"></text>
</g>
<g>
<title>ext4_dirty_inode (2 samples, 0.53%)</title><rect x="868.2" y="467.0" width="6.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="871.2" y="478.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (2 samples, 0.53%)</title><rect x="868.2" y="451.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="871.2" y="462.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.27%)</title><rect x="868.2" y="435.0" width="3.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="871.2" y="446.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.27%)</title><rect x="868.2" y="419.0" width="3.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="871.2" y="430.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.27%)</title><rect x="871.3" y="435.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="874.3" y="446.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.27%)</title><rect x="871.3" y="419.0" width="3.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="874.3" y="430.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.53%)</title><rect x="874.5" y="691.0" width="6.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="877.5" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.53%)</title><rect x="874.5" y="675.0" width="6.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="877.5" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.53%)</title><rect x="874.5" y="659.0" width="6.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="877.5" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.53%)</title><rect x="874.5" y="643.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="877.5" y="654.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.53%)</title><rect x="874.5" y="627.0" width="6.3" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="877.5" y="638.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.53%)</title><rect x="874.5" y="611.0" width="6.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="877.5" y="622.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.53%)</title><rect x="874.5" y="595.0" width="6.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="877.5" y="606.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.53%)</title><rect x="874.5" y="579.0" width="6.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="877.5" y="590.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.53%)</title><rect x="874.5" y="563.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="877.5" y="574.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.53%)</title><rect x="874.5" y="547.0" width="6.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="877.5" y="558.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 1.07%)</title><rect x="880.8" y="707.0" width="12.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="883.8" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.07%)</title><rect x="880.8" y="691.0" width="12.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="883.8" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.07%)</title><rect x="880.8" y="675.0" width="12.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="883.8" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 1.07%)</title><rect x="880.8" y="659.0" width="12.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="883.8" y="670.0"></text>
</g>
<g>
<title>do_futex (4 samples, 1.07%)</title><rect x="880.8" y="643.0" width="12.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="883.8" y="654.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 1.07%)</title><rect x="880.8" y="627.0" width="12.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="883.8" y="638.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 1.07%)</title><rect x="880.8" y="611.0" width="12.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="883.8" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 1.07%)</title><rect x="880.8" y="595.0" width="12.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="883.8" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 1.07%)</title><rect x="880.8" y="579.0" width="12.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="883.8" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.27%)</title><rect x="893.4" y="707.0" width="3.2" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="896.4" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (15 samples, 4.01%)</title><rect x="896.6" y="707.0" width="47.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="899.6" y="718.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (13 samples, 3.48%)</title><rect x="902.9" y="691.0" width="41.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.9" y="702.0">ru/..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.27%)</title><rect x="902.9" y="675.0" width="3.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="905.9" y="686.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.27%)</title><rect x="902.9" y="659.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="905.9" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (12 samples, 3.21%)</title><rect x="906.0" y="675.0" width="37.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="909.0" y="686.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (12 samples, 3.21%)</title><rect x="906.0" y="659.0" width="37.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="909.0" y="670.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (12 samples, 3.21%)</title><rect x="906.0" y="643.0" width="37.9" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="909.0" y="654.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (10 samples, 2.67%)</title><rect x="909.2" y="627.0" width="31.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="912.2" y="638.0">Ja..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.27%)</title><rect x="909.2" y="611.0" width="3.2" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="912.2" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (3 samples, 0.80%)</title><rect x="912.4" y="611.0" width="9.4" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="915.4" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (3 samples, 0.80%)</title><rect x="912.4" y="595.0" width="9.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="915.4" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 1.07%)</title><rect x="921.8" y="611.0" width="12.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="924.8" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.27%)</title><rect x="921.8" y="595.0" width="3.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="924.8" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.80%)</title><rect x="925.0" y="595.0" width="9.4" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="928.0" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.80%)</title><rect x="925.0" y="579.0" width="9.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="928.0" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.53%)</title><rect x="928.1" y="563.0" width="6.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="931.1" y="574.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (2 samples, 0.53%)</title><rect x="928.1" y="547.0" width="6.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="931.1" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.53%)</title><rect x="934.4" y="611.0" width="6.3" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="937.4" y="622.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.27%)</title><rect x="934.4" y="595.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="937.4" y="606.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.27%)</title><rect x="937.6" y="595.0" width="3.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="940.6" y="606.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.27%)</title><rect x="937.6" y="579.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="940.6" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.27%)</title><rect x="940.7" y="627.0" width="3.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="943.7" y="638.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.53%)</title><rect x="943.9" y="835.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="946.9" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.53%)</title><rect x="943.9" y="819.0" width="6.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="946.9" y="830.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.53%)</title><rect x="943.9" y="803.0" width="6.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="946.9" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.27%)</title><rect x="947.1" y="787.0" width="3.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="950.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.27%)</title><rect x="947.1" y="771.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="950.1" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.27%)</title><rect x="947.1" y="755.0" width="3.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="950.1" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.27%)</title><rect x="947.1" y="739.0" width="3.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="950.1" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.27%)</title><rect x="947.1" y="723.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="950.1" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.27%)</title><rect x="947.1" y="707.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="950.1" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.27%)</title><rect x="947.1" y="691.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="950.1" y="702.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=6055] (76 samples, 20.32%)</title><rect x="950.2" y="899.0" width="239.8" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="953.2" y="910.0">[NIO Selector #3 tid=6055]</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.27%)</title><rect x="950.2" y="883.0" width="3.2" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="953.2" y="894.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.27%)</title><rect x="950.2" y="867.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="953.2" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.80%)</title><rect x="953.4" y="883.0" width="9.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="956.4" y="894.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (2 samples, 0.53%)</title><rect x="953.4" y="867.0" width="6.3" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="956.4" y="878.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (2 samples, 0.53%)</title><rect x="953.4" y="851.0" width="6.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="956.4" y="862.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="953.4" y="835.0" width="6.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="956.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="953.4" y="819.0" width="6.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="956.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="953.4" y="803.0" width="6.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="956.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (2 samples, 0.53%)</title><rect x="953.4" y="787.0" width="6.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="956.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (2 samples, 0.53%)</title><rect x="953.4" y="771.0" width="6.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="956.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (2 samples, 0.53%)</title><rect x="953.4" y="755.0" width="6.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="956.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.53%)</title><rect x="953.4" y="739.0" width="6.3" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="956.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.53%)</title><rect x="953.4" y="723.0" width="6.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="956.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="953.4" y="707.0" width="6.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="956.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.53%)</title><rect x="953.4" y="691.0" width="6.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="956.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.53%)</title><rect x="953.4" y="675.0" width="6.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="956.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.53%)</title><rect x="953.4" y="659.0" width="6.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="956.4" y="670.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.53%)</title><rect x="953.4" y="643.0" width="6.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="956.4" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (2 samples, 0.53%)</title><rect x="953.4" y="627.0" width="6.3" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="956.4" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (2 samples, 0.53%)</title><rect x="953.4" y="611.0" width="6.3" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="956.4" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.53%)</title><rect x="953.4" y="595.0" width="6.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="956.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.53%)</title><rect x="953.4" y="579.0" width="6.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="956.4" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="953.4" y="563.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="956.4" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.27%)</title><rect x="953.4" y="547.0" width="3.1" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="956.4" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="953.4" y="531.0" width="3.1" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="956.4" y="542.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.27%)</title><rect x="953.4" y="515.0" width="3.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="956.4" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="956.5" y="563.0" width="3.2" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="959.5" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.27%)</title><rect x="956.5" y="547.0" width="3.2" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="959.5" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="956.5" y="531.0" width="3.2" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="959.5" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="956.5" y="515.0" width="3.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="959.5" y="526.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.27%)</title><rect x="959.7" y="867.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="962.7" y="878.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (72 samples, 19.25%)</title><rect x="962.8" y="883.0" width="227.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="965.8" y="894.0">one/nio/server/SelectorThread...</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.27%)</title><rect x="966.0" y="867.0" width="3.1" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="969.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 1.34%)</title><rect x="969.1" y="867.0" width="15.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="972.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 1.34%)</title><rect x="969.1" y="851.0" width="15.8" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="972.1" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.07%)</title><rect x="972.3" y="835.0" width="12.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="975.3" y="846.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 1.07%)</title><rect x="972.3" y="819.0" width="12.6" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="975.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.07%)</title><rect x="972.3" y="803.0" width="12.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="975.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.07%)</title><rect x="972.3" y="787.0" width="12.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="975.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 1.07%)</title><rect x="972.3" y="771.0" width="12.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="975.3" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 1.07%)</title><rect x="972.3" y="755.0" width="12.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="975.3" y="766.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 1.07%)</title><rect x="972.3" y="739.0" width="12.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="975.3" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (2 samples, 0.53%)</title><rect x="972.3" y="723.0" width="6.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="975.3" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (2 samples, 0.53%)</title><rect x="972.3" y="707.0" width="6.3" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="975.3" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.27%)</title><rect x="975.5" y="691.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="978.5" y="702.0"></text>
</g>
<g>
<title>sock_poll (1 samples, 0.27%)</title><rect x="975.5" y="675.0" width="3.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="978.5" y="686.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.27%)</title><rect x="975.5" y="659.0" width="3.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="978.5" y="670.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.53%)</title><rect x="978.6" y="723.0" width="6.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="981.6" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.53%)</title><rect x="978.6" y="707.0" width="6.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="981.6" y="718.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.53%)</title><rect x="978.6" y="691.0" width="6.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="981.6" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.53%)</title><rect x="978.6" y="675.0" width="6.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="981.6" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.53%)</title><rect x="978.6" y="659.0" width="6.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="981.6" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (65 samples, 17.38%)</title><rect x="984.9" y="867.0" width="205.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="987.9" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (65 samples, 17.38%)</title><rect x="984.9" y="851.0" width="205.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="987.9" y="862.0">one/nio/http/HttpSession.pr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (63 samples, 16.84%)</title><rect x="984.9" y="835.0" width="198.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.9" y="846.0">one/nio/http/HttpSession.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (62 samples, 16.58%)</title><rect x="984.9" y="819.0" width="195.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="987.9" y="830.0">one/nio/http/HttpSession...</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (62 samples, 16.58%)</title><rect x="984.9" y="803.0" width="195.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="987.9" y="814.0">one/nio/http/HttpServer.h..</text>
</g>
<g>
<title>RequestHandler3_putValueByKey.handleRequest (62 samples, 16.58%)</title><rect x="984.9" y="787.0" width="195.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="987.9" y="798.0">RequestHandler3_putValueB..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 2.14%)</title><rect x="984.9" y="771.0" width="25.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="987.9" y="782.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 2.14%)</title><rect x="984.9" y="755.0" width="25.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="987.9" y="766.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.27%)</title><rect x="984.9" y="739.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="987.9" y="750.0"></text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.append (1 samples, 0.27%)</title><rect x="984.9" y="723.0" width="3.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="987.9" y="734.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.length (1 samples, 0.27%)</title><rect x="984.9" y="707.0" width="3.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="987.9" y="718.0"></text>
</g>
<g>
<title>java/lang/String.charAt (1 samples, 0.27%)</title><rect x="984.9" y="691.0" width="3.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="987.9" y="702.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.27%)</title><rect x="984.9" y="675.0" width="3.2" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="987.9" y="686.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 1.87%)</title><rect x="988.1" y="739.0" width="22.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="991.1" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (7 samples, 1.87%)</title><rect x="988.1" y="723.0" width="22.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="991.1" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (7 samples, 1.87%)</title><rect x="988.1" y="707.0" width="22.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="991.1" y="718.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (7 samples, 1.87%)</title><rect x="988.1" y="691.0" width="22.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="991.1" y="702.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.27%)</title><rect x="988.1" y="675.0" width="3.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="991.1" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="988.1" y="659.0" width="3.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="991.1" y="670.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="988.1" y="643.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="991.1" y="654.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="988.1" y="627.0" width="3.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="991.1" y="638.0"></text>
</g>
<g>
<title>__send (6 samples, 1.60%)</title><rect x="991.2" y="675.0" width="19.0" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="994.2" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.60%)</title><rect x="991.2" y="659.0" width="19.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.2" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.60%)</title><rect x="991.2" y="643.0" width="19.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.2" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (6 samples, 1.60%)</title><rect x="991.2" y="627.0" width="19.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="994.2" y="638.0"></text>
</g>
<g>
<title>__sys_sendto (6 samples, 1.60%)</title><rect x="991.2" y="611.0" width="19.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.2" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (6 samples, 1.60%)</title><rect x="991.2" y="595.0" width="19.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="994.2" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (6 samples, 1.60%)</title><rect x="991.2" y="579.0" width="19.0" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="994.2" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 1.60%)</title><rect x="991.2" y="563.0" width="19.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.2" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (6 samples, 1.60%)</title><rect x="991.2" y="547.0" width="19.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.2" y="558.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 1.60%)</title><rect x="991.2" y="531.0" width="19.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="994.2" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 1.60%)</title><rect x="991.2" y="515.0" width="19.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="994.2" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (6 samples, 1.60%)</title><rect x="991.2" y="499.0" width="19.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="994.2" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 1.34%)</title><rect x="991.2" y="483.0" width="15.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="994.2" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 1.34%)</title><rect x="991.2" y="467.0" width="15.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="994.2" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 1.34%)</title><rect x="991.2" y="451.0" width="15.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="994.2" y="462.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 1.34%)</title><rect x="991.2" y="435.0" width="15.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="994.2" y="446.0"></text>
</g>
<g>
<title>ip_output (5 samples, 1.34%)</title><rect x="991.2" y="419.0" width="15.8" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="994.2" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 1.34%)</title><rect x="991.2" y="403.0" width="15.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="994.2" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (5 samples, 1.34%)</title><rect x="991.2" y="387.0" width="15.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="994.2" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 1.34%)</title><rect x="991.2" y="371.0" width="15.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="994.2" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 1.07%)</title><rect x="991.2" y="355.0" width="12.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="994.2" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.20 (4 samples, 1.07%)</title><rect x="991.2" y="339.0" width="12.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="994.2" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 1.07%)</title><rect x="991.2" y="323.0" width="12.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="994.2" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 1.07%)</title><rect x="991.2" y="307.0" width="12.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="994.2" y="318.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 1.07%)</title><rect x="991.2" y="291.0" width="12.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="994.2" y="302.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 1.07%)</title><rect x="991.2" y="275.0" width="12.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="994.2" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 1.07%)</title><rect x="991.2" y="259.0" width="12.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="994.2" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 1.07%)</title><rect x="991.2" y="243.0" width="12.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="994.2" y="254.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 1.07%)</title><rect x="991.2" y="227.0" width="12.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="994.2" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 1.07%)</title><rect x="991.2" y="211.0" width="12.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="994.2" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 1.07%)</title><rect x="991.2" y="195.0" width="12.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="994.2" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 1.07%)</title><rect x="991.2" y="179.0" width="12.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="994.2" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 1.07%)</title><rect x="991.2" y="163.0" width="12.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="994.2" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 1.07%)</title><rect x="991.2" y="147.0" width="12.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="994.2" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 1.07%)</title><rect x="991.2" y="131.0" width="12.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="994.2" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 1.07%)</title><rect x="991.2" y="115.0" width="12.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="994.2" y="126.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.27%)</title><rect x="991.2" y="99.0" width="3.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="994.2" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.27%)</title><rect x="991.2" y="83.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="994.2" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.27%)</title><rect x="991.2" y="67.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="994.2" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.27%)</title><rect x="991.2" y="51.0" width="3.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="994.2" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.27%)</title><rect x="991.2" y="35.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="994.2" y="46.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.27%)</title><rect x="994.4" y="99.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="997.4" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.27%)</title><rect x="997.5" y="99.0" width="3.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1000.5" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.27%)</title><rect x="997.5" y="83.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1000.5" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.27%)</title><rect x="997.5" y="67.0" width="3.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1000.5" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.27%)</title><rect x="997.5" y="51.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1000.5" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.27%)</title><rect x="997.5" y="35.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1000.5" y="46.0"></text>
</g>
<g>
<title>tcp_event_data_recv (1 samples, 0.27%)</title><rect x="1000.7" y="99.0" width="3.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1003.7" y="110.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.27%)</title><rect x="1003.9" y="355.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1006.9" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.27%)</title><rect x="1003.9" y="339.0" width="3.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1006.9" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.27%)</title><rect x="1003.9" y="323.0" width="3.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1006.9" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.27%)</title><rect x="1003.9" y="307.0" width="3.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1006.9" y="318.0"></text>
</g>
<g>
<title>tcp_event_new_data_sent (1 samples, 0.27%)</title><rect x="1007.0" y="483.0" width="3.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1010.0" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyHttpServerImpl.putValueByKey (54 samples, 14.44%)</title><rect x="1010.2" y="771.0" width="170.3" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1013.2" y="782.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.upsert (54 samples, 14.44%)</title><rect x="1010.2" y="755.0" width="170.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1013.2" y="766.0">ru/mail/polis/dao/bast..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (54 samples, 14.44%)</title><rect x="1010.2" y="739.0" width="170.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1013.2" y="750.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (53 samples, 14.17%)</title><rect x="1013.3" y="723.0" width="167.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1016.3" y="734.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (32 samples, 8.56%)</title><rect x="1013.3" y="707.0" width="101.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1016.3" y="718.0">Java_org_roc..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (32 samples, 8.56%)</title><rect x="1013.3" y="691.0" width="101.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1016.3" y="702.0">rocksdb_put_..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (32 samples, 8.56%)</title><rect x="1013.3" y="675.0" width="101.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1016.3" y="686.0">rocksdb::DB:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (32 samples, 8.56%)</title><rect x="1013.3" y="659.0" width="101.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1016.3" y="670.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (32 samples, 8.56%)</title><rect x="1013.3" y="643.0" width="101.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1016.3" y="654.0">rocksdb::DB:..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (32 samples, 8.56%)</title><rect x="1013.3" y="627.0" width="101.0" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1016.3" y="638.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (31 samples, 8.29%)</title><rect x="1013.3" y="611.0" width="97.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1016.3" y="622.0">rocksdb::DB..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.27%)</title><rect x="1013.3" y="595.0" width="3.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1016.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (2 samples, 0.53%)</title><rect x="1016.5" y="595.0" width="6.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1019.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (2 samples, 0.53%)</title><rect x="1016.5" y="579.0" width="6.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1019.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (2 samples, 0.53%)</title><rect x="1016.5" y="563.0" width="6.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1019.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (1 samples, 0.27%)</title><rect x="1016.5" y="547.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1019.5" y="558.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::WriteBuffered(char const*, unsigned long) (1 samples, 0.27%)</title><rect x="1016.5" y="531.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1019.5" y="542.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.27%)</title><rect x="1016.5" y="515.0" width="3.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1019.5" y="526.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::EmitPhysicalRecord(rocksdb::log::RecordType, char const*, unsigned long) (1 samples, 0.27%)</title><rect x="1019.6" y="547.0" width="3.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1022.6" y="558.0"></text>
</g>
<g>
<title>memcpy@GLIBC_2.2.5 (1 samples, 0.27%)</title><rect x="1019.6" y="531.0" width="3.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="1022.6" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="1019.6" y="515.0" width="3.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1022.6" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="1019.6" y="499.0" width="3.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1022.6" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="1019.6" y="483.0" width="3.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1022.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::LockInternal() [clone .plt] (1 samples, 0.27%)</title><rect x="1022.8" y="595.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1025.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 2.41%)</title><rect x="1025.9" y="595.0" width="28.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1028.9" y="606.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 2.41%)</title><rect x="1025.9" y="579.0" width="28.4" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1028.9" y="590.0">ro..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 2.41%)</title><rect x="1025.9" y="563.0" width="28.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1028.9" y="574.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 2.41%)</title><rect x="1025.9" y="547.0" width="28.4" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1028.9" y="558.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 2.41%)</title><rect x="1025.9" y="531.0" width="28.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1028.9" y="542.0">ro..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (9 samples, 2.41%)</title><rect x="1025.9" y="515.0" width="28.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1028.9" y="526.0">ro..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (9 samples, 2.41%)</title><rect x="1025.9" y="499.0" width="28.4" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1028.9" y="510.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (9 samples, 2.41%)</title><rect x="1025.9" y="483.0" width="28.4" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1028.9" y="494.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (8 samples, 2.14%)</title><rect x="1025.9" y="467.0" width="25.3" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1028.9" y="478.0">/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (8 samples, 2.14%)</title><rect x="1025.9" y="451.0" width="25.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1028.9" y="462.0">r..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.27%)</title><rect x="1025.9" y="435.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1028.9" y="446.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (7 samples, 1.87%)</title><rect x="1029.1" y="435.0" width="22.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1032.1" y="446.0">r..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (4 samples, 1.07%)</title><rect x="1029.1" y="419.0" width="12.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1032.1" y="430.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (4 samples, 1.07%)</title><rect x="1029.1" y="403.0" width="12.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="1032.1" y="414.0"></text>
</g>
<g>
<title>JavaCallArguments::JavaCallArguments(int) (1 samples, 0.27%)</title><rect x="1029.1" y="387.0" width="3.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1032.1" y="398.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.27%)</title><rect x="1032.2" y="387.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1035.2" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.53%)</title><rect x="1035.4" y="387.0" width="6.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1038.4" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="1035.4" y="371.0" width="3.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1038.4" y="382.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="1038.6" y="371.0" width="3.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1041.6" y="382.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="1038.6" y="355.0" width="3.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1041.6" y="366.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="1038.6" y="339.0" width="3.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1041.6" y="350.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.53%)</title><rect x="1041.7" y="419.0" width="6.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1044.7" y="430.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.53%)</title><rect x="1041.7" y="403.0" width="6.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1044.7" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.53%)</title><rect x="1041.7" y="387.0" width="6.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1044.7" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.27%)</title><rect x="1044.9" y="371.0" width="3.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1047.9" y="382.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.27%)</title><rect x="1044.9" y="355.0" width="3.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1047.9" y="366.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.27%)</title><rect x="1048.0" y="419.0" width="3.2" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="1051.0" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.27%)</title><rect x="1048.0" y="403.0" width="3.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1051.0" y="414.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.27%)</title><rect x="1051.2" y="467.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1054.2" y="478.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.27%)</title><rect x="1051.2" y="451.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1054.2" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="1051.2" y="435.0" width="3.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1054.2" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.27%)</title><rect x="1051.2" y="419.0" width="3.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1054.2" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="1051.2" y="403.0" width="3.1" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1054.2" y="414.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (14 samples, 3.74%)</title><rect x="1054.3" y="595.0" width="44.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1057.3" y="606.0">rock..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (14 samples, 3.74%)</title><rect x="1054.3" y="579.0" width="44.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1057.3" y="590.0">rock..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (14 samples, 3.74%)</title><rect x="1054.3" y="563.0" width="44.2" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1057.3" y="574.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (14 samples, 3.74%)</title><rect x="1054.3" y="547.0" width="44.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1057.3" y="558.0">rock..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (13 samples, 3.48%)</title><rect x="1054.3" y="531.0" width="41.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1057.3" y="542.0">roc..</text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const [clone .plt] (1 samples, 0.27%)</title><rect x="1054.3" y="515.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1057.3" y="526.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (12 samples, 3.21%)</title><rect x="1057.5" y="515.0" width="37.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1060.5" y="526.0">roc..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (1 samples, 0.27%)</title><rect x="1060.6" y="499.0" width="3.2" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1063.6" y="510.0"></text>
</g>
<g>
<title>rocksdb::ConcurrentArena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.27%)</title><rect x="1060.6" y="483.0" width="3.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1063.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (10 samples, 2.67%)</title><rect x="1063.8" y="499.0" width="31.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1066.8" y="510.0">ro..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (10 samples, 2.67%)</title><rect x="1063.8" y="483.0" width="31.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1066.8" y="494.0">bo..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (10 samples, 2.67%)</title><rect x="1063.8" y="467.0" width="31.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1066.8" y="478.0">/t..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (9 samples, 2.41%)</title><rect x="1067.0" y="451.0" width="28.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1070.0" y="462.0">/t..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (9 samples, 2.41%)</title><rect x="1067.0" y="435.0" width="28.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1070.0" y="446.0">ro..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (9 samples, 2.41%)</title><rect x="1067.0" y="419.0" width="28.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1070.0" y="430.0">ro..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.27%)</title><rect x="1067.0" y="403.0" width="3.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1070.0" y="414.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.27%)</title><rect x="1067.0" y="387.0" width="3.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1070.0" y="398.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.27%)</title><rect x="1067.0" y="371.0" width="3.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1070.0" y="382.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (6 samples, 1.60%)</title><rect x="1070.1" y="403.0" width="18.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1073.1" y="414.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (6 samples, 1.60%)</title><rect x="1070.1" y="387.0" width="18.9" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1073.1" y="398.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.27%)</title><rect x="1073.3" y="371.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1076.3" y="382.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 1.07%)</title><rect x="1076.4" y="371.0" width="12.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1079.4" y="382.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.27%)</title><rect x="1076.4" y="355.0" width="3.2" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1079.4" y="366.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.27%)</title><rect x="1079.6" y="355.0" width="3.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1082.6" y="366.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.53%)</title><rect x="1082.7" y="355.0" width="6.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1085.7" y="366.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.27%)</title><rect x="1082.7" y="339.0" width="3.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1085.7" y="350.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="1085.9" y="339.0" width="3.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1088.9" y="350.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="1085.9" y="323.0" width="3.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1088.9" y="334.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="1085.9" y="307.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1088.9" y="318.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.27%)</title><rect x="1089.0" y="403.0" width="3.2" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="1092.0" y="414.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.27%)</title><rect x="1089.0" y="387.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1092.0" y="398.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.27%)</title><rect x="1089.0" y="371.0" width="3.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1092.0" y="382.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.27%)</title><rect x="1089.0" y="355.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1092.0" y="366.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.27%)</title><rect x="1089.0" y="339.0" width="3.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1092.0" y="350.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.27%)</title><rect x="1089.0" y="323.0" width="3.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1092.0" y="334.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.27%)</title><rect x="1089.0" y="307.0" width="3.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1092.0" y="318.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.27%)</title><rect x="1089.0" y="291.0" width="3.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1092.0" y="302.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.27%)</title><rect x="1089.0" y="275.0" width="3.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1092.0" y="286.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.27%)</title><rect x="1092.2" y="403.0" width="3.1" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1095.2" y="414.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.27%)</title><rect x="1092.2" y="387.0" width="3.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1095.2" y="398.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::MemTable*, std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt;, std::_Select1st&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, std::less&lt;rocksdb::MemTable*&gt;, std::allocator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt; &gt;::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator&lt;std::pair&lt;rocksdb::MemTable* const, rocksdb::MemTablePostProcessInfo&gt; &gt;, rocksdb::MemTable* const&amp;) (1 samples, 0.27%)</title><rect x="1095.3" y="531.0" width="3.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1098.3" y="542.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (2 samples, 0.53%)</title><rect x="1098.5" y="595.0" width="6.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1101.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.27%)</title><rect x="1104.8" y="595.0" width="3.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1107.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.27%)</title><rect x="1104.8" y="579.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1107.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::LinkOne(rocksdb::WriteThread::Writer*, std::atomic&lt;rocksdb::WriteThread::Writer*&gt;*) (1 samples, 0.27%)</title><rect x="1108.0" y="595.0" width="3.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1111.0" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Count(rocksdb::WriteBatch const*) (1 samples, 0.27%)</title><rect x="1111.1" y="611.0" width="3.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1114.1" y="622.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.80%)</title><rect x="1114.3" y="707.0" width="9.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="1117.3" y="718.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.53%)</title><rect x="1114.3" y="691.0" width="6.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="1117.3" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.53%)</title><rect x="1114.3" y="675.0" width="6.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1117.3" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.53%)</title><rect x="1114.3" y="659.0" width="6.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1117.3" y="670.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.53%)</title><rect x="1114.3" y="643.0" width="6.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1117.3" y="654.0"></text>
</g>
<g>
<title>ksys_write (2 samples, 0.53%)</title><rect x="1114.3" y="627.0" width="6.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1117.3" y="638.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.53%)</title><rect x="1114.3" y="611.0" width="6.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1117.3" y="622.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.53%)</title><rect x="1114.3" y="595.0" width="6.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1117.3" y="606.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.53%)</title><rect x="1114.3" y="579.0" width="6.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1117.3" y="590.0"></text>
</g>
<g>
<title>ext4_file_write_iter (2 samples, 0.53%)</title><rect x="1114.3" y="563.0" width="6.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1117.3" y="574.0"></text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.53%)</title><rect x="1114.3" y="547.0" width="6.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="1117.3" y="558.0"></text>
</g>
<g>
<title>generic_perform_write (2 samples, 0.53%)</title><rect x="1114.3" y="531.0" width="6.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1117.3" y="542.0"></text>
</g>
<g>
<title>iov_iter_copy_from_user_atomic (1 samples, 0.27%)</title><rect x="1114.3" y="515.0" width="3.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1117.3" y="526.0"></text>
</g>
<g>
<title>iov_iter_fault_in_readable (1 samples, 0.27%)</title><rect x="1117.4" y="515.0" width="3.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1120.4" y="526.0"></text>
</g>
<g>
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.27%)</title><rect x="1120.6" y="691.0" width="3.1" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1123.6" y="702.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.80%)</title><rect x="1123.7" y="707.0" width="9.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1126.7" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.80%)</title><rect x="1123.7" y="691.0" width="9.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1126.7" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.80%)</title><rect x="1123.7" y="675.0" width="9.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1126.7" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.80%)</title><rect x="1123.7" y="659.0" width="9.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1126.7" y="670.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.80%)</title><rect x="1123.7" y="643.0" width="9.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1126.7" y="654.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.80%)</title><rect x="1123.7" y="627.0" width="9.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1126.7" y="638.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.80%)</title><rect x="1123.7" y="611.0" width="9.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1126.7" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.80%)</title><rect x="1123.7" y="595.0" width="9.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1126.7" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.80%)</title><rect x="1123.7" y="579.0" width="9.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1126.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (15 samples, 4.01%)</title><rect x="1133.2" y="707.0" width="47.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1136.2" y="718.0">ru/m..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (14 samples, 3.74%)</title><rect x="1133.2" y="691.0" width="44.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1136.2" y="702.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (14 samples, 3.74%)</title><rect x="1133.2" y="675.0" width="44.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1136.2" y="686.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (14 samples, 3.74%)</title><rect x="1133.2" y="659.0" width="44.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1136.2" y="670.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (14 samples, 3.74%)</title><rect x="1133.2" y="643.0" width="44.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1136.2" y="654.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (12 samples, 3.21%)</title><rect x="1133.2" y="627.0" width="37.9" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1136.2" y="638.0">Jav..</text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.27%)</title><rect x="1133.2" y="611.0" width="3.2" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1136.2" y="622.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (4 samples, 1.07%)</title><rect x="1136.4" y="611.0" width="12.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1139.4" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="1145.8" y="595.0" width="3.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1148.8" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="1145.8" y="579.0" width="3.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1148.8" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="1145.8" y="563.0" width="3.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1148.8" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.53%)</title><rect x="1149.0" y="611.0" width="6.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1152.0" y="622.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.53%)</title><rect x="1149.0" y="595.0" width="6.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1152.0" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 1.07%)</title><rect x="1155.3" y="611.0" width="12.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1158.3" y="622.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.27%)</title><rect x="1155.3" y="595.0" width="3.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1158.3" y="606.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.27%)</title><rect x="1158.4" y="595.0" width="3.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1161.4" y="606.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.53%)</title><rect x="1161.6" y="595.0" width="6.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.6" y="606.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.53%)</title><rect x="1161.6" y="579.0" width="6.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1164.6" y="590.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.27%)</title><rect x="1161.6" y="563.0" width="3.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1164.6" y="574.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.27%)</title><rect x="1161.6" y="547.0" width="3.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1164.6" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.27%)</title><rect x="1164.8" y="563.0" width="3.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1167.8" y="574.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.27%)</title><rect x="1167.9" y="611.0" width="3.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="1170.9" y="622.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.53%)</title><rect x="1171.1" y="627.0" width="6.3" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1174.1" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.27%)</title><rect x="1177.4" y="691.0" width="3.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1180.4" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.27%)</title><rect x="1177.4" y="675.0" width="3.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1180.4" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.27%)</title><rect x="1177.4" y="659.0" width="3.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1180.4" y="670.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.27%)</title><rect x="1180.5" y="819.0" width="3.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1183.5" y="830.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.27%)</title><rect x="1180.5" y="803.0" width="3.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1183.5" y="814.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.27%)</title><rect x="1180.5" y="787.0" width="3.2" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1183.5" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.53%)</title><rect x="1183.7" y="835.0" width="6.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1186.7" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.53%)</title><rect x="1183.7" y="819.0" width="6.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1186.7" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.27%)</title><rect x="1186.8" y="803.0" width="3.2" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="1189.8" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.27%)</title><rect x="1186.8" y="787.0" width="3.2" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1189.8" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.27%)</title><rect x="1186.8" y="771.0" width="3.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1189.8" y="782.0"></text>
</g>
</g>
</svg>
