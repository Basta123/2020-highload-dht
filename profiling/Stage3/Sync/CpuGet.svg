<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="949"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="949"> </text>
<g id="frames">
<g>
<title>all (334 samples, 100.00%)</title><rect x="10.0" y="915.0" width="1180.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="926.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=6013] (4 samples, 1.20%)</title><rect x="10.0" y="899.0" width="14.1" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="13.0" y="910.0"></text>
</g>
<g>
<title>edge_order(CFGEdge**, CFGEdge**) (1 samples, 0.30%)</title><rect x="10.0" y="883.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="13.0" y="894.0"></text>
</g>
<g>
<title>start_thread (3 samples, 0.90%)</title><rect x="13.5" y="883.0" width="10.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="16.5" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (3 samples, 0.90%)</title><rect x="13.5" y="867.0" width="10.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="16.5" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (3 samples, 0.90%)</title><rect x="13.5" y="851.0" width="10.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="16.5" y="862.0"></text>
</g>
<g>
<title>JavaThread::run() (3 samples, 0.90%)</title><rect x="13.5" y="835.0" width="10.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="16.5" y="846.0"></text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (3 samples, 0.90%)</title><rect x="13.5" y="819.0" width="10.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.5" y="830.0"></text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (3 samples, 0.90%)</title><rect x="13.5" y="803.0" width="10.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.5" y="814.0"></text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (3 samples, 0.90%)</title><rect x="13.5" y="787.0" width="10.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.5" y="798.0"></text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (3 samples, 0.90%)</title><rect x="13.5" y="771.0" width="10.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="16.5" y="782.0"></text>
</g>
<g>
<title>Compile::Code_Gen() (1 samples, 0.30%)</title><rect x="13.5" y="755.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="16.5" y="766.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.30%)</title><rect x="13.5" y="739.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="16.5" y="750.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.30%)</title><rect x="13.5" y="723.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.5" y="734.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_late(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.30%)</title><rect x="13.5" y="707.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="16.5" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::insert_anti_dependences(Block*, Node*, bool) (1 samples, 0.30%)</title><rect x="13.5" y="691.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="16.5" y="702.0"></text>
</g>
<g>
<title>MachNode::memory_inputs(Node*&amp;, Node*&amp;) const (1 samples, 0.30%)</title><rect x="13.5" y="675.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.5" y="686.0"></text>
</g>
<g>
<title>Compile::Optimize() (2 samples, 0.60%)</title><rect x="17.1" y="755.0" width="7.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.1" y="766.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (1 samples, 0.30%)</title><rect x="17.1" y="739.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="20.1" y="750.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (1 samples, 0.30%)</title><rect x="17.1" y="723.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="20.1" y="734.0"></text>
</g>
<g>
<title>Node::pinned() const (1 samples, 0.30%)</title><rect x="17.1" y="707.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="20.1" y="718.0"></text>
</g>
<g>
<title>PhaseIterGVN::PhaseIterGVN(PhaseGVN*) (1 samples, 0.30%)</title><rect x="20.6" y="739.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="23.6" y="750.0"></text>
</g>
<g>
<title>PhaseIterGVN::add_users_to_worklist(Node*) (1 samples, 0.30%)</title><rect x="20.6" y="723.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="23.6" y="734.0"></text>
</g>
<g>
<title>[Finalizer tid=6011] (1 samples, 0.30%)</title><rect x="24.1" y="899.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="27.1" y="910.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer$FinalizerThread.run (1 samples, 0.30%)</title><rect x="24.1" y="883.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="27.1" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1 samples, 0.30%)</title><rect x="24.1" y="867.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="27.1" y="878.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.remove (1 samples, 0.30%)</title><rect x="24.1" y="851.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="27.1" y="862.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.reallyPoll (1 samples, 0.30%)</title><rect x="24.1" y="835.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="27.1" y="846.0"></text>
</g>
<g>
<title>[GC Thread#0 tid=6004] (1 samples, 0.30%)</title><rect x="27.7" y="899.0" width="3.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="30.7" y="910.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.30%)</title><rect x="27.7" y="883.0" width="3.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="30.7" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.30%)</title><rect x="27.7" y="867.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="30.7" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.30%)</title><rect x="27.7" y="851.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="30.7" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.30%)</title><rect x="27.7" y="835.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.7" y="846.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (1 samples, 0.30%)</title><rect x="27.7" y="819.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="30.7" y="830.0"></text>
</g>
<g>
<title>RefProcPhase3Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.30%)</title><rect x="27.7" y="803.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="30.7" y="814.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_final_keep_alive_work(DiscoveredList&amp;, OopClosure*, VoidClosure*) (1 samples, 0.30%)</title><rect x="27.7" y="787.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="30.7" y="798.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.30%)</title><rect x="27.7" y="771.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="30.7" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.30%)</title><rect x="27.7" y="755.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="30.7" y="766.0"></text>
</g>
<g>
<title>G1ParScanThreadState::copy_to_survivor_space(InCSetState, oopDesc*, markOopDesc*) (1 samples, 0.30%)</title><rect x="27.7" y="739.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="30.7" y="750.0"></text>
</g>
<g>
<title>[GC Thread#3 tid=6059] (1 samples, 0.30%)</title><rect x="31.2" y="899.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="34.2" y="910.0"></text>
</g>
<g>
<title>start_thread (1 samples, 0.30%)</title><rect x="31.2" y="883.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="34.2" y="894.0"></text>
</g>
<g>
<title>thread_native_entry(Thread*) (1 samples, 0.30%)</title><rect x="31.2" y="867.0" width="3.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="34.2" y="878.0"></text>
</g>
<g>
<title>Thread::call_run() (1 samples, 0.30%)</title><rect x="31.2" y="851.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="34.2" y="862.0"></text>
</g>
<g>
<title>GangWorker::loop() (1 samples, 0.30%)</title><rect x="31.2" y="835.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="34.2" y="846.0"></text>
</g>
<g>
<title>G1STWRefProcTaskProxy::work(unsigned int) (1 samples, 0.30%)</title><rect x="31.2" y="819.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="34.2" y="830.0"></text>
</g>
<g>
<title>RefProcPhase3Task::work(unsigned int, BoolObjectClosure&amp;, OopClosure&amp;, VoidClosure&amp;) (1 samples, 0.30%)</title><rect x="31.2" y="803.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="34.2" y="814.0"></text>
</g>
<g>
<title>ReferenceProcessor::process_final_keep_alive_work(DiscoveredList&amp;, OopClosure*, VoidClosure*) (1 samples, 0.30%)</title><rect x="31.2" y="787.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="34.2" y="798.0"></text>
</g>
<g>
<title>G1ParEvacuateFollowersClosure::do_void() (1 samples, 0.30%)</title><rect x="31.2" y="771.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="34.2" y="782.0"></text>
</g>
<g>
<title>G1ParScanThreadState::trim_queue() (1 samples, 0.30%)</title><rect x="31.2" y="755.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="34.2" y="766.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=6052] (60 samples, 17.96%)</title><rect x="34.7" y="899.0" width="212.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="37.7" y="910.0">[NIO Selector #0 tid=6052]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (3 samples, 0.90%)</title><rect x="34.7" y="883.0" width="10.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="37.7" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (3 samples, 0.90%)</title><rect x="34.7" y="867.0" width="10.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="37.7" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (3 samples, 0.90%)</title><rect x="34.7" y="851.0" width="10.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="37.7" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (2 samples, 0.60%)</title><rect x="34.7" y="835.0" width="7.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="37.7" y="846.0"></text>
</g>
<g>
<title>os::PlatformEvent::park(long) (1 samples, 0.30%)</title><rect x="34.7" y="819.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="37.7" y="830.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.30%)</title><rect x="34.7" y="803.0" width="3.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="37.7" y="814.0"></text>
</g>
<g>
<title>to_abstime(timespec*, long, bool) (1 samples, 0.30%)</title><rect x="38.3" y="819.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="41.3" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="41.8" y="835.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="44.8" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="41.8" y="819.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="44.8" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="41.8" y="803.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="44.8" y="814.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="45.3" y="883.0" width="3.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="48.3" y="894.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.30%)</title><rect x="45.3" y="867.0" width="3.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="48.3" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="45.3" y="851.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="48.3" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="45.3" y="835.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="48.3" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="45.3" y="819.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="48.3" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="45.3" y="803.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="48.3" y="814.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.30%)</title><rect x="45.3" y="787.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="48.3" y="798.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.30%)</title><rect x="45.3" y="771.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="48.3" y="782.0"></text>
</g>
<g>
<title>plist_add (1 samples, 0.30%)</title><rect x="45.3" y="755.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="48.3" y="766.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.90%)</title><rect x="48.9" y="883.0" width="10.6" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="51.9" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.90%)</title><rect x="48.9" y="867.0" width="10.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="51.9" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.90%)</title><rect x="48.9" y="851.0" width="10.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="51.9" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.90%)</title><rect x="48.9" y="835.0" width="10.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="51.9" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.90%)</title><rect x="48.9" y="819.0" width="10.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="51.9" y="830.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.90%)</title><rect x="48.9" y="803.0" width="10.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="51.9" y="814.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.90%)</title><rect x="48.9" y="787.0" width="10.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="51.9" y="798.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.90%)</title><rect x="48.9" y="771.0" width="10.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="51.9" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.90%)</title><rect x="48.9" y="755.0" width="10.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="51.9" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.90%)</title><rect x="48.9" y="739.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="51.9" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.30%)</title><rect x="59.5" y="883.0" width="3.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="62.5" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="59.5" y="867.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="62.5" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="59.5" y="851.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="62.5" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="59.5" y="835.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="62.5" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="59.5" y="819.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="62.5" y="830.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.30%)</title><rect x="59.5" y="803.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="62.5" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.30%)</title><rect x="59.5" y="787.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="62.5" y="798.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.30%)</title><rect x="59.5" y="771.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="62.5" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.30%)</title><rect x="59.5" y="755.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="62.5" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.30%)</title><rect x="59.5" y="739.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="62.5" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (52 samples, 15.57%)</title><rect x="63.0" y="883.0" width="183.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="66.0" y="894.0">one/nio/server/SelectorT..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 1.50%)</title><rect x="63.0" y="867.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="66.0" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 1.50%)</title><rect x="63.0" y="851.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="66.0" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.50%)</title><rect x="63.0" y="835.0" width="17.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="66.0" y="846.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 1.50%)</title><rect x="63.0" y="819.0" width="17.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="66.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.20%)</title><rect x="66.5" y="803.0" width="14.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="69.5" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.20%)</title><rect x="66.5" y="787.0" width="14.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.5" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 1.20%)</title><rect x="66.5" y="771.0" width="14.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="69.5" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 1.20%)</title><rect x="66.5" y="755.0" width="14.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="69.5" y="766.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 1.20%)</title><rect x="66.5" y="739.0" width="14.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="69.5" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 1.20%)</title><rect x="66.5" y="723.0" width="14.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="69.5" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 1.20%)</title><rect x="66.5" y="707.0" width="14.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="69.5" y="718.0"></text>
</g>
<g>
<title>schedule (4 samples, 1.20%)</title><rect x="66.5" y="691.0" width="14.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="69.5" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 1.20%)</title><rect x="66.5" y="675.0" width="14.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="69.5" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 1.20%)</title><rect x="66.5" y="659.0" width="14.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="69.5" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (47 samples, 14.07%)</title><rect x="80.7" y="867.0" width="166.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="83.7" y="878.0">one/nio/net/Session.p..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (47 samples, 14.07%)</title><rect x="80.7" y="851.0" width="166.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="83.7" y="862.0">one/nio/http/HttpSess..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (41 samples, 12.28%)</title><rect x="80.7" y="835.0" width="144.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="83.7" y="846.0">one/nio/http/HttpS..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (39 samples, 11.68%)</title><rect x="84.2" y="819.0" width="137.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.2" y="830.0">one/nio/http/Http..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (39 samples, 11.68%)</title><rect x="84.2" y="803.0" width="137.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.2" y="814.0">one/nio/http/Http..</text>
</g>
<g>
<title>RequestHandler1_getValueByKey.handleRequest (38 samples, 11.38%)</title><rect x="84.2" y="787.0" width="134.2" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="87.2" y="798.0">RequestHandler1_g..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 1.50%)</title><rect x="84.2" y="771.0" width="17.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="87.2" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.50%)</title><rect x="84.2" y="755.0" width="17.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="87.2" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.50%)</title><rect x="84.2" y="739.0" width="17.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="87.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.50%)</title><rect x="84.2" y="723.0" width="17.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="87.2" y="734.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 1.50%)</title><rect x="84.2" y="707.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="87.2" y="718.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 1.50%)</title><rect x="84.2" y="691.0" width="17.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="87.2" y="702.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_write (1 samples, 0.30%)</title><rect x="84.2" y="675.0" width="3.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="87.2" y="686.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.30%)</title><rect x="84.2" y="659.0" width="3.5" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="87.2" y="670.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.30%)</title><rect x="84.2" y="643.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="87.2" y="654.0"></text>
</g>
<g>
<title>__send (4 samples, 1.20%)</title><rect x="87.7" y="675.0" width="14.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="90.7" y="686.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.20%)</title><rect x="87.7" y="659.0" width="14.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="90.7" y="670.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.20%)</title><rect x="87.7" y="643.0" width="14.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="90.7" y="654.0"></text>
</g>
<g>
<title>__x64_sys_sendto (2 samples, 0.60%)</title><rect x="87.7" y="627.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="90.7" y="638.0"></text>
</g>
<g>
<title>__sys_sendto (2 samples, 0.60%)</title><rect x="87.7" y="611.0" width="7.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="90.7" y="622.0"></text>
</g>
<g>
<title>sock_sendmsg (2 samples, 0.60%)</title><rect x="87.7" y="595.0" width="7.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="90.7" y="606.0"></text>
</g>
<g>
<title>inet6_sendmsg (2 samples, 0.60%)</title><rect x="87.7" y="579.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="90.7" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg (2 samples, 0.60%)</title><rect x="87.7" y="563.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.7" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (2 samples, 0.60%)</title><rect x="87.7" y="547.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="90.7" y="558.0"></text>
</g>
<g>
<title>tcp_push (2 samples, 0.60%)</title><rect x="87.7" y="531.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="90.7" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (2 samples, 0.60%)</title><rect x="87.7" y="515.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="90.7" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (2 samples, 0.60%)</title><rect x="87.7" y="499.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="90.7" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.60%)</title><rect x="87.7" y="483.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="90.7" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.60%)</title><rect x="87.7" y="467.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="90.7" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.60%)</title><rect x="87.7" y="451.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="90.7" y="462.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.60%)</title><rect x="87.7" y="435.0" width="7.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="90.7" y="446.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.60%)</title><rect x="87.7" y="419.0" width="7.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="90.7" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.60%)</title><rect x="87.7" y="403.0" width="7.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="90.7" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.60%)</title><rect x="87.7" y="387.0" width="7.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="90.7" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.60%)</title><rect x="87.7" y="371.0" width="7.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="90.7" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.60%)</title><rect x="87.7" y="355.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="90.7" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.20 (2 samples, 0.60%)</title><rect x="87.7" y="339.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="90.7" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.60%)</title><rect x="87.7" y="323.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="90.7" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.60%)</title><rect x="87.7" y="307.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="90.7" y="318.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.60%)</title><rect x="87.7" y="291.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="90.7" y="302.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.60%)</title><rect x="87.7" y="275.0" width="7.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="90.7" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.60%)</title><rect x="87.7" y="259.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="90.7" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.60%)</title><rect x="87.7" y="243.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="90.7" y="254.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.60%)</title><rect x="87.7" y="227.0" width="7.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="90.7" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.60%)</title><rect x="87.7" y="211.0" width="7.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="90.7" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.60%)</title><rect x="87.7" y="195.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="90.7" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.60%)</title><rect x="87.7" y="179.0" width="7.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="90.7" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.60%)</title><rect x="87.7" y="163.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="90.7" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.60%)</title><rect x="87.7" y="147.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="90.7" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.60%)</title><rect x="87.7" y="131.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="90.7" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.60%)</title><rect x="87.7" y="115.0" width="7.1" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="90.7" y="126.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.30%)</title><rect x="87.7" y="99.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="90.7" y="110.0"></text>
</g>
<g>
<title>bictcp_acked (1 samples, 0.30%)</title><rect x="87.7" y="83.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="90.7" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.30%)</title><rect x="91.3" y="99.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="94.3" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.30%)</title><rect x="91.3" y="83.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="94.3" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.30%)</title><rect x="91.3" y="67.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="94.3" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.30%)</title><rect x="91.3" y="51.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="94.3" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.30%)</title><rect x="91.3" y="35.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="94.3" y="46.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.60%)</title><rect x="94.8" y="627.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="97.8" y="638.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.60%)</title><rect x="94.8" y="611.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="97.8" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.60%)</title><rect x="94.8" y="595.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="97.8" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.60%)</title><rect x="94.8" y="579.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="97.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyHttpServerImpl.getValueByKey (33 samples, 9.88%)</title><rect x="101.9" y="771.0" width="116.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="104.9" y="782.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.get (32 samples, 9.58%)</title><rect x="105.4" y="755.0" width="113.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="108.4" y="766.0">ru/mail/polis/..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.iterator (29 samples, 8.68%)</title><rect x="105.4" y="739.0" width="102.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.4" y="750.0">ru/mail/poli..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (4 samples, 1.20%)</title><rect x="105.4" y="723.0" width="14.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="108.4" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (1 samples, 0.30%)</title><rect x="105.4" y="707.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="108.4" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (1 samples, 0.30%)</title><rect x="105.4" y="691.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="108.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (1 samples, 0.30%)</title><rect x="105.4" y="675.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="108.4" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (3 samples, 0.90%)</title><rect x="108.9" y="707.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="111.9" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (3 samples, 0.90%)</title><rect x="108.9" y="691.0" width="10.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="111.9" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (3 samples, 0.90%)</title><rect x="108.9" y="675.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.9" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (3 samples, 0.90%)</title><rect x="108.9" y="659.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="111.9" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (3 samples, 0.90%)</title><rect x="108.9" y="643.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="111.9" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.90%)</title><rect x="108.9" y="627.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="111.9" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (3 samples, 0.90%)</title><rect x="108.9" y="611.0" width="10.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="111.9" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (3 samples, 0.90%)</title><rect x="108.9" y="595.0" width="10.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="111.9" y="606.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.60%)</title><rect x="108.9" y="579.0" width="7.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="111.9" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.60%)</title><rect x="108.9" y="563.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="111.9" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.60%)</title><rect x="108.9" y="547.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="111.9" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.60%)</title><rect x="108.9" y="531.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="111.9" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="116.0" y="579.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="119.0" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="116.0" y="563.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="119.0" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="116.0" y="547.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="119.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.&lt;init&gt; (22 samples, 6.59%)</title><rect x="119.5" y="723.0" width="77.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="122.5" y="734.0">ru/mail/p..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (22 samples, 6.59%)</title><rect x="119.5" y="707.0" width="77.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="122.5" y="718.0">org/rocks..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (22 samples, 6.59%)</title><rect x="119.5" y="691.0" width="77.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.5" y="702.0">org/rocks..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.30%)</title><rect x="119.5" y="675.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="122.5" y="686.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (16 samples, 4.79%)</title><rect x="123.1" y="675.0" width="56.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="126.1" y="686.0">Java_o..</text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (16 samples, 4.79%)</title><rect x="123.1" y="659.0" width="56.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="126.1" y="670.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (16 samples, 4.79%)</title><rect x="123.1" y="643.0" width="56.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="126.1" y="654.0">rocksd..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (16 samples, 4.79%)</title><rect x="123.1" y="627.0" width="56.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="126.1" y="638.0">/tmp/l..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (16 samples, 4.79%)</title><rect x="123.1" y="611.0" width="56.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="126.1" y="622.0">rocksd..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (15 samples, 4.49%)</title><rect x="126.6" y="595.0" width="53.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="129.6" y="606.0">rocks..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (14 samples, 4.19%)</title><rect x="126.6" y="579.0" width="49.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="129.6" y="590.0">rocks..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (5 samples, 1.50%)</title><rect x="126.6" y="563.0" width="17.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="129.6" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (5 samples, 1.50%)</title><rect x="126.6" y="547.0" width="17.7" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="129.6" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 1.20%)</title><rect x="130.1" y="531.0" width="14.2" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="133.1" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="137.2" y="515.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="140.2" y="526.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.30%)</title><rect x="137.2" y="499.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="140.2" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="137.2" y="483.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="140.2" y="494.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="137.2" y="467.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="140.2" y="478.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="137.2" y="451.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="140.2" y="462.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="140.7" y="515.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="143.7" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (8 samples, 2.40%)</title><rect x="144.3" y="563.0" width="28.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="147.3" y="574.0">JN..</text>
</g>
<g>
<title>jni_CallVoidMethodV (8 samples, 2.40%)</title><rect x="144.3" y="547.0" width="28.2" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="147.3" y="558.0">jn..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="147.8" y="531.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="150.8" y="542.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.30%)</title><rect x="151.3" y="531.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="154.3" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 1.20%)</title><rect x="154.9" y="531.0" width="14.1" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="157.9" y="542.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.30%)</title><rect x="161.9" y="515.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="164.9" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="165.4" y="515.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="168.4" y="526.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.30%)</title><rect x="165.4" y="499.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="168.4" y="510.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="169.0" y="531.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="172.0" y="542.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="169.0" y="515.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="172.0" y="526.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="169.0" y="499.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="172.0" y="510.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.30%)</title><rect x="172.5" y="563.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="175.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.30%)</title><rect x="176.0" y="579.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="179.0" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (5 samples, 1.50%)</title><rect x="179.6" y="675.0" width="17.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="182.6" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (5 samples, 1.50%)</title><rect x="179.6" y="659.0" width="17.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="182.6" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (5 samples, 1.50%)</title><rect x="179.6" y="643.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.6" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (5 samples, 1.50%)</title><rect x="179.6" y="627.0" width="17.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="182.6" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (5 samples, 1.50%)</title><rect x="179.6" y="611.0" width="17.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="182.6" y="622.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (4 samples, 1.20%)</title><rect x="179.6" y="595.0" width="14.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="182.6" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.90%)</title><rect x="179.6" y="579.0" width="10.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="182.6" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.30%)</title><rect x="179.6" y="563.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="182.6" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.60%)</title><rect x="183.1" y="563.0" width="7.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="186.1" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.60%)</title><rect x="183.1" y="547.0" width="7.1" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="186.1" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.30%)</title><rect x="183.1" y="531.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="186.1" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="186.6" y="531.0" width="3.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="189.6" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="190.2" y="579.0" width="3.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="193.2" y="590.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="190.2" y="563.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="193.2" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="193.7" y="595.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="196.7" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.close (3 samples, 0.90%)</title><rect x="197.2" y="723.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.2" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (3 samples, 0.90%)</title><rect x="197.2" y="707.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="200.2" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (3 samples, 0.90%)</title><rect x="197.2" y="691.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="200.2" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (3 samples, 0.90%)</title><rect x="197.2" y="675.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="200.2" y="686.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_disposeInternal (1 samples, 0.30%)</title><rect x="197.2" y="659.0" width="3.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="200.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (2 samples, 0.60%)</title><rect x="200.8" y="659.0" width="7.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="203.8" y="670.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (2 samples, 0.60%)</title><rect x="200.8" y="643.0" width="7.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="203.8" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::~DBIter() (2 samples, 0.60%)</title><rect x="200.8" y="627.0" width="7.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="203.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::~MemTableIterator() (1 samples, 0.30%)</title><rect x="204.3" y="611.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="207.3" y="622.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.30%)</title><rect x="204.3" y="595.0" width="3.5" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="207.3" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="204.3" y="579.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="207.3" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="204.3" y="563.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="207.3" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="204.3" y="547.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="207.3" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.next (3 samples, 0.90%)</title><rect x="207.8" y="739.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="210.8" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.next (3 samples, 0.90%)</title><rect x="207.8" y="723.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="210.8" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (3 samples, 0.90%)</title><rect x="207.8" y="707.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="210.8" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (3 samples, 0.90%)</title><rect x="207.8" y="691.0" width="10.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="210.8" y="702.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.30%)</title><rect x="207.8" y="675.0" width="3.6" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="210.8" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (2 samples, 0.60%)</title><rect x="211.4" y="675.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="214.4" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (2 samples, 0.60%)</title><rect x="211.4" y="659.0" width="7.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="214.4" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2 samples, 0.60%)</title><rect x="211.4" y="643.0" width="7.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="214.4" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.60%)</title><rect x="211.4" y="627.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="214.4" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.60%)</title><rect x="211.4" y="611.0" width="7.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="214.4" y="622.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (2 samples, 0.60%)</title><rect x="211.4" y="595.0" width="7.0" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="214.4" y="606.0"></text>
</g>
<g>
<title>jni_NewByteArray (2 samples, 0.60%)</title><rect x="211.4" y="579.0" width="7.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="214.4" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.60%)</title><rect x="211.4" y="563.0" width="7.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="214.4" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.60%)</title><rect x="211.4" y="547.0" width="7.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="214.4" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.60%)</title><rect x="211.4" y="531.0" width="7.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="214.4" y="542.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (1 samples, 0.30%)</title><rect x="214.9" y="515.0" width="3.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="217.9" y="526.0"></text>
</g>
<g>
<title>one/nio/http/PathMapper.find (1 samples, 0.30%)</title><rect x="218.4" y="787.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="221.4" y="798.0"></text>
</g>
<g>
<title>java/util/HashMap.get (1 samples, 0.30%)</title><rect x="218.4" y="771.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="221.4" y="782.0"></text>
</g>
<g>
<title>java/util/HashMap.getNode (1 samples, 0.30%)</title><rect x="218.4" y="755.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="221.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.equals (1 samples, 0.30%)</title><rect x="218.4" y="739.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="221.4" y="750.0"></text>
</g>
<g>
<title>java/lang/String.isLatin1 (1 samples, 0.30%)</title><rect x="218.4" y="723.0" width="3.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="221.4" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.30%)</title><rect x="222.0" y="819.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="225.0" y="830.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.startsWith (1 samples, 0.30%)</title><rect x="222.0" y="803.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="225.0" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.80%)</title><rect x="225.5" y="835.0" width="21.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="228.5" y="846.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 1.80%)</title><rect x="225.5" y="819.0" width="21.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="228.5" y="830.0">o..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (3 samples, 0.90%)</title><rect x="225.5" y="803.0" width="10.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="228.5" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="225.5" y="787.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="228.5" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="225.5" y="771.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="228.5" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="225.5" y="755.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="228.5" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="225.5" y="739.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="228.5" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="229.0" y="787.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="232.0" y="798.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="229.0" y="771.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="232.0" y="782.0"></text>
</g>
<g>
<title>void AccessInternal::arraycopy_conjoint&lt;signed char&gt;(signed char*, signed char*, unsigned long) (1 samples, 0.30%)</title><rect x="232.6" y="787.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="235.6" y="798.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.60%)</title><rect x="236.1" y="803.0" width="7.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="239.1" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="236.1" y="787.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="239.1" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="236.1" y="771.0" width="7.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="239.1" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.60%)</title><rect x="236.1" y="755.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="239.1" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.60%)</title><rect x="236.1" y="739.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="239.1" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.30%)</title><rect x="236.1" y="723.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="239.1" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.30%)</title><rect x="236.1" y="707.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="239.1" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.30%)</title><rect x="236.1" y="691.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="239.1" y="702.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.30%)</title><rect x="239.6" y="723.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="242.6" y="734.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.30%)</title><rect x="239.6" y="707.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="242.6" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.30%)</title><rect x="239.6" y="691.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="242.6" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.30%)</title><rect x="239.6" y="675.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="242.6" y="686.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="243.2" y="803.0" width="3.5" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="246.2" y="814.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=6053] (102 samples, 30.54%)</title><rect x="246.7" y="899.0" width="360.4" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="249.7" y="910.0">[NIO Selector #1 tid=6053]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="246.7" y="883.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="249.7" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.30%)</title><rect x="246.7" y="867.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="249.7" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.30%)</title><rect x="246.7" y="851.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="249.7" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.30%)</title><rect x="246.7" y="835.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="249.7" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.30%)</title><rect x="246.7" y="819.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="249.7" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="250.2" y="883.0" width="3.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="253.2" y="894.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.30%)</title><rect x="250.2" y="867.0" width="3.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="253.2" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="250.2" y="851.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="253.2" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="250.2" y="835.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="253.2" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="250.2" y="819.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="253.2" y="830.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="250.2" y="803.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="253.2" y="814.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.30%)</title><rect x="250.2" y="787.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.2" y="798.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.30%)</title><rect x="250.2" y="771.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="253.2" y="782.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.30%)</title><rect x="250.2" y="755.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="253.2" y="766.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.30%)</title><rect x="250.2" y="739.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="253.2" y="750.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.30%)</title><rect x="250.2" y="723.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="253.2" y="734.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.60%)</title><rect x="253.8" y="883.0" width="7.0" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="256.8" y="894.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.60%)</title><rect x="253.8" y="867.0" width="7.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="256.8" y="878.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="253.8" y="851.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="256.8" y="862.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="253.8" y="835.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="256.8" y="846.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.60%)</title><rect x="253.8" y="819.0" width="7.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="256.8" y="830.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.60%)</title><rect x="253.8" y="803.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="256.8" y="814.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.60%)</title><rect x="253.8" y="787.0" width="7.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="256.8" y="798.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.60%)</title><rect x="253.8" y="771.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="256.8" y="782.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.60%)</title><rect x="253.8" y="755.0" width="7.0" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="256.8" y="766.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.60%)</title><rect x="253.8" y="739.0" width="7.0" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="256.8" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.60%)</title><rect x="260.8" y="883.0" width="7.1" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="263.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="260.8" y="867.0" width="7.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="263.8" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="260.8" y="851.0" width="7.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="263.8" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.60%)</title><rect x="260.8" y="835.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="263.8" y="846.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.60%)</title><rect x="260.8" y="819.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="263.8" y="830.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.60%)</title><rect x="260.8" y="803.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="263.8" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.60%)</title><rect x="260.8" y="787.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="263.8" y="798.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.60%)</title><rect x="260.8" y="771.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="263.8" y="782.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.60%)</title><rect x="260.8" y="755.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="263.8" y="766.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.60%)</title><rect x="260.8" y="739.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="263.8" y="750.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (96 samples, 28.74%)</title><rect x="267.9" y="883.0" width="339.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="270.9" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (10 samples, 2.99%)</title><rect x="267.9" y="867.0" width="35.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="270.9" y="878.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (10 samples, 2.99%)</title><rect x="267.9" y="851.0" width="35.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="270.9" y="862.0">one..</text>
</g>
<g>
<title>[unknown] (9 samples, 2.69%)</title><rect x="271.4" y="835.0" width="31.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="274.4" y="846.0">[u..</text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="271.4" y="819.0" width="3.6" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="274.4" y="830.0"></text>
</g>
<g>
<title>clock_gettime (1 samples, 0.30%)</title><rect x="271.4" y="803.0" width="3.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="274.4" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="271.4" y="787.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="274.4" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="271.4" y="771.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="274.4" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="271.4" y="755.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="274.4" y="766.0"></text>
</g>
<g>
<title>epoll_wait (8 samples, 2.40%)</title><rect x="275.0" y="819.0" width="28.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="278.0" y="830.0">ep..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 2.10%)</title><rect x="278.5" y="803.0" width="24.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="281.5" y="814.0">e..</text>
</g>
<g>
<title>do_syscall_64 (7 samples, 2.10%)</title><rect x="278.5" y="787.0" width="24.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="281.5" y="798.0">d..</text>
</g>
<g>
<title>__x64_sys_epoll_wait (7 samples, 2.10%)</title><rect x="278.5" y="771.0" width="24.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="281.5" y="782.0">_..</text>
</g>
<g>
<title>do_epoll_wait (7 samples, 2.10%)</title><rect x="278.5" y="755.0" width="24.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="281.5" y="766.0">d..</text>
</g>
<g>
<title>ep_poll (7 samples, 2.10%)</title><rect x="278.5" y="739.0" width="24.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="281.5" y="750.0">e..</text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.30%)</title><rect x="278.5" y="723.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="281.5" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 1.80%)</title><rect x="282.0" y="723.0" width="21.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="285.0" y="734.0">s..</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 1.80%)</title><rect x="282.0" y="707.0" width="21.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="285.0" y="718.0">s..</text>
</g>
<g>
<title>schedule (6 samples, 1.80%)</title><rect x="282.0" y="691.0" width="21.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="285.0" y="702.0">s..</text>
</g>
<g>
<title>__sched_text_start (6 samples, 1.80%)</title><rect x="282.0" y="675.0" width="21.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="285.0" y="686.0">_..</text>
</g>
<g>
<title>finish_task_switch (6 samples, 1.80%)</title><rect x="282.0" y="659.0" width="21.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="285.0" y="670.0">f..</text>
</g>
<g>
<title>one/nio/net/Session.process (86 samples, 25.75%)</title><rect x="303.2" y="867.0" width="303.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="306.2" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (86 samples, 25.75%)</title><rect x="303.2" y="851.0" width="303.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="306.2" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (80 samples, 23.95%)</title><rect x="306.8" y="835.0" width="282.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="309.8" y="846.0">one/nio/http/HttpSession.processHttpBu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (80 samples, 23.95%)</title><rect x="306.8" y="819.0" width="282.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="309.8" y="830.0">one/nio/http/HttpSession.handleParsedR..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (80 samples, 23.95%)</title><rect x="306.8" y="803.0" width="282.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="309.8" y="814.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler1_getValueByKey.handleRequest (80 samples, 23.95%)</title><rect x="306.8" y="787.0" width="282.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="309.8" y="798.0">RequestHandler1_getValueByKey.handleRe..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 2.69%)</title><rect x="306.8" y="771.0" width="31.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="309.8" y="782.0">on..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 2.69%)</title><rect x="306.8" y="755.0" width="31.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="309.8" y="766.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 2.69%)</title><rect x="306.8" y="739.0" width="31.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="309.8" y="750.0">on..</text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 2.69%)</title><rect x="306.8" y="723.0" width="31.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="309.8" y="734.0">on..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (9 samples, 2.69%)</title><rect x="306.8" y="707.0" width="31.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="309.8" y="718.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (9 samples, 2.69%)</title><rect x="306.8" y="691.0" width="31.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="309.8" y="702.0">on..</text>
</g>
<g>
<title>__send (9 samples, 2.69%)</title><rect x="306.8" y="675.0" width="31.8" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="309.8" y="686.0">__..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (9 samples, 2.69%)</title><rect x="306.8" y="659.0" width="31.8" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="309.8" y="670.0">en..</text>
</g>
<g>
<title>do_syscall_64 (9 samples, 2.69%)</title><rect x="306.8" y="643.0" width="31.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="309.8" y="654.0">do..</text>
</g>
<g>
<title>__x64_sys_sendto (7 samples, 2.10%)</title><rect x="306.8" y="627.0" width="24.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="309.8" y="638.0">_..</text>
</g>
<g>
<title>__sys_sendto (7 samples, 2.10%)</title><rect x="306.8" y="611.0" width="24.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="309.8" y="622.0">_..</text>
</g>
<g>
<title>sock_sendmsg (7 samples, 2.10%)</title><rect x="306.8" y="595.0" width="24.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="309.8" y="606.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (6 samples, 1.80%)</title><rect x="306.8" y="579.0" width="21.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="309.8" y="590.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 1.80%)</title><rect x="306.8" y="563.0" width="21.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="309.8" y="574.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (6 samples, 1.80%)</title><rect x="306.8" y="547.0" width="21.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="309.8" y="558.0">t..</text>
</g>
<g>
<title>tcp_push (6 samples, 1.80%)</title><rect x="306.8" y="531.0" width="21.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="309.8" y="542.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 1.80%)</title><rect x="306.8" y="515.0" width="21.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="309.8" y="526.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (6 samples, 1.80%)</title><rect x="306.8" y="499.0" width="21.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="309.8" y="510.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 1.80%)</title><rect x="306.8" y="483.0" width="21.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="309.8" y="494.0">_..</text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 1.80%)</title><rect x="306.8" y="467.0" width="21.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="309.8" y="478.0">i..</text>
</g>
<g>
<title>__ip_queue_xmit (6 samples, 1.80%)</title><rect x="306.8" y="451.0" width="21.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="309.8" y="462.0">_..</text>
</g>
<g>
<title>ip_local_out (6 samples, 1.80%)</title><rect x="306.8" y="435.0" width="21.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="309.8" y="446.0">i..</text>
</g>
<g>
<title>ip_output (6 samples, 1.80%)</title><rect x="306.8" y="419.0" width="21.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="309.8" y="430.0">i..</text>
</g>
<g>
<title>ip_finish_output (6 samples, 1.80%)</title><rect x="306.8" y="403.0" width="21.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="309.8" y="414.0">i..</text>
</g>
<g>
<title>__ip_finish_output (6 samples, 1.80%)</title><rect x="306.8" y="387.0" width="21.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="309.8" y="398.0">_..</text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 1.80%)</title><rect x="306.8" y="371.0" width="21.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="309.8" y="382.0">i..</text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 1.80%)</title><rect x="306.8" y="355.0" width="21.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="309.8" y="366.0">_..</text>
</g>
<g>
<title>do_softirq.part.20 (6 samples, 1.80%)</title><rect x="306.8" y="339.0" width="21.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="309.8" y="350.0">d..</text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 1.80%)</title><rect x="306.8" y="323.0" width="21.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="309.8" y="334.0">d..</text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 1.80%)</title><rect x="306.8" y="307.0" width="21.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="309.8" y="318.0">_..</text>
</g>
<g>
<title>net_rx_action (6 samples, 1.80%)</title><rect x="306.8" y="291.0" width="21.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="309.8" y="302.0">n..</text>
</g>
<g>
<title>process_backlog (5 samples, 1.50%)</title><rect x="310.3" y="275.0" width="17.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="313.3" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 1.50%)</title><rect x="310.3" y="259.0" width="17.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="313.3" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 1.50%)</title><rect x="310.3" y="243.0" width="17.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="313.3" y="254.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 1.50%)</title><rect x="310.3" y="227.0" width="17.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="313.3" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 1.50%)</title><rect x="310.3" y="211.0" width="17.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="313.3" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 1.50%)</title><rect x="310.3" y="195.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="313.3" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 1.50%)</title><rect x="310.3" y="179.0" width="17.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="313.3" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 1.50%)</title><rect x="310.3" y="163.0" width="17.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="313.3" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 1.50%)</title><rect x="310.3" y="147.0" width="17.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="313.3" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 1.50%)</title><rect x="310.3" y="131.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="313.3" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 1.50%)</title><rect x="310.3" y="115.0" width="17.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="313.3" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 1.50%)</title><rect x="310.3" y="99.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="313.3" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 1.50%)</title><rect x="310.3" y="83.0" width="17.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="313.3" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 1.50%)</title><rect x="310.3" y="67.0" width="17.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="313.3" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 1.50%)</title><rect x="310.3" y="51.0" width="17.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="313.3" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.50%)</title><rect x="310.3" y="35.0" width="17.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="313.3" y="46.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.30%)</title><rect x="328.0" y="579.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="331.0" y="590.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.30%)</title><rect x="328.0" y="563.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="331.0" y="574.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.30%)</title><rect x="328.0" y="547.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="331.0" y="558.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.30%)</title><rect x="328.0" y="531.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="331.0" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.60%)</title><rect x="331.5" y="627.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="334.5" y="638.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.60%)</title><rect x="331.5" y="611.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="334.5" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.60%)</title><rect x="331.5" y="595.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="334.5" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.60%)</title><rect x="331.5" y="579.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="334.5" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyHttpServerImpl.getValueByKey (71 samples, 21.26%)</title><rect x="338.6" y="771.0" width="250.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="341.6" y="782.0">ru/mail/polis/service/basta123/My..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.get (71 samples, 21.26%)</title><rect x="338.6" y="755.0" width="250.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="341.6" y="766.0">ru/mail/polis/dao/basta123/MyDAOR..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (2 samples, 0.60%)</title><rect x="338.6" y="739.0" width="7.0" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="341.6" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.30%)</title><rect x="342.1" y="723.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="345.1" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.30%)</title><rect x="342.1" y="707.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="345.1" y="718.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.iterator (65 samples, 19.46%)</title><rect x="345.6" y="739.0" width="229.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="348.6" y="750.0">ru/mail/polis/dao/basta123/MyD..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (5 samples, 1.50%)</title><rect x="345.6" y="723.0" width="17.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="348.6" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (4 samples, 1.20%)</title><rect x="345.6" y="707.0" width="14.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="348.6" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (4 samples, 1.20%)</title><rect x="345.6" y="691.0" width="14.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="348.6" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (4 samples, 1.20%)</title><rect x="345.6" y="675.0" width="14.2" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="348.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (4 samples, 1.20%)</title><rect x="345.6" y="659.0" width="14.2" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="348.6" y="670.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.30%)</title><rect x="345.6" y="643.0" width="3.6" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="348.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.30%)</title><rect x="349.2" y="643.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="352.2" y="654.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetThreadLocalSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.30%)</title><rect x="349.2" y="627.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="352.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::Instance() (1 samples, 0.30%)</title><rect x="349.2" y="611.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="352.2" y="622.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (2 samples, 0.60%)</title><rect x="352.7" y="643.0" width="7.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="355.7" y="654.0"></text>
</g>
<g>
<title>rocksdb::OptimizeBlockSize(unsigned long) [clone .plt] (1 samples, 0.30%)</title><rect x="356.2" y="627.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="359.2" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (1 samples, 0.30%)</title><rect x="359.8" y="707.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="362.8" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (1 samples, 0.30%)</title><rect x="359.8" y="691.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="362.8" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (1 samples, 0.30%)</title><rect x="359.8" y="675.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="362.8" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (1 samples, 0.30%)</title><rect x="359.8" y="659.0" width="3.5" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="362.8" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (1 samples, 0.30%)</title><rect x="359.8" y="643.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="362.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.30%)</title><rect x="359.8" y="627.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="362.8" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (1 samples, 0.30%)</title><rect x="359.8" y="611.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="362.8" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.30%)</title><rect x="359.8" y="595.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="362.8" y="606.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="359.8" y="579.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="362.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.&lt;init&gt; (54 samples, 16.17%)</title><rect x="363.3" y="723.0" width="190.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="366.3" y="734.0">ru/mail/polis/dao/basta12..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (54 samples, 16.17%)</title><rect x="363.3" y="707.0" width="190.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="366.3" y="718.0">org/rocksdb/AbstractRocks..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (54 samples, 16.17%)</title><rect x="363.3" y="691.0" width="190.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="366.3" y="702.0">org/rocksdb/RocksIterator..</text>
</g>
<g>
<title>I2C/C2I adapters (3 samples, 0.90%)</title><rect x="366.8" y="675.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="369.8" y="686.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (26 samples, 7.78%)</title><rect x="377.4" y="675.0" width="91.9" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="380.4" y="686.0">Java_org_ro..</text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (25 samples, 7.49%)</title><rect x="377.4" y="659.0" width="88.3" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="380.4" y="670.0">rocksdb::D..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (1 samples, 0.30%)</title><rect x="377.4" y="643.0" width="3.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="380.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (24 samples, 7.19%)</title><rect x="381.0" y="643.0" width="84.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="384.0" y="654.0">rocksdb::M..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (23 samples, 6.89%)</title><rect x="381.0" y="627.0" width="81.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="384.0" y="638.0">/tmp/libr..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (22 samples, 6.59%)</title><rect x="381.0" y="611.0" width="77.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="384.0" y="622.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (22 samples, 6.59%)</title><rect x="381.0" y="595.0" width="77.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="384.0" y="606.0">rocksdb::..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.30%)</title><rect x="381.0" y="579.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="384.0" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (20 samples, 5.99%)</title><rect x="384.5" y="579.0" width="70.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="387.5" y="590.0">rocksdb:..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (4 samples, 1.20%)</title><rect x="388.0" y="563.0" width="14.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="391.0" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (4 samples, 1.20%)</title><rect x="388.0" y="547.0" width="14.2" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="391.0" y="558.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="388.0" y="531.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="391.0" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="388.0" y="515.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="391.0" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="388.0" y="499.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="391.0" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="388.0" y="483.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="391.0" y="494.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.30%)</title><rect x="391.6" y="531.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="394.6" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.60%)</title><rect x="395.1" y="531.0" width="7.1" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="398.1" y="542.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="398.6" y="515.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="401.6" y="526.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="398.6" y="499.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="401.6" y="510.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="398.6" y="483.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="401.6" y="494.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (13 samples, 3.89%)</title><rect x="402.2" y="563.0" width="45.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="405.2" y="574.0">JNIE..</text>
</g>
<g>
<title>jni_CallVoidMethodV (13 samples, 3.89%)</title><rect x="402.2" y="547.0" width="45.9" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="405.2" y="558.0">jni_..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="405.7" y="531.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="408.7" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="409.2" y="531.0" width="3.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="412.2" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (10 samples, 2.99%)</title><rect x="412.8" y="531.0" width="35.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="415.8" y="542.0">jni..</text>
</g>
<g>
<title>CompilationPolicy::compile_if_required(methodHandle const&amp;, Thread*) (1 samples, 0.30%)</title><rect x="419.8" y="515.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="422.8" y="526.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (4 samples, 1.20%)</title><rect x="423.4" y="515.0" width="14.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="426.4" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.60%)</title><rect x="437.5" y="515.0" width="7.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="440.5" y="526.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.30%)</title><rect x="437.5" y="499.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="440.5" y="510.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.30%)</title><rect x="441.0" y="499.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="444.0" y="510.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="444.6" y="515.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="447.6" y="526.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="448.1" y="563.0" width="3.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="451.1" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="448.1" y="547.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="451.1" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.30%)</title><rect x="451.6" y="563.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="454.6" y="574.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.30%)</title><rect x="455.1" y="579.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="458.1" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="455.1" y="563.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="458.1" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="455.1" y="547.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="458.1" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="455.1" y="531.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="458.1" y="542.0"></text>
</g>
<g>
<title>std::string::append(char const*, unsigned long) (1 samples, 0.30%)</title><rect x="458.7" y="611.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="461.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::EncodeKey(std::string*, rocksdb::Slice const&amp;) (1 samples, 0.30%)</title><rect x="462.2" y="627.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="465.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (1 samples, 0.30%)</title><rect x="465.7" y="659.0" width="3.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="468.7" y="670.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="469.3" y="675.0" width="3.5" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="472.3" y="686.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.30%)</title><rect x="469.3" y="659.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="472.3" y="670.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned (1 samples, 0.30%)</title><rect x="472.8" y="675.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="475.8" y="686.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.30%)</title><rect x="476.3" y="675.0" width="3.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="479.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (20 samples, 5.99%)</title><rect x="479.9" y="675.0" width="70.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="482.9" y="686.0">ru/mail/..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (20 samples, 5.99%)</title><rect x="479.9" y="659.0" width="70.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="482.9" y="670.0">ru/mail/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (20 samples, 5.99%)</title><rect x="479.9" y="643.0" width="70.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="482.9" y="654.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (20 samples, 5.99%)</title><rect x="479.9" y="627.0" width="70.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="482.9" y="638.0">org/rock..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (20 samples, 5.99%)</title><rect x="479.9" y="611.0" width="70.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="482.9" y="622.0">org/rock..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (20 samples, 5.99%)</title><rect x="479.9" y="595.0" width="70.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="482.9" y="606.0">Java_org..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (1 samples, 0.30%)</title><rect x="483.4" y="579.0" width="3.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="486.4" y="590.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="486.9" y="579.0" width="3.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="489.9" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="486.9" y="563.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="489.9" y="574.0"></text>
</g>
<g>
<title>jni_NewByteArray (13 samples, 3.89%)</title><rect x="490.5" y="579.0" width="45.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="493.5" y="590.0">jni_..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.30%)</title><rect x="490.5" y="563.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="493.5" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.60%)</title><rect x="494.0" y="563.0" width="7.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="497.0" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="501.1" y="563.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="504.1" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (9 samples, 2.69%)</title><rect x="504.6" y="563.0" width="31.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="507.6" y="574.0">Ty..</text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (7 samples, 2.10%)</title><rect x="508.1" y="547.0" width="24.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="511.1" y="558.0">C..</text>
</g>
<g>
<title>MemAllocator::allocate() const (7 samples, 2.10%)</title><rect x="508.1" y="531.0" width="24.8" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="511.1" y="542.0">M..</text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.30%)</title><rect x="518.7" y="515.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="521.7" y="526.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (2 samples, 0.60%)</title><rect x="522.3" y="515.0" width="7.0" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="525.3" y="526.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (1 samples, 0.30%)</title><rect x="529.3" y="515.0" width="3.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="532.3" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="532.9" y="547.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="535.9" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="532.9" y="531.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="535.9" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="532.9" y="515.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="535.9" y="526.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (4 samples, 1.20%)</title><rect x="536.4" y="579.0" width="14.1" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="539.4" y="590.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.30%)</title><rect x="539.9" y="563.0" width="3.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="542.9" y="574.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.60%)</title><rect x="543.5" y="563.0" width="7.0" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="546.5" y="574.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) [clone .plt] (1 samples, 0.30%)</title><rect x="550.5" y="675.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="553.5" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.close (6 samples, 1.80%)</title><rect x="554.1" y="723.0" width="21.2" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="557.1" y="734.0">r..</text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (6 samples, 1.80%)</title><rect x="554.1" y="707.0" width="21.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="557.1" y="718.0">o..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (6 samples, 1.80%)</title><rect x="554.1" y="691.0" width="21.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="557.1" y="702.0">o..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (6 samples, 1.80%)</title><rect x="554.1" y="675.0" width="21.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="557.1" y="686.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_disposeInternal (1 samples, 0.30%)</title><rect x="554.1" y="659.0" width="3.5" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="557.1" y="670.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.30%)</title><rect x="557.6" y="659.0" width="3.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="560.6" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="557.6" y="643.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="560.6" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="557.6" y="627.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="560.6" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="557.6" y="611.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="560.6" y="622.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (4 samples, 1.20%)</title><rect x="561.1" y="659.0" width="14.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="564.1" y="670.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (4 samples, 1.20%)</title><rect x="561.1" y="643.0" width="14.2" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="564.1" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::~DBIter() (3 samples, 0.90%)</title><rect x="561.1" y="627.0" width="10.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="564.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="561.1" y="611.0" width="3.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="564.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::~MemTableIterator() (2 samples, 0.60%)</title><rect x="564.7" y="611.0" width="7.0" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="567.7" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (1 samples, 0.30%)</title><rect x="564.7" y="595.0" width="3.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="567.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::Cleanable::~Cleanable() (1 samples, 0.30%)</title><rect x="568.2" y="595.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="571.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::SuperVersion::Unref() (1 samples, 0.30%)</title><rect x="568.2" y="579.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="571.2" y="590.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;unsigned long&gt;*) (1 samples, 0.30%)</title><rect x="571.7" y="627.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="574.7" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.next (4 samples, 1.20%)</title><rect x="575.3" y="739.0" width="14.1" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="578.3" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.next (4 samples, 1.20%)</title><rect x="575.3" y="723.0" width="14.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="578.3" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (3 samples, 0.90%)</title><rect x="575.3" y="707.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="578.3" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (3 samples, 0.90%)</title><rect x="575.3" y="691.0" width="10.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="578.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (2 samples, 0.60%)</title><rect x="575.3" y="675.0" width="7.0" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="578.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (2 samples, 0.60%)</title><rect x="575.3" y="659.0" width="7.0" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="578.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.60%)</title><rect x="575.3" y="643.0" width="7.0" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="578.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.30%)</title><rect x="578.8" y="627.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="581.8" y="638.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (1 samples, 0.30%)</title><rect x="582.3" y="675.0" width="3.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="585.3" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (1 samples, 0.30%)</title><rect x="582.3" y="659.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="585.3" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (1 samples, 0.30%)</title><rect x="582.3" y="643.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="585.3" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.30%)</title><rect x="582.3" y="627.0" width="3.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="585.3" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.30%)</title><rect x="582.3" y="611.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="585.3" y="622.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (1 samples, 0.30%)</title><rect x="582.3" y="595.0" width="3.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="585.3" y="606.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.30%)</title><rect x="582.3" y="579.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="585.3" y="590.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value (1 samples, 0.30%)</title><rect x="585.9" y="707.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="588.9" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.value0 (1 samples, 0.30%)</title><rect x="585.9" y="691.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="588.9" y="702.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (5 samples, 1.50%)</title><rect x="589.4" y="835.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="592.4" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (5 samples, 1.50%)</title><rect x="589.4" y="819.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="592.4" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.60%)</title><rect x="592.9" y="803.0" width="7.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="595.9" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.60%)</title><rect x="592.9" y="787.0" width="7.1" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="595.9" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.30%)</title><rect x="596.5" y="771.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="599.5" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="596.5" y="755.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="599.5" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="596.5" y="739.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="599.5" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="596.5" y="723.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="599.5" y="734.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.60%)</title><rect x="600.0" y="803.0" width="7.1" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="603.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="600.0" y="787.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="603.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="600.0" y="771.0" width="7.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="603.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.60%)</title><rect x="600.0" y="755.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="603.0" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.60%)</title><rect x="600.0" y="739.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="603.0" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.60%)</title><rect x="600.0" y="723.0" width="7.1" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="603.0" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 0.60%)</title><rect x="600.0" y="707.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="603.0" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 0.60%)</title><rect x="600.0" y="691.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="603.0" y="702.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.30%)</title><rect x="600.0" y="675.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="603.0" y="686.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.30%)</title><rect x="600.0" y="659.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="603.0" y="670.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.30%)</title><rect x="600.0" y="643.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="603.0" y="654.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (1 samples, 0.30%)</title><rect x="603.5" y="675.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="606.5" y="686.0"></text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 0.30%)</title><rect x="603.5" y="659.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="606.5" y="670.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=6054] (88 samples, 26.35%)</title><rect x="607.1" y="899.0" width="310.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="610.1" y="910.0">[NIO Selector #2 tid=6054]</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.30%)</title><rect x="607.1" y="883.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="610.1" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.30%)</title><rect x="607.1" y="867.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="610.1" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.30%)</title><rect x="607.1" y="851.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="610.1" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.30%)</title><rect x="607.1" y="835.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="610.1" y="846.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (87 samples, 26.05%)</title><rect x="610.6" y="883.0" width="307.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="613.6" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.isOpen (1 samples, 0.30%)</title><rect x="614.1" y="867.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="617.1" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 1.50%)</title><rect x="617.7" y="867.0" width="17.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="620.7" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 1.50%)</title><rect x="617.7" y="851.0" width="17.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="620.7" y="862.0"></text>
</g>
<g>
<title>[unknown] (5 samples, 1.50%)</title><rect x="617.7" y="835.0" width="17.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="620.7" y="846.0"></text>
</g>
<g>
<title>epoll_wait (5 samples, 1.50%)</title><rect x="617.7" y="819.0" width="17.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="620.7" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.50%)</title><rect x="617.7" y="803.0" width="17.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="620.7" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.50%)</title><rect x="617.7" y="787.0" width="17.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="620.7" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (5 samples, 1.50%)</title><rect x="617.7" y="771.0" width="17.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="620.7" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (5 samples, 1.50%)</title><rect x="617.7" y="755.0" width="17.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="620.7" y="766.0"></text>
</g>
<g>
<title>ep_poll (5 samples, 1.50%)</title><rect x="617.7" y="739.0" width="17.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="620.7" y="750.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (5 samples, 1.50%)</title><rect x="617.7" y="723.0" width="17.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="620.7" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (5 samples, 1.50%)</title><rect x="617.7" y="707.0" width="17.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="620.7" y="718.0"></text>
</g>
<g>
<title>schedule (5 samples, 1.50%)</title><rect x="617.7" y="691.0" width="17.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="620.7" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (5 samples, 1.50%)</title><rect x="617.7" y="675.0" width="17.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="620.7" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 1.50%)</title><rect x="617.7" y="659.0" width="17.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="620.7" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (79 samples, 23.65%)</title><rect x="635.3" y="867.0" width="279.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="638.3" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (79 samples, 23.65%)</title><rect x="635.3" y="851.0" width="279.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="638.3" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (71 samples, 21.26%)</title><rect x="635.3" y="835.0" width="250.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="638.3" y="846.0">one/nio/http/HttpSession.processH..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (71 samples, 21.26%)</title><rect x="635.3" y="819.0" width="250.9" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.3" y="830.0">one/nio/http/HttpSession.handlePa..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (71 samples, 21.26%)</title><rect x="635.3" y="803.0" width="250.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="638.3" y="814.0">one/nio/http/HttpServer.handleReq..</text>
</g>
<g>
<title>RequestHandler1_getValueByKey.handleRequest (71 samples, 21.26%)</title><rect x="635.3" y="787.0" width="250.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="638.3" y="798.0">RequestHandler1_getValueByKey.han..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 3.89%)</title><rect x="635.3" y="771.0" width="46.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="638.3" y="782.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (13 samples, 3.89%)</title><rect x="635.3" y="755.0" width="46.0" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="638.3" y="766.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 3.89%)</title><rect x="635.3" y="739.0" width="46.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="638.3" y="750.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session.write (13 samples, 3.89%)</title><rect x="635.3" y="723.0" width="46.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="638.3" y="734.0">one/..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (13 samples, 3.89%)</title><rect x="635.3" y="707.0" width="46.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="638.3" y="718.0">one/..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (13 samples, 3.89%)</title><rect x="635.3" y="691.0" width="46.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="638.3" y="702.0">one/..</text>
</g>
<g>
<title>__send (13 samples, 3.89%)</title><rect x="635.3" y="675.0" width="46.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="638.3" y="686.0">__send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (12 samples, 3.59%)</title><rect x="638.9" y="659.0" width="42.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="641.9" y="670.0">entr..</text>
</g>
<g>
<title>do_syscall_64 (12 samples, 3.59%)</title><rect x="638.9" y="643.0" width="42.4" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="641.9" y="654.0">do_s..</text>
</g>
<g>
<title>__x64_sys_sendto (12 samples, 3.59%)</title><rect x="638.9" y="627.0" width="42.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="641.9" y="638.0">__x6..</text>
</g>
<g>
<title>__sys_sendto (12 samples, 3.59%)</title><rect x="638.9" y="611.0" width="42.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="641.9" y="622.0">__sy..</text>
</g>
<g>
<title>sock_sendmsg (12 samples, 3.59%)</title><rect x="638.9" y="595.0" width="42.4" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="641.9" y="606.0">sock..</text>
</g>
<g>
<title>inet6_sendmsg (12 samples, 3.59%)</title><rect x="638.9" y="579.0" width="42.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="641.9" y="590.0">inet..</text>
</g>
<g>
<title>tcp_sendmsg (12 samples, 3.59%)</title><rect x="638.9" y="563.0" width="42.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="641.9" y="574.0">tcp_..</text>
</g>
<g>
<title>tcp_sendmsg_locked (12 samples, 3.59%)</title><rect x="638.9" y="547.0" width="42.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="641.9" y="558.0">tcp_..</text>
</g>
<g>
<title>tcp_push (12 samples, 3.59%)</title><rect x="638.9" y="531.0" width="42.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="641.9" y="542.0">tcp_..</text>
</g>
<g>
<title>__tcp_push_pending_frames (12 samples, 3.59%)</title><rect x="638.9" y="515.0" width="42.4" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="641.9" y="526.0">__tc..</text>
</g>
<g>
<title>tcp_write_xmit (12 samples, 3.59%)</title><rect x="638.9" y="499.0" width="42.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="641.9" y="510.0">tcp_..</text>
</g>
<g>
<title>__tcp_transmit_skb (12 samples, 3.59%)</title><rect x="638.9" y="483.0" width="42.4" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="641.9" y="494.0">__tc..</text>
</g>
<g>
<title>ip_queue_xmit (12 samples, 3.59%)</title><rect x="638.9" y="467.0" width="42.4" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="641.9" y="478.0">ip_q..</text>
</g>
<g>
<title>__ip_queue_xmit (12 samples, 3.59%)</title><rect x="638.9" y="451.0" width="42.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="641.9" y="462.0">__ip..</text>
</g>
<g>
<title>ip_local_out (12 samples, 3.59%)</title><rect x="638.9" y="435.0" width="42.4" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="641.9" y="446.0">ip_l..</text>
</g>
<g>
<title>ip_output (12 samples, 3.59%)</title><rect x="638.9" y="419.0" width="42.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="641.9" y="430.0">ip_o..</text>
</g>
<g>
<title>ip_finish_output (12 samples, 3.59%)</title><rect x="638.9" y="403.0" width="42.4" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="641.9" y="414.0">ip_f..</text>
</g>
<g>
<title>__ip_finish_output (12 samples, 3.59%)</title><rect x="638.9" y="387.0" width="42.4" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="641.9" y="398.0">__ip..</text>
</g>
<g>
<title>ip_finish_output2 (12 samples, 3.59%)</title><rect x="638.9" y="371.0" width="42.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="641.9" y="382.0">ip_f..</text>
</g>
<g>
<title>__local_bh_enable_ip (11 samples, 3.29%)</title><rect x="638.9" y="355.0" width="38.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="641.9" y="366.0">__l..</text>
</g>
<g>
<title>do_softirq.part.20 (11 samples, 3.29%)</title><rect x="638.9" y="339.0" width="38.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="641.9" y="350.0">do_..</text>
</g>
<g>
<title>do_softirq_own_stack (11 samples, 3.29%)</title><rect x="638.9" y="323.0" width="38.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="641.9" y="334.0">do_..</text>
</g>
<g>
<title>__softirqentry_text_start (11 samples, 3.29%)</title><rect x="638.9" y="307.0" width="38.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="641.9" y="318.0">__s..</text>
</g>
<g>
<title>net_rx_action (11 samples, 3.29%)</title><rect x="638.9" y="291.0" width="38.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="641.9" y="302.0">net..</text>
</g>
<g>
<title>process_backlog (11 samples, 3.29%)</title><rect x="638.9" y="275.0" width="38.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="641.9" y="286.0">pro..</text>
</g>
<g>
<title>__netif_receive_skb (11 samples, 3.29%)</title><rect x="638.9" y="259.0" width="38.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="641.9" y="270.0">__n..</text>
</g>
<g>
<title>__netif_receive_skb_one_core (11 samples, 3.29%)</title><rect x="638.9" y="243.0" width="38.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="641.9" y="254.0">__n..</text>
</g>
<g>
<title>ip_rcv (9 samples, 2.69%)</title><rect x="642.4" y="227.0" width="31.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="645.4" y="238.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (1 samples, 0.30%)</title><rect x="642.4" y="211.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="645.4" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (8 samples, 2.40%)</title><rect x="645.9" y="211.0" width="28.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="648.9" y="222.0">ip..</text>
</g>
<g>
<title>ip_local_deliver (8 samples, 2.40%)</title><rect x="645.9" y="195.0" width="28.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="648.9" y="206.0">ip..</text>
</g>
<g>
<title>ip_local_deliver_finish (8 samples, 2.40%)</title><rect x="645.9" y="179.0" width="28.3" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="648.9" y="190.0">ip..</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (8 samples, 2.40%)</title><rect x="645.9" y="163.0" width="28.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="648.9" y="174.0">ip..</text>
</g>
<g>
<title>tcp_v4_rcv (8 samples, 2.40%)</title><rect x="645.9" y="147.0" width="28.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="648.9" y="158.0">tc..</text>
</g>
<g>
<title>tcp_v4_do_rcv (8 samples, 2.40%)</title><rect x="645.9" y="131.0" width="28.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="648.9" y="142.0">tc..</text>
</g>
<g>
<title>tcp_rcv_established (8 samples, 2.40%)</title><rect x="645.9" y="115.0" width="28.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="648.9" y="126.0">tc..</text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.30%)</title><rect x="645.9" y="99.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="648.9" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.30%)</title><rect x="645.9" y="83.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="648.9" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.30%)</title><rect x="645.9" y="67.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="648.9" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.30%)</title><rect x="645.9" y="51.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="648.9" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.30%)</title><rect x="645.9" y="35.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="648.9" y="46.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.30%)</title><rect x="649.5" y="99.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="652.5" y="110.0"></text>
</g>
<g>
<title>tcp_check_space (1 samples, 0.30%)</title><rect x="653.0" y="99.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="656.0" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 1.50%)</title><rect x="656.5" y="99.0" width="17.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="659.5" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 1.50%)</title><rect x="656.5" y="83.0" width="17.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="659.5" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 1.50%)</title><rect x="656.5" y="67.0" width="17.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="659.5" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 1.50%)</title><rect x="656.5" y="51.0" width="17.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="659.5" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.50%)</title><rect x="656.5" y="35.0" width="17.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="659.5" y="46.0"></text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 0.30%)</title><rect x="674.2" y="227.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="677.2" y="238.0"></text>
</g>
<g>
<title>dev_queue_xmit (1 samples, 0.30%)</title><rect x="677.7" y="355.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="680.7" y="366.0"></text>
</g>
<g>
<title>__dev_queue_xmit (1 samples, 0.30%)</title><rect x="677.7" y="339.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="680.7" y="350.0"></text>
</g>
<g>
<title>dev_hard_start_xmit (1 samples, 0.30%)</title><rect x="677.7" y="323.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="680.7" y="334.0"></text>
</g>
<g>
<title>loopback_xmit (1 samples, 0.30%)</title><rect x="677.7" y="307.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="680.7" y="318.0"></text>
</g>
<g>
<title>sk_free (1 samples, 0.30%)</title><rect x="677.7" y="291.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="680.7" y="302.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.30%)</title><rect x="681.3" y="771.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="684.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyHttpServerImpl.getValueByKey (57 samples, 17.07%)</title><rect x="684.8" y="771.0" width="201.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="687.8" y="782.0">ru/mail/polis/service/bast..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.get (57 samples, 17.07%)</title><rect x="684.8" y="755.0" width="201.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="687.8" y="766.0">ru/mail/polis/dao/basta123..</text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (1 samples, 0.30%)</title><rect x="684.8" y="739.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="687.8" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.30%)</title><rect x="684.8" y="723.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="687.8" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.30%)</title><rect x="684.8" y="707.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="687.8" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="684.8" y="691.0" width="3.5" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="687.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="684.8" y="675.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="687.8" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="684.8" y="659.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="687.8" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.30%)</title><rect x="684.8" y="643.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.8" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.30%)</title><rect x="684.8" y="627.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="687.8" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.30%)</title><rect x="684.8" y="611.0" width="3.5" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="687.8" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.iterator (56 samples, 16.77%)</title><rect x="688.3" y="739.0" width="197.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="691.3" y="750.0">ru/mail/polis/dao/basta123..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (10 samples, 2.99%)</title><rect x="688.3" y="723.0" width="35.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="691.3" y="734.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (6 samples, 1.80%)</title><rect x="688.3" y="707.0" width="21.2" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="691.3" y="718.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (5 samples, 1.50%)</title><rect x="688.3" y="691.0" width="17.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="691.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (5 samples, 1.50%)</title><rect x="688.3" y="675.0" width="17.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="691.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (5 samples, 1.50%)</title><rect x="688.3" y="659.0" width="17.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="691.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.30%)</title><rect x="688.3" y="643.0" width="3.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="691.3" y="654.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::CompareAndSwap(void*, void*&amp;) [clone .plt] (1 samples, 0.30%)</title><rect x="688.3" y="627.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="691.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long) (1 samples, 0.30%)</title><rect x="691.9" y="643.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="694.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::Arena*) (1 samples, 0.30%)</title><rect x="691.9" y="627.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="694.9" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (1 samples, 0.30%)</title><rect x="691.9" y="611.0" width="3.5" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="694.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.30%)</title><rect x="695.4" y="643.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="698.4" y="654.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) [clone .plt] (1 samples, 0.30%)</title><rect x="698.9" y="643.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="701.9" y="654.0"></text>
</g>
<g>
<title>rocksdb::Status::operator=(rocksdb::Status&amp;&amp;) [clone .plt] (1 samples, 0.30%)</title><rect x="702.5" y="643.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="705.5" y="654.0"></text>
</g>
<g>
<title>rocksdb_iterator_helper(rocksdb::DB*, rocksdb::ReadOptions, rocksdb::ColumnFamilyHandle*) (1 samples, 0.30%)</title><rect x="706.0" y="691.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="709.0" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (4 samples, 1.20%)</title><rect x="709.5" y="707.0" width="14.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="712.5" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (4 samples, 1.20%)</title><rect x="709.5" y="691.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="712.5" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (4 samples, 1.20%)</title><rect x="709.5" y="675.0" width="14.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="712.5" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (3 samples, 0.90%)</title><rect x="713.1" y="659.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="716.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (3 samples, 0.90%)</title><rect x="713.1" y="643.0" width="10.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="716.1" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (3 samples, 0.90%)</title><rect x="713.1" y="627.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="716.1" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (3 samples, 0.90%)</title><rect x="713.1" y="611.0" width="10.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="716.1" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (3 samples, 0.90%)</title><rect x="713.1" y="595.0" width="10.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="716.1" y="606.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.60%)</title><rect x="716.6" y="579.0" width="7.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="719.6" y="590.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (2 samples, 0.60%)</title><rect x="716.6" y="563.0" width="7.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="719.6" y="574.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (2 samples, 0.60%)</title><rect x="716.6" y="547.0" width="7.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="719.6" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.&lt;init&gt; (44 samples, 13.17%)</title><rect x="723.7" y="723.0" width="155.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="726.7" y="734.0">ru/mail/polis/dao/ba..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (44 samples, 13.17%)</title><rect x="723.7" y="707.0" width="155.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="726.7" y="718.0">org/rocksdb/Abstract..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (44 samples, 13.17%)</title><rect x="723.7" y="691.0" width="155.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="726.7" y="702.0">org/rocksdb/RocksIte..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (26 samples, 7.78%)</title><rect x="723.7" y="675.0" width="91.8" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="726.7" y="686.0">Java_org_ro..</text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (26 samples, 7.78%)</title><rect x="723.7" y="659.0" width="91.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="726.7" y="670.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (25 samples, 7.49%)</title><rect x="727.2" y="643.0" width="88.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="730.2" y="654.0">rocksdb::M..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (24 samples, 7.19%)</title><rect x="730.7" y="627.0" width="84.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="733.7" y="638.0">/tmp/libro..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (24 samples, 7.19%)</title><rect x="730.7" y="611.0" width="84.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="733.7" y="622.0">rocksdb::I..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (23 samples, 6.89%)</title><rect x="734.3" y="595.0" width="81.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="737.3" y="606.0">rocksdb::..</text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.30%)</title><rect x="734.3" y="579.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="737.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (20 samples, 5.99%)</title><rect x="737.8" y="579.0" width="70.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="740.8" y="590.0">rocksdb:..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (7 samples, 2.10%)</title><rect x="737.8" y="563.0" width="24.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="740.8" y="574.0">J..</text>
</g>
<g>
<title>jni_CallIntMethodV (7 samples, 2.10%)</title><rect x="737.8" y="547.0" width="24.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="740.8" y="558.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="744.9" y="531.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="747.9" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 1.20%)</title><rect x="748.4" y="531.0" width="14.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="751.4" y="542.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.30%)</title><rect x="751.9" y="515.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="754.9" y="526.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.30%)</title><rect x="755.4" y="515.0" width="3.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="758.4" y="526.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="759.0" y="515.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="762.0" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (8 samples, 2.40%)</title><rect x="762.5" y="563.0" width="28.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="765.5" y="574.0">JN..</text>
</g>
<g>
<title>jni_CallVoidMethodV (8 samples, 2.40%)</title><rect x="762.5" y="547.0" width="28.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="765.5" y="558.0">jn..</text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (6 samples, 1.80%)</title><rect x="766.0" y="531.0" width="21.2" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="769.0" y="542.0">j..</text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.60%)</title><rect x="769.6" y="515.0" width="7.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="772.6" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.90%)</title><rect x="776.6" y="515.0" width="10.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="779.6" y="526.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.30%)</title><rect x="783.7" y="499.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="786.7" y="510.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="787.2" y="531.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="790.2" y="542.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.60%)</title><rect x="790.8" y="563.0" width="7.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="793.8" y="574.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.30%)</title><rect x="790.8" y="547.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="793.8" y="558.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="794.3" y="547.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="797.3" y="558.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.30%)</title><rect x="797.8" y="563.0" width="3.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="800.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.60%)</title><rect x="801.4" y="563.0" width="7.0" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="804.4" y="574.0"></text>
</g>
<g>
<title>jni_GetEnv (2 samples, 0.60%)</title><rect x="801.4" y="547.0" width="7.0" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="804.4" y="558.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.30%)</title><rect x="808.4" y="579.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="811.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.30%)</title><rect x="812.0" y="579.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="815.0" y="590.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="815.5" y="675.0" width="3.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="818.5" y="686.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.30%)</title><rect x="815.5" y="659.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="818.5" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (3 samples, 0.90%)</title><rect x="819.0" y="675.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="822.0" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (14 samples, 4.19%)</title><rect x="829.6" y="675.0" width="49.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="832.6" y="686.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (13 samples, 3.89%)</title><rect x="833.2" y="659.0" width="45.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="836.2" y="670.0">ru/m..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.30%)</title><rect x="833.2" y="643.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="836.2" y="654.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.30%)</title><rect x="833.2" y="627.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="836.2" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (12 samples, 3.59%)</title><rect x="836.7" y="643.0" width="42.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="839.7" y="654.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (1 samples, 0.30%)</title><rect x="836.7" y="627.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="839.7" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (11 samples, 3.29%)</title><rect x="840.2" y="627.0" width="38.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="843.2" y="638.0">org..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (11 samples, 3.29%)</title><rect x="840.2" y="611.0" width="38.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="843.2" y="622.0">org..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (7 samples, 2.10%)</title><rect x="850.8" y="595.0" width="24.8" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="853.8" y="606.0">J..</text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 1.50%)</title><rect x="850.8" y="579.0" width="17.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="853.8" y="590.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.30%)</title><rect x="850.8" y="563.0" width="3.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="853.8" y="574.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.30%)</title><rect x="854.4" y="563.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="857.4" y="574.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.90%)</title><rect x="857.9" y="563.0" width="10.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="860.9" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.60%)</title><rect x="861.4" y="547.0" width="7.1" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="864.4" y="558.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.60%)</title><rect x="861.4" y="531.0" width="7.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="864.4" y="542.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (1 samples, 0.30%)</title><rect x="865.0" y="515.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="868.0" y="526.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.60%)</title><rect x="868.5" y="579.0" width="7.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="871.5" y="590.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.30%)</title><rect x="868.5" y="563.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="871.5" y="574.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="872.0" y="563.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="875.0" y="574.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="875.6" y="595.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="878.6" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.close (2 samples, 0.60%)</title><rect x="879.1" y="723.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="882.1" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (2 samples, 0.60%)</title><rect x="879.1" y="707.0" width="7.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="882.1" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (2 samples, 0.60%)</title><rect x="879.1" y="691.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="882.1" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.isOwningHandle (1 samples, 0.30%)</title><rect x="879.1" y="675.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="882.1" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/atomic/AtomicBoolean.get (1 samples, 0.30%)</title><rect x="879.1" y="659.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="882.1" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (1 samples, 0.30%)</title><rect x="882.6" y="675.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="885.6" y="686.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (1 samples, 0.30%)</title><rect x="882.6" y="659.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="885.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (1 samples, 0.30%)</title><rect x="882.6" y="643.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="885.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::~DBIter() (1 samples, 0.30%)</title><rect x="882.6" y="627.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="885.6" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (1 samples, 0.30%)</title><rect x="882.6" y="611.0" width="3.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="885.6" y="622.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (8 samples, 2.40%)</title><rect x="886.2" y="835.0" width="28.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="889.2" y="846.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (8 samples, 2.40%)</title><rect x="886.2" y="819.0" width="28.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="889.2" y="830.0">on..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.60%)</title><rect x="886.2" y="803.0" width="7.0" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="889.2" y="814.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="886.2" y="787.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="889.2" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="889.7" y="787.0" width="3.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="892.7" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.30%)</title><rect x="889.7" y="771.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="892.7" y="782.0"></text>
</g>
<g>
<title>__recv (6 samples, 1.80%)</title><rect x="893.2" y="803.0" width="21.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="896.2" y="814.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.50%)</title><rect x="896.8" y="787.0" width="17.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="899.8" y="798.0"></text>
</g>
<g>
<title>__x86_indirect_thunk_rax (1 samples, 0.30%)</title><rect x="896.8" y="771.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="899.8" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.20%)</title><rect x="900.3" y="771.0" width="14.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="903.3" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (3 samples, 0.90%)</title><rect x="903.8" y="755.0" width="10.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="906.8" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (3 samples, 0.90%)</title><rect x="903.8" y="739.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="906.8" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.60%)</title><rect x="903.8" y="723.0" width="7.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="906.8" y="734.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.30%)</title><rect x="903.8" y="707.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="906.8" y="718.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.30%)</title><rect x="903.8" y="691.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="906.8" y="702.0"></text>
</g>
<g>
<title>release_sock (1 samples, 0.30%)</title><rect x="903.8" y="675.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="906.8" y="686.0"></text>
</g>
<g>
<title>_raw_spin_unlock_bh (1 samples, 0.30%)</title><rect x="903.8" y="659.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="906.8" y="670.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (1 samples, 0.30%)</title><rect x="903.8" y="643.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="906.8" y="654.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.30%)</title><rect x="907.4" y="707.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="910.4" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.30%)</title><rect x="907.4" y="691.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="910.4" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.30%)</title><rect x="907.4" y="675.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="910.4" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.30%)</title><rect x="907.4" y="659.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="910.4" y="670.0"></text>
</g>
<g>
<title>sockfd_lookup_light (1 samples, 0.30%)</title><rect x="910.9" y="723.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="913.9" y="734.0"></text>
</g>
<g>
<title>__fdget (1 samples, 0.30%)</title><rect x="910.9" y="707.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="913.9" y="718.0"></text>
</g>
<g>
<title>__fget_light (1 samples, 0.30%)</title><rect x="910.9" y="691.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="913.9" y="702.0"></text>
</g>
<g>
<title>__fget (1 samples, 0.30%)</title><rect x="910.9" y="675.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="913.9" y="686.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="914.4" y="867.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="917.4" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="914.4" y="851.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="917.4" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="914.4" y="835.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="917.4" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=6055] (76 samples, 22.75%)</title><rect x="918.0" y="899.0" width="268.5" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="921.0" y="910.0">[NIO Selector #3 tid=6055]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="918.0" y="883.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="921.0" y="894.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.30%)</title><rect x="918.0" y="867.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="921.0" y="878.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.30%)</title><rect x="918.0" y="851.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="921.0" y="862.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.30%)</title><rect x="918.0" y="835.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="921.0" y="846.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.30%)</title><rect x="918.0" y="819.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="921.0" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="918.0" y="803.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="921.0" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="918.0" y="787.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="921.0" y="798.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="918.0" y="771.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="921.0" y="782.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="918.0" y="755.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="921.0" y="766.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.30%)</title><rect x="918.0" y="739.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="921.0" y="750.0"></text>
</g>
<g>
<title>hash_futex (1 samples, 0.30%)</title><rect x="918.0" y="723.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="921.0" y="734.0"></text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.30%)</title><rect x="921.5" y="883.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="924.5" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.30%)</title><rect x="921.5" y="867.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="924.5" y="878.0"></text>
</g>
<g>
<title>[unknown_Java] (7 samples, 2.10%)</title><rect x="925.0" y="883.0" width="24.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="928.0" y="894.0">[..</text>
</g>
<g>
<title>__pthread_cond_signal (7 samples, 2.10%)</title><rect x="925.0" y="867.0" width="24.8" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="928.0" y="878.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 2.10%)</title><rect x="925.0" y="851.0" width="24.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="928.0" y="862.0">e..</text>
</g>
<g>
<title>do_syscall_64 (7 samples, 2.10%)</title><rect x="925.0" y="835.0" width="24.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="928.0" y="846.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 2.10%)</title><rect x="925.0" y="819.0" width="24.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="928.0" y="830.0">_..</text>
</g>
<g>
<title>do_futex (7 samples, 2.10%)</title><rect x="925.0" y="803.0" width="24.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="928.0" y="814.0">d..</text>
</g>
<g>
<title>futex_wake (7 samples, 2.10%)</title><rect x="925.0" y="787.0" width="24.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="928.0" y="798.0">f..</text>
</g>
<g>
<title>wake_up_q (7 samples, 2.10%)</title><rect x="925.0" y="771.0" width="24.8" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="928.0" y="782.0">w..</text>
</g>
<g>
<title>try_to_wake_up (7 samples, 2.10%)</title><rect x="925.0" y="755.0" width="24.8" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="928.0" y="766.0">t..</text>
</g>
<g>
<title>__lock_text_start (7 samples, 2.10%)</title><rect x="925.0" y="739.0" width="24.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="928.0" y="750.0">_..</text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.30%)</title><rect x="949.8" y="883.0" width="3.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="952.8" y="894.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="949.8" y="867.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="952.8" y="878.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="949.8" y="851.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="952.8" y="862.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="949.8" y="835.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="952.8" y="846.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="949.8" y="819.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="952.8" y="830.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.30%)</title><rect x="949.8" y="803.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="952.8" y="814.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.30%)</title><rect x="949.8" y="787.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="952.8" y="798.0"></text>
</g>
<g>
<title>hrtimer_start_range_ns (1 samples, 0.30%)</title><rect x="949.8" y="771.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="952.8" y="782.0"></text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (66 samples, 19.76%)</title><rect x="953.3" y="883.0" width="233.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="956.3" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 1.20%)</title><rect x="953.3" y="867.0" width="14.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="956.3" y="878.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (4 samples, 1.20%)</title><rect x="953.3" y="851.0" width="14.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="956.3" y="862.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.20%)</title><rect x="953.3" y="835.0" width="14.1" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="956.3" y="846.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 1.20%)</title><rect x="953.3" y="819.0" width="14.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="956.3" y="830.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.20%)</title><rect x="953.3" y="803.0" width="14.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="956.3" y="814.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.20%)</title><rect x="953.3" y="787.0" width="14.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="956.3" y="798.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 1.20%)</title><rect x="953.3" y="771.0" width="14.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="956.3" y="782.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 1.20%)</title><rect x="953.3" y="755.0" width="14.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="956.3" y="766.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 1.20%)</title><rect x="953.3" y="739.0" width="14.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="956.3" y="750.0"></text>
</g>
<g>
<title>ep_scan_ready_list.constprop.20 (1 samples, 0.30%)</title><rect x="953.3" y="723.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="956.3" y="734.0"></text>
</g>
<g>
<title>ep_send_events_proc (1 samples, 0.30%)</title><rect x="953.3" y="707.0" width="3.5" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="956.3" y="718.0"></text>
</g>
<g>
<title>ep_item_poll.isra.16 (1 samples, 0.30%)</title><rect x="953.3" y="691.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="956.3" y="702.0"></text>
</g>
<g>
<title>tcp_poll (1 samples, 0.30%)</title><rect x="953.3" y="675.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="956.3" y="686.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.90%)</title><rect x="956.8" y="723.0" width="10.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="959.8" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.90%)</title><rect x="956.8" y="707.0" width="10.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="959.8" y="718.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.90%)</title><rect x="956.8" y="691.0" width="10.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="959.8" y="702.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.90%)</title><rect x="956.8" y="675.0" width="10.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="959.8" y="686.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.60%)</title><rect x="960.4" y="659.0" width="7.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="963.4" y="670.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (62 samples, 18.56%)</title><rect x="967.4" y="867.0" width="219.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="970.4" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (62 samples, 18.56%)</title><rect x="967.4" y="851.0" width="219.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="970.4" y="862.0">one/nio/http/HttpSession.proc..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (58 samples, 17.37%)</title><rect x="967.4" y="835.0" width="204.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="970.4" y="846.0">one/nio/http/HttpSession.pr..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (57 samples, 17.07%)</title><rect x="967.4" y="819.0" width="201.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="970.4" y="830.0">one/nio/http/HttpSession.h..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (57 samples, 17.07%)</title><rect x="967.4" y="803.0" width="201.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="970.4" y="814.0">one/nio/http/HttpServer.ha..</text>
</g>
<g>
<title>RequestHandler1_getValueByKey.handleRequest (56 samples, 16.77%)</title><rect x="967.4" y="787.0" width="197.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="970.4" y="798.0">RequestHandler1_getValueBy..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (7 samples, 2.10%)</title><rect x="967.4" y="771.0" width="24.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="970.4" y="782.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.30%)</title><rect x="967.4" y="755.0" width="3.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="970.4" y="766.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.30%)</title><rect x="967.4" y="739.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="970.4" y="750.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.regionMatchesCI (1 samples, 0.30%)</title><rect x="967.4" y="723.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="970.4" y="734.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.30%)</title><rect x="967.4" y="707.0" width="3.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="970.4" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (6 samples, 1.80%)</title><rect x="971.0" y="755.0" width="21.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.0" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 1.80%)</title><rect x="971.0" y="739.0" width="21.2" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="974.0" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 1.80%)</title><rect x="971.0" y="723.0" width="21.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="974.0" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 1.80%)</title><rect x="971.0" y="707.0" width="21.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="974.0" y="718.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 1.80%)</title><rect x="971.0" y="691.0" width="21.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="974.0" y="702.0">o..</text>
</g>
<g>
<title>__send (6 samples, 1.80%)</title><rect x="971.0" y="675.0" width="21.2" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="974.0" y="686.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.80%)</title><rect x="971.0" y="659.0" width="21.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="974.0" y="670.0">e..</text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.80%)</title><rect x="971.0" y="643.0" width="21.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="974.0" y="654.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (6 samples, 1.80%)</title><rect x="971.0" y="627.0" width="21.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="974.0" y="638.0">_..</text>
</g>
<g>
<title>__sys_sendto (6 samples, 1.80%)</title><rect x="971.0" y="611.0" width="21.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="974.0" y="622.0">_..</text>
</g>
<g>
<title>sock_sendmsg (6 samples, 1.80%)</title><rect x="971.0" y="595.0" width="21.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="974.0" y="606.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (6 samples, 1.80%)</title><rect x="971.0" y="579.0" width="21.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="974.0" y="590.0">i..</text>
</g>
<g>
<title>lock_sock_nested (1 samples, 0.30%)</title><rect x="971.0" y="563.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="974.0" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg (5 samples, 1.50%)</title><rect x="974.5" y="563.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="977.5" y="574.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (5 samples, 1.50%)</title><rect x="974.5" y="547.0" width="17.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="977.5" y="558.0"></text>
</g>
<g>
<title>tcp_push (5 samples, 1.50%)</title><rect x="974.5" y="531.0" width="17.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="977.5" y="542.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 1.50%)</title><rect x="974.5" y="515.0" width="17.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="977.5" y="526.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 1.50%)</title><rect x="974.5" y="499.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="977.5" y="510.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 1.50%)</title><rect x="974.5" y="483.0" width="17.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="977.5" y="494.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 1.50%)</title><rect x="974.5" y="467.0" width="17.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="977.5" y="478.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 1.50%)</title><rect x="974.5" y="451.0" width="17.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="977.5" y="462.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 1.50%)</title><rect x="974.5" y="435.0" width="17.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="977.5" y="446.0"></text>
</g>
<g>
<title>ip_output (5 samples, 1.50%)</title><rect x="974.5" y="419.0" width="17.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="977.5" y="430.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 1.50%)</title><rect x="974.5" y="403.0" width="17.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="977.5" y="414.0"></text>
</g>
<g>
<title>__ip_finish_output (5 samples, 1.50%)</title><rect x="974.5" y="387.0" width="17.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="977.5" y="398.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 1.50%)</title><rect x="974.5" y="371.0" width="17.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="977.5" y="382.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 1.50%)</title><rect x="974.5" y="355.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="977.5" y="366.0"></text>
</g>
<g>
<title>do_softirq.part.20 (5 samples, 1.50%)</title><rect x="974.5" y="339.0" width="17.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="977.5" y="350.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 1.50%)</title><rect x="974.5" y="323.0" width="17.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="977.5" y="334.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 1.50%)</title><rect x="974.5" y="307.0" width="17.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="977.5" y="318.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 1.50%)</title><rect x="974.5" y="291.0" width="17.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="977.5" y="302.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 1.50%)</title><rect x="974.5" y="275.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="977.5" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 1.50%)</title><rect x="974.5" y="259.0" width="17.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="977.5" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 1.50%)</title><rect x="974.5" y="243.0" width="17.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="977.5" y="254.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 1.50%)</title><rect x="974.5" y="227.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="977.5" y="238.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 1.50%)</title><rect x="974.5" y="211.0" width="17.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="977.5" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 1.50%)</title><rect x="974.5" y="195.0" width="17.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="977.5" y="206.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 1.50%)</title><rect x="974.5" y="179.0" width="17.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="977.5" y="190.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 1.50%)</title><rect x="974.5" y="163.0" width="17.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="977.5" y="174.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 1.50%)</title><rect x="974.5" y="147.0" width="17.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="977.5" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 1.50%)</title><rect x="974.5" y="131.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="977.5" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 1.50%)</title><rect x="974.5" y="115.0" width="17.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="977.5" y="126.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.30%)</title><rect x="974.5" y="99.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="977.5" y="110.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.30%)</title><rect x="974.5" y="83.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="977.5" y="94.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.30%)</title><rect x="974.5" y="67.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="977.5" y="78.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.30%)</title><rect x="974.5" y="51.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="977.5" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.30%)</title><rect x="974.5" y="35.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="977.5" y="46.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.30%)</title><rect x="978.0" y="99.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="981.0" y="110.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.90%)</title><rect x="981.6" y="99.0" width="10.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="984.6" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.90%)</title><rect x="981.6" y="83.0" width="10.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="984.6" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.90%)</title><rect x="981.6" y="67.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="984.6" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.90%)</title><rect x="981.6" y="51.0" width="10.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="984.6" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.90%)</title><rect x="981.6" y="35.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="984.6" y="46.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyHttpServerImpl.getValueByKey (49 samples, 14.67%)</title><rect x="992.2" y="771.0" width="173.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="995.2" y="782.0">ru/mail/polis/service/..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.get (49 samples, 14.67%)</title><rect x="992.2" y="755.0" width="173.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="995.2" y="766.0">ru/mail/polis/dao/bast..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="992.2" y="739.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="995.2" y="750.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.30%)</title><rect x="992.2" y="723.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="995.2" y="734.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (1 samples, 0.30%)</title><rect x="992.2" y="707.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="995.2" y="718.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (1 samples, 0.30%)</title><rect x="992.2" y="691.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="995.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (1 samples, 0.30%)</title><rect x="995.7" y="739.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="998.7" y="750.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.30%)</title><rect x="995.7" y="723.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="998.7" y="734.0"></text>
</g>
<g>
<title>java/nio/HeapByteBufferR.&lt;init&gt; (1 samples, 0.30%)</title><rect x="995.7" y="707.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="998.7" y="718.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="995.7" y="691.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.7" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="995.7" y="675.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="998.7" y="686.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="995.7" y="659.0" width="3.5" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="998.7" y="670.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.30%)</title><rect x="995.7" y="643.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="998.7" y="654.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.limit (1 samples, 0.30%)</title><rect x="995.7" y="627.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.7" y="638.0"></text>
</g>
<g>
<title>java/nio/Buffer.limit (1 samples, 0.30%)</title><rect x="995.7" y="611.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="998.7" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.iterator (44 samples, 13.17%)</title><rect x="999.2" y="739.0" width="155.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1002.2" y="750.0">ru/mail/polis/dao/ba..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (4 samples, 1.20%)</title><rect x="999.2" y="723.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1002.2" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (3 samples, 0.90%)</title><rect x="999.2" y="707.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1002.2" y="718.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (3 samples, 0.90%)</title><rect x="999.2" y="691.0" width="10.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1002.2" y="702.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (3 samples, 0.90%)</title><rect x="999.2" y="675.0" width="10.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1002.2" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (3 samples, 0.90%)</title><rect x="999.2" y="659.0" width="10.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1002.2" y="670.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::MergeIteratorBuilder(rocksdb::InternalKeyComparator const*, rocksdb::Arena*, bool) (1 samples, 0.30%)</title><rect x="999.2" y="643.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1002.2" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="999.2" y="627.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1002.2" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="999.2" y="611.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1002.2" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="999.2" y="595.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1002.2" y="606.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (2 samples, 0.60%)</title><rect x="1002.8" y="643.0" width="7.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1005.8" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1009.8" y="707.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="1012.8" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1009.8" y="691.0" width="3.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1012.8" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1009.8" y="675.0" width="3.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1012.8" y="686.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1009.8" y="659.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1012.8" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1009.8" y="643.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1012.8" y="654.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1009.8" y="627.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="1012.8" y="638.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (1 samples, 0.30%)</title><rect x="1009.8" y="611.0" width="3.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1012.8" y="622.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.30%)</title><rect x="1009.8" y="595.0" width="3.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1012.8" y="606.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.30%)</title><rect x="1009.8" y="579.0" width="3.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1012.8" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.&lt;init&gt; (36 samples, 10.78%)</title><rect x="1013.4" y="723.0" width="127.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1016.4" y="734.0">ru/mail/polis/da..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (36 samples, 10.78%)</title><rect x="1013.4" y="707.0" width="127.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1016.4" y="718.0">org/rocksdb/Abst..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (36 samples, 10.78%)</title><rect x="1013.4" y="691.0" width="127.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1016.4" y="702.0">org/rocksdb/Rock..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (25 samples, 7.49%)</title><rect x="1013.4" y="675.0" width="88.3" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1016.4" y="686.0">Java_org_r..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="1013.4" y="659.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1016.4" y="670.0"></text>
</g>
<g>
<title>AllocateHeap(unsigned long, MemoryType, NativeCallStack const&amp;, AllocFailStrategy::AllocFailEnum) (1 samples, 0.30%)</title><rect x="1016.9" y="659.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1019.9" y="670.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (23 samples, 6.89%)</title><rect x="1020.4" y="659.0" width="81.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1023.4" y="670.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (23 samples, 6.89%)</title><rect x="1020.4" y="643.0" width="81.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1023.4" y="654.0">rocksdb::..</text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (22 samples, 6.59%)</title><rect x="1020.4" y="627.0" width="77.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="1023.4" y="638.0">/tmp/libr..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (22 samples, 6.59%)</title><rect x="1020.4" y="611.0" width="77.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1023.4" y="622.0">rocksdb::..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (22 samples, 6.59%)</title><rect x="1020.4" y="595.0" width="77.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1023.4" y="606.0">rocksdb::..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="1020.4" y="579.0" width="3.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1023.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (20 samples, 5.99%)</title><rect x="1024.0" y="579.0" width="70.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="1027.0" y="590.0">rocksdb:..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (6 samples, 1.80%)</title><rect x="1024.0" y="563.0" width="21.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1027.0" y="574.0">J..</text>
</g>
<g>
<title>jni_CallIntMethodV (6 samples, 1.80%)</title><rect x="1024.0" y="547.0" width="21.1" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1027.0" y="558.0">j..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.60%)</title><rect x="1024.0" y="531.0" width="7.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1027.0" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 1.20%)</title><rect x="1031.0" y="531.0" width="14.1" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="1034.0" y="542.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.60%)</title><rect x="1034.6" y="515.0" width="7.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1037.6" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="1041.6" y="515.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1044.6" y="526.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (10 samples, 2.99%)</title><rect x="1045.1" y="563.0" width="35.4" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1048.1" y="574.0">JNI..</text>
</g>
<g>
<title>jni_CallVoidMethodV (10 samples, 2.99%)</title><rect x="1045.1" y="547.0" width="35.4" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1048.1" y="558.0">jni..</text>
</g>
<g>
<title>JNIHandles::resolve(_jobject*) (1 samples, 0.30%)</title><rect x="1045.1" y="531.0" width="3.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1048.1" y="542.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.30%)</title><rect x="1048.7" y="531.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1051.7" y="542.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.30%)</title><rect x="1052.2" y="531.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1055.2" y="542.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="1055.7" y="531.0" width="3.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1058.7" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (5 samples, 1.50%)</title><rect x="1059.3" y="531.0" width="17.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1062.3" y="542.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.30%)</title><rect x="1059.3" y="515.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1062.3" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 1.20%)</title><rect x="1062.8" y="515.0" width="14.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1065.8" y="526.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.30%)</title><rect x="1069.9" y="499.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1072.9" y="510.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.30%)</title><rect x="1073.4" y="499.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1076.4" y="510.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="1076.9" y="531.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1079.9" y="542.0"></text>
</g>
<g>
<title>pthread_mutex_lock (2 samples, 0.60%)</title><rect x="1080.5" y="563.0" width="7.0" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="1083.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.60%)</title><rect x="1087.5" y="563.0" width="7.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1090.5" y="574.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.30%)</title><rect x="1091.1" y="547.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1094.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.30%)</title><rect x="1094.6" y="579.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1097.6" y="590.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (1 samples, 0.30%)</title><rect x="1098.1" y="627.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1101.1" y="638.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="1101.7" y="675.0" width="3.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1104.7" y="686.0"></text>
</g>
<g>
<title>operator new(unsigned long) (1 samples, 0.30%)</title><rect x="1101.7" y="659.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1104.7" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.30%)</title><rect x="1105.2" y="675.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1108.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (9 samples, 2.69%)</title><rect x="1108.7" y="675.0" width="31.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1111.7" y="686.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (9 samples, 2.69%)</title><rect x="1108.7" y="659.0" width="31.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1111.7" y="670.0">ru..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (9 samples, 2.69%)</title><rect x="1108.7" y="643.0" width="31.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1111.7" y="654.0">or..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (9 samples, 2.69%)</title><rect x="1108.7" y="627.0" width="31.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1111.7" y="638.0">or..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (9 samples, 2.69%)</title><rect x="1108.7" y="611.0" width="31.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1111.7" y="622.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (8 samples, 2.40%)</title><rect x="1112.3" y="595.0" width="28.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1115.3" y="606.0">Ja..</text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (2 samples, 0.60%)</title><rect x="1112.3" y="579.0" width="7.0" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1115.3" y="590.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.90%)</title><rect x="1119.3" y="579.0" width="10.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1122.3" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.90%)</title><rect x="1119.3" y="563.0" width="10.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1122.3" y="574.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (3 samples, 0.90%)</title><rect x="1119.3" y="547.0" width="10.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1122.3" y="558.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.60%)</title><rect x="1119.3" y="531.0" width="7.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1122.3" y="542.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="1126.4" y="531.0" width="3.5" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="1129.4" y="542.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.90%)</title><rect x="1129.9" y="579.0" width="10.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1132.9" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="1133.5" y="563.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1136.5" y="574.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.30%)</title><rect x="1137.0" y="563.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1140.0" y="574.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.30%)</title><rect x="1137.0" y="547.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1140.0" y="558.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.close (4 samples, 1.20%)</title><rect x="1140.5" y="723.0" width="14.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1143.5" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (4 samples, 1.20%)</title><rect x="1140.5" y="707.0" width="14.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1143.5" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (4 samples, 1.20%)</title><rect x="1140.5" y="691.0" width="14.2" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1143.5" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (4 samples, 1.20%)</title><rect x="1140.5" y="675.0" width="14.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1143.5" y="686.0"></text>
</g>
<g>
<title>__libc_free (2 samples, 0.60%)</title><rect x="1140.5" y="659.0" width="7.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1143.5" y="670.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (2 samples, 0.60%)</title><rect x="1147.6" y="659.0" width="7.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1150.6" y="670.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (2 samples, 0.60%)</title><rect x="1147.6" y="643.0" width="7.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1150.6" y="654.0"></text>
</g>
<g>
<title>rocksdb::DBIter::~DBIter() (2 samples, 0.60%)</title><rect x="1147.6" y="627.0" width="7.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1150.6" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::~MemTableIterator() (2 samples, 0.60%)</title><rect x="1147.6" y="611.0" width="7.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1150.6" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni3455007587114410784.so (1 samples, 0.30%)</title><rect x="1147.6" y="595.0" width="3.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1150.6" y="606.0"></text>
</g>
<g>
<title>free@plt (1 samples, 0.30%)</title><rect x="1151.1" y="595.0" width="3.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1154.1" y="606.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.next (3 samples, 0.90%)</title><rect x="1154.7" y="739.0" width="10.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1157.7" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.next (3 samples, 0.90%)</title><rect x="1154.7" y="723.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.7" y="734.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (2 samples, 0.60%)</title><rect x="1154.7" y="707.0" width="7.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1157.7" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (2 samples, 0.60%)</title><rect x="1154.7" y="691.0" width="7.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1157.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (1 samples, 0.30%)</title><rect x="1154.7" y="675.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="1157.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (1 samples, 0.30%)</title><rect x="1154.7" y="659.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1157.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.30%)</title><rect x="1154.7" y="643.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1157.7" y="654.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.30%)</title><rect x="1154.7" y="627.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1157.7" y="638.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.30%)</title><rect x="1154.7" y="611.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1157.7" y="622.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.30%)</title><rect x="1154.7" y="595.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1157.7" y="606.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="1154.7" y="579.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1157.7" y="590.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="1154.7" y="563.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1157.7" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (1 samples, 0.30%)</title><rect x="1158.2" y="675.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1161.2" y="686.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (1 samples, 0.30%)</title><rect x="1158.2" y="659.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1161.2" y="670.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (1 samples, 0.30%)</title><rect x="1158.2" y="643.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1161.2" y="654.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.30%)</title><rect x="1158.2" y="627.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1161.2" y="638.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.30%)</title><rect x="1158.2" y="611.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1161.2" y="622.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (1 samples, 0.30%)</title><rect x="1158.2" y="595.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="1161.2" y="606.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="1158.2" y="579.0" width="3.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="1161.2" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="1158.2" y="563.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1161.2" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="1158.2" y="547.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1161.2" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="1158.2" y="531.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1161.2" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="1158.2" y="515.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1161.2" y="526.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (1 samples, 0.30%)</title><rect x="1161.7" y="707.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1164.7" y="718.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (1 samples, 0.30%)</title><rect x="1161.7" y="691.0" width="3.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1164.7" y="702.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (1 samples, 0.30%)</title><rect x="1161.7" y="675.0" width="3.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1164.7" y="686.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.30%)</title><rect x="1161.7" y="659.0" width="3.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1164.7" y="670.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.30%)</title><rect x="1161.7" y="643.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1164.7" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.30%)</title><rect x="1161.7" y="627.0" width="3.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1164.7" y="638.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.30%)</title><rect x="1161.7" y="611.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1164.7" y="622.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.30%)</title><rect x="1165.3" y="787.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="1168.3" y="798.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.30%)</title><rect x="1168.8" y="819.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1171.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 1.20%)</title><rect x="1172.3" y="835.0" width="14.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1175.3" y="846.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 1.20%)</title><rect x="1172.3" y="819.0" width="14.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1175.3" y="830.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.30%)</title><rect x="1172.3" y="803.0" width="3.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1175.3" y="814.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="1172.3" y="787.0" width="3.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1175.3" y="798.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.30%)</title><rect x="1172.3" y="771.0" width="3.6" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="1175.3" y="782.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.60%)</title><rect x="1175.9" y="803.0" width="7.0" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1178.9" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="1175.9" y="787.0" width="7.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1178.9" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="1175.9" y="771.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1178.9" y="782.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.60%)</title><rect x="1175.9" y="755.0" width="7.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1178.9" y="766.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.60%)</title><rect x="1175.9" y="739.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1178.9" y="750.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.30%)</title><rect x="1179.4" y="723.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1182.4" y="734.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.30%)</title><rect x="1179.4" y="707.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1182.4" y="718.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.30%)</title><rect x="1179.4" y="691.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1182.4" y="702.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.30%)</title><rect x="1179.4" y="675.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1182.4" y="686.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.30%)</title><rect x="1179.4" y="659.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1182.4" y="670.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="1182.9" y="803.0" width="3.6" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="1185.9" y="814.0"></text>
</g>
<g>
<title>[Reference Handler tid=6010] (1 samples, 0.30%)</title><rect x="1186.5" y="899.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1189.5" y="910.0"></text>
</g>
<g>
<title>java/lang/ref/Reference$ReferenceHandler.run (1 samples, 0.30%)</title><rect x="1186.5" y="883.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1189.5" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.processPendingReferences (1 samples, 0.30%)</title><rect x="1186.5" y="867.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1189.5" y="878.0"></text>
</g>
<g>
<title>java/lang/ref/ReferenceQueue.enqueue (1 samples, 0.30%)</title><rect x="1186.5" y="851.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1189.5" y="862.0"></text>
</g>
</g>
</svg>
