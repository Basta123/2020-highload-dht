<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="1158" onload="init(evt)" viewBox="0 0 1200 1158" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="1141"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="1141"> </text>
<g id="frames">
<g>
<title>all (333 samples, 100.00%)</title><rect x="10.0" y="1107.0" width="1180.0" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="13.0" y="1118.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=5611] (25 samples, 7.51%)</title><rect x="10.0" y="1091.0" width="88.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="13.0" y="1102.0">[C2 Compil..</text>
</g>
<g>
<title>_int_malloc (1 samples, 0.30%)</title><rect x="10.0" y="1075.0" width="3.5" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="13.0" y="1086.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="10.0" y="1059.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="13.0" y="1070.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="10.0" y="1043.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="13.0" y="1054.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="10.0" y="1027.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="13.0" y="1038.0"></text>
</g>
<g>
<title>start_thread (24 samples, 7.21%)</title><rect x="13.5" y="1075.0" width="85.1" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="16.5" y="1086.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (24 samples, 7.21%)</title><rect x="13.5" y="1059.0" width="85.1" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="16.5" y="1070.0">thread_nat..</text>
</g>
<g>
<title>Thread::call_run() (24 samples, 7.21%)</title><rect x="13.5" y="1043.0" width="85.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="16.5" y="1054.0">Thread::ca..</text>
</g>
<g>
<title>JavaThread::run() (24 samples, 7.21%)</title><rect x="13.5" y="1027.0" width="85.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="16.5" y="1038.0">JavaThread..</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (24 samples, 7.21%)</title><rect x="13.5" y="1011.0" width="85.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="16.5" y="1022.0">CompileBro..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (24 samples, 7.21%)</title><rect x="13.5" y="995.0" width="85.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="16.5" y="1006.0">CompileBro..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (24 samples, 7.21%)</title><rect x="13.5" y="979.0" width="85.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="16.5" y="990.0">C2Compiler..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (24 samples, 7.21%)</title><rect x="13.5" y="963.0" width="85.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="16.5" y="974.0">Compile::C..</text>
</g>
<g>
<title>Compile::Code_Gen() (12 samples, 3.60%)</title><rect x="13.5" y="947.0" width="42.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="16.5" y="958.0">Comp..</text>
</g>
<g>
<title>Matcher::match() (1 samples, 0.30%)</title><rect x="13.5" y="931.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="16.5" y="942.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (1 samples, 0.30%)</title><rect x="13.5" y="915.0" width="3.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="16.5" y="926.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (1 samples, 0.30%)</title><rect x="13.5" y="899.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="16.5" y="910.0"></text>
</g>
<g>
<title>Matcher::ReduceInst(State*, int, Node*&amp;) (1 samples, 0.30%)</title><rect x="13.5" y="883.0" width="3.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="16.5" y="894.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.30%)</title><rect x="17.1" y="931.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="20.1" y="942.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.30%)</title><rect x="17.1" y="915.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="20.1" y="926.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_early(VectorSet&amp;, Node_Stack&amp;) (1 samples, 0.30%)</title><rect x="17.1" y="899.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="20.1" y="910.0"></text>
</g>
<g>
<title>Node::is_block_proj() const (1 samples, 0.30%)</title><rect x="17.1" y="883.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="20.1" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (10 samples, 3.00%)</title><rect x="20.6" y="931.0" width="35.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="23.6" y="942.0">Pha..</text>
</g>
<g>
<title>Node::cisc_operand() const (1 samples, 0.30%)</title><rect x="20.6" y="915.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="23.6" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::Simplify() (3 samples, 0.90%)</title><rect x="24.2" y="915.0" width="10.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="27.2" y="926.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (2 samples, 0.60%)</title><rect x="24.2" y="899.0" width="7.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="27.2" y="910.0"></text>
</g>
<g>
<title>PhaseIFG::remove_node(unsigned int) (1 samples, 0.30%)</title><rect x="31.3" y="899.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="34.3" y="910.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.30%)</title><rect x="31.3" y="883.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="34.3" y="894.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (2 samples, 0.60%)</title><rect x="34.8" y="915.0" width="7.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="37.8" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.30%)</title><rect x="38.3" y="899.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="41.3" y="910.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.60%)</title><rect x="41.9" y="915.0" width="7.1" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="44.9" y="926.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.30%)</title><rect x="41.9" y="899.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="44.9" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="45.4" y="899.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="48.4" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="45.4" y="883.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="48.4" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="45.4" y="867.0" width="3.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="48.4" y="878.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (2 samples, 0.60%)</title><rect x="49.0" y="915.0" width="7.1" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="52.0" y="926.0"></text>
</g>
<g>
<title>PhaseChaitin::elide_copy(Node*, int, Block*, Node_List&amp;, Node_List&amp;, bool) (1 samples, 0.30%)</title><rect x="52.5" y="899.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="55.5" y="910.0"></text>
</g>
<g>
<title>Compile::Optimize() (9 samples, 2.70%)</title><rect x="56.1" y="947.0" width="31.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="59.1" y="958.0">Co..</text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (2 samples, 0.60%)</title><rect x="56.1" y="931.0" width="7.1" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="59.1" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.60%)</title><rect x="56.1" y="915.0" width="7.1" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="59.1" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.30%)</title><rect x="56.1" y="899.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="59.1" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.30%)</title><rect x="56.1" y="883.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="59.1" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_thru_phi(Node*, Node*, int) (1 samples, 0.30%)</title><rect x="56.1" y="867.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="59.1" y="878.0"></text>
</g>
<g>
<title>PhaseIterGVN::remove_globally_dead_node(Node*) (1 samples, 0.30%)</title><rect x="56.1" y="851.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="59.1" y="862.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="56.1" y="835.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="59.1" y="846.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="56.1" y="819.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="59.1" y="830.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="56.1" y="803.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="59.1" y="814.0"></text>
</g>
<g>
<title>RegionNode::is_CFG() const (1 samples, 0.30%)</title><rect x="59.6" y="899.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="62.6" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="59.6" y="883.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="62.6" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="59.6" y="867.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="62.6" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="59.6" y="851.0" width="3.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="62.6" y="862.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.30%)</title><rect x="59.6" y="835.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="62.6" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.30%)</title><rect x="59.6" y="819.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="62.6" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.30%)</title><rect x="59.6" y="803.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="62.6" y="814.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.258] (1 samples, 0.30%)</title><rect x="63.2" y="931.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="66.2" y="942.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.30%)</title><rect x="66.7" y="931.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="69.7" y="942.0"></text>
</g>
<g>
<title>TypeInstPtr::add_offset(long) const (1 samples, 0.30%)</title><rect x="66.7" y="915.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="69.7" y="926.0"></text>
</g>
<g>
<title>Type::hashcons() (1 samples, 0.30%)</title><rect x="66.7" y="899.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="69.7" y="910.0"></text>
</g>
<g>
<title>Dict::Insert(void*, void*, bool) (1 samples, 0.30%)</title><rect x="66.7" y="883.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="69.7" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (2 samples, 0.60%)</title><rect x="70.2" y="931.0" width="7.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="73.2" y="942.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.30%)</title><rect x="70.2" y="915.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="73.2" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.30%)</title><rect x="70.2" y="899.0" width="3.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="73.2" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.30%)</title><rect x="70.2" y="883.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="73.2" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::compute_lca_of_uses(Node*, Node*, bool) (1 samples, 0.30%)</title><rect x="70.2" y="867.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="73.2" y="878.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_lca_for_get_late_ctrl_internal(Node*, Node*, Node*) (1 samples, 0.30%)</title><rect x="70.2" y="851.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="73.2" y="862.0"></text>
</g>
<g>
<title>PhaseIdealLoop::dom_depth(Node*) const [clone .isra.123] (1 samples, 0.30%)</title><rect x="70.2" y="835.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="73.2" y="846.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks(VectorSet&amp;, Node_Stack&amp;, bool) (1 samples, 0.30%)</title><rect x="73.8" y="915.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="76.8" y="926.0"></text>
</g>
<g>
<title>PhaseIdealLoop::split_if_with_blocks_pre(Node*) (1 samples, 0.30%)</title><rect x="73.8" y="899.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="76.8" y="910.0"></text>
</g>
<g>
<title>PhaseIdealLoop::remix_address_expressions(Node*) (1 samples, 0.30%)</title><rect x="73.8" y="883.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="76.8" y="894.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_ctrl(Node*) (1 samples, 0.30%)</title><rect x="73.8" y="867.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="76.8" y="878.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (2 samples, 0.60%)</title><rect x="77.3" y="931.0" width="7.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="80.3" y="942.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (2 samples, 0.60%)</title><rect x="77.3" y="915.0" width="7.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="80.3" y="926.0"></text>
</g>
<g>
<title>PhaseIterGVN::subsume_node(Node*, Node*) (1 samples, 0.30%)</title><rect x="77.3" y="899.0" width="3.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="80.3" y="910.0"></text>
</g>
<g>
<title>StoreNode::Ideal(PhaseGVN*, bool) (1 samples, 0.30%)</title><rect x="80.9" y="899.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="83.9" y="910.0"></text>
</g>
<g>
<title>InitializeNode::can_capture_store(StoreNode*, PhaseTransform*, bool) [clone .part.157] (1 samples, 0.30%)</title><rect x="80.9" y="883.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="83.9" y="894.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="867.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="83.9" y="878.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="851.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="83.9" y="862.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="835.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="83.9" y="846.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="819.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="83.9" y="830.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="803.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="83.9" y="814.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="787.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="83.9" y="798.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="771.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="83.9" y="782.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="755.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="83.9" y="766.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="739.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="83.9" y="750.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="723.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="83.9" y="734.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="707.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="83.9" y="718.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="691.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="83.9" y="702.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="675.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="83.9" y="686.0"></text>
</g>
<g>
<title>InitializeNode::detect_init_independence(Node*, int&amp;) (1 samples, 0.30%)</title><rect x="80.9" y="659.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="83.9" y="670.0"></text>
</g>
<g>
<title>MemNode::all_controls_dominate(Node*, Node*) [clone .part.149] (1 samples, 0.30%)</title><rect x="80.9" y="643.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="83.9" y="654.0"></text>
</g>
<g>
<title>Unique_Node_List::push(Node*) (1 samples, 0.30%)</title><rect x="80.9" y="627.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="83.9" y="638.0"></text>
</g>
<g>
<title>VectorSet::operator&lt;&lt;=(unsigned int) (1 samples, 0.30%)</title><rect x="80.9" y="611.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="83.9" y="622.0"></text>
</g>
<g>
<title>Arena::Arealloc(void*, unsigned long, unsigned long, AllocFailStrategy::AllocFailEnum) (1 samples, 0.30%)</title><rect x="80.9" y="595.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="83.9" y="606.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (1 samples, 0.30%)</title><rect x="84.4" y="931.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="87.4" y="942.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_arraycopy_node(ArrayCopyNode*) (1 samples, 0.30%)</title><rect x="84.4" y="915.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="87.4" y="926.0"></text>
</g>
<g>
<title>PhaseMacroExpand::generate_arraycopy(ArrayCopyNode*, AllocateArrayNode*, Node**, MergeMemNode*, Node**, TypePtr const*, BasicType, Node*, Node*, Node*, Node*, Node*, bool, bool, RegionNode*) (1 samples, 0.30%)</title><rect x="84.4" y="899.0" width="3.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="87.4" y="910.0"></text>
</g>
<g>
<title>PhaseMacroExpand::generate_slow_arraycopy(ArrayCopyNode*, Node**, Node*, Node**, TypePtr const*, Node*, Node*, Node*, Node*, Node*, bool) (1 samples, 0.30%)</title><rect x="84.4" y="883.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="87.4" y="894.0"></text>
</g>
<g>
<title>OptoRuntime::slow_arraycopy_Type() (1 samples, 0.30%)</title><rect x="84.4" y="867.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="87.4" y="878.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="84.4" y="851.0" width="3.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="87.4" y="862.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.90%)</title><rect x="88.0" y="947.0" width="10.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="91.0" y="958.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.90%)</title><rect x="88.0" y="931.0" width="10.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="91.0" y="942.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.90%)</title><rect x="88.0" y="915.0" width="10.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="91.0" y="926.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.90%)</title><rect x="88.0" y="899.0" width="10.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="91.0" y="910.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.90%)</title><rect x="88.0" y="883.0" width="10.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="91.0" y="894.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.90%)</title><rect x="88.0" y="867.0" width="10.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="91.0" y="878.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.30%)</title><rect x="88.0" y="851.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="91.0" y="862.0"></text>
</g>
<g>
<title>Compile::call_generator(ciMethod*, int, bool, JVMState*, bool, float, ciKlass*, bool, bool) (1 samples, 0.30%)</title><rect x="88.0" y="835.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="91.0" y="846.0"></text>
</g>
<g>
<title>InlineTree::ok_to_inline(ciMethod*, JVMState*, ciCallProfile&amp;, WarmCallInfo*, bool&amp;) (1 samples, 0.30%)</title><rect x="88.0" y="819.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="91.0" y="830.0"></text>
</g>
<g>
<title>ciMethod::get_flow_analysis() (1 samples, 0.30%)</title><rect x="88.0" y="803.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="91.0" y="814.0"></text>
</g>
<g>
<title>ciTypeFlow::do_flow() (1 samples, 0.30%)</title><rect x="88.0" y="787.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="91.0" y="798.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_types() (1 samples, 0.30%)</title><rect x="88.0" y="771.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="91.0" y="782.0"></text>
</g>
<g>
<title>ciTypeFlow::df_flow_types(ciTypeFlow::Block*, bool, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.30%)</title><rect x="88.0" y="755.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="91.0" y="766.0"></text>
</g>
<g>
<title>ciTypeFlow::flow_block(ciTypeFlow::Block*, ciTypeFlow::StateVector*, ciTypeFlow::JsrSet*) (1 samples, 0.30%)</title><rect x="88.0" y="739.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="91.0" y="750.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::apply_one_bytecode(ciBytecodeStream*) (1 samples, 0.30%)</title><rect x="88.0" y="723.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="91.0" y="734.0"></text>
</g>
<g>
<title>ciTypeFlow::StateVector::do_getstatic(ciBytecodeStream*) (1 samples, 0.30%)</title><rect x="88.0" y="707.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="91.0" y="718.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_field(bool&amp;) (1 samples, 0.30%)</title><rect x="88.0" y="691.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="91.0" y="702.0"></text>
</g>
<g>
<title>ciEnv::get_field_by_index(ciInstanceKlass*, int) (1 samples, 0.30%)</title><rect x="88.0" y="675.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="91.0" y="686.0"></text>
</g>
<g>
<title>ciField::ciField(ciInstanceKlass*, int) (1 samples, 0.30%)</title><rect x="88.0" y="659.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="91.0" y="670.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_index_impl(constantPoolHandle const&amp;, int, bool&amp;, ciInstanceKlass*) (1 samples, 0.30%)</title><rect x="88.0" y="643.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="91.0" y="654.0"></text>
</g>
<g>
<title>ciEnv::get_klass_by_name_impl(ciKlass*, constantPoolHandle const&amp;, ciSymbol*, bool) (1 samples, 0.30%)</title><rect x="88.0" y="627.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="91.0" y="638.0"></text>
</g>
<g>
<title>ttyLocker::release_tty_if_locked() (1 samples, 0.30%)</title><rect x="88.0" y="611.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="91.0" y="622.0"></text>
</g>
<g>
<title>syscall (1 samples, 0.30%)</title><rect x="88.0" y="595.0" width="3.5" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="91.0" y="606.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="88.0" y="579.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="91.0" y="590.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="88.0" y="563.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="91.0" y="574.0"></text>
</g>
<g>
<title>__task_pid_nr_ns (1 samples, 0.30%)</title><rect x="88.0" y="547.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="91.0" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.60%)</title><rect x="91.5" y="851.0" width="7.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="94.5" y="862.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.60%)</title><rect x="91.5" y="835.0" width="7.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="94.5" y="846.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.60%)</title><rect x="91.5" y="819.0" width="7.1" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="94.5" y="830.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.60%)</title><rect x="91.5" y="803.0" width="7.1" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="94.5" y="814.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.60%)</title><rect x="91.5" y="787.0" width="7.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="94.5" y="798.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.60%)</title><rect x="91.5" y="771.0" width="7.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="94.5" y="782.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="91.5" y="755.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="94.5" y="766.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="91.5" y="739.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="94.5" y="750.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="91.5" y="723.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="94.5" y="734.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="91.5" y="707.0" width="3.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="94.5" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="91.5" y="691.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="94.5" y="702.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="91.5" y="675.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="94.5" y="686.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="91.5" y="659.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="94.5" y="670.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="91.5" y="643.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="94.5" y="654.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="91.5" y="627.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="94.5" y="638.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="91.5" y="611.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="94.5" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="91.5" y="595.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="94.5" y="606.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="91.5" y="579.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="94.5" y="590.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="91.5" y="563.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="94.5" y="574.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="91.5" y="547.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="94.5" y="558.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="91.5" y="531.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="94.5" y="542.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="91.5" y="515.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="94.5" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="91.5" y="499.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="94.5" y="510.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="91.5" y="483.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="94.5" y="494.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="91.5" y="467.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="94.5" y="478.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="91.5" y="451.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="94.5" y="462.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="91.5" y="435.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="94.5" y="446.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="91.5" y="419.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="94.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="91.5" y="403.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="94.5" y="414.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="91.5" y="387.0" width="3.5" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="94.5" y="398.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="91.5" y="371.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="94.5" y="382.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="91.5" y="355.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="94.5" y="366.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="91.5" y="339.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="94.5" y="350.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="91.5" y="323.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="94.5" y="334.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="91.5" y="307.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="94.5" y="318.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="91.5" y="291.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="94.5" y="302.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="91.5" y="275.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="94.5" y="286.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="91.5" y="259.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="94.5" y="270.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="91.5" y="243.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="94.5" y="254.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="91.5" y="227.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="94.5" y="238.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="91.5" y="211.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="94.5" y="222.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="91.5" y="195.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="94.5" y="206.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="91.5" y="179.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="94.5" y="190.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="91.5" y="163.0" width="3.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="94.5" y="174.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="91.5" y="147.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="94.5" y="158.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="91.5" y="131.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="94.5" y="142.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="91.5" y="115.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="94.5" y="126.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="91.5" y="99.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="94.5" y="110.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.30%)</title><rect x="91.5" y="83.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="94.5" y="94.0"></text>
</g>
<g>
<title>Type::operator new(unsigned long) (1 samples, 0.30%)</title><rect x="91.5" y="67.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="94.5" y="78.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="95.0" y="755.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="98.0" y="766.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="95.0" y="739.0" width="3.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="98.0" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="95.0" y="723.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="98.0" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="95.0" y="707.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="98.0" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="95.0" y="691.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="98.0" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="95.0" y="675.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="98.0" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="95.0" y="659.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="98.0" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="95.0" y="643.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="98.0" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="95.0" y="627.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="98.0" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="95.0" y="611.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="98.0" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="95.0" y="595.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="98.0" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="95.0" y="579.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="98.0" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="95.0" y="563.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="98.0" y="574.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="95.0" y="547.0" width="3.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="98.0" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="95.0" y="531.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="98.0" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="95.0" y="515.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="98.0" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="95.0" y="499.0" width="3.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="98.0" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="95.0" y="483.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="98.0" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="95.0" y="467.0" width="3.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="98.0" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="95.0" y="451.0" width="3.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="98.0" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="95.0" y="435.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="98.0" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="95.0" y="419.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="98.0" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="95.0" y="403.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="98.0" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="95.0" y="387.0" width="3.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="98.0" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="95.0" y="371.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="98.0" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="95.0" y="355.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="98.0" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="95.0" y="339.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="98.0" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="95.0" y="323.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="98.0" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="95.0" y="307.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="98.0" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="95.0" y="291.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="98.0" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="95.0" y="275.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="98.0" y="286.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="95.0" y="259.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="98.0" y="270.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.30%)</title><rect x="95.0" y="243.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="98.0" y="254.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.30%)</title><rect x="95.0" y="227.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="98.0" y="238.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.30%)</title><rect x="95.0" y="211.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="98.0" y="222.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.30%)</title><rect x="95.0" y="195.0" width="3.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="98.0" y="206.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.30%)</title><rect x="95.0" y="179.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="98.0" y="190.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.30%)</title><rect x="95.0" y="163.0" width="3.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="98.0" y="174.0"></text>
</g>
<g>
<title>ciBytecodeStream::get_method(bool&amp;, ciSignature**) (1 samples, 0.30%)</title><rect x="95.0" y="147.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="98.0" y="158.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.30%)</title><rect x="95.0" y="131.0" width="3.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="98.0" y="142.0"></text>
</g>
<g>
<title>ciEnv::get_method_by_index_impl(constantPoolHandle const&amp;, int, Bytecodes::Code, ciInstanceKlass*) (1 samples, 0.30%)</title><rect x="95.0" y="115.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="98.0" y="126.0"></text>
</g>
<g>
<title>ciEnv::lookup_method(ciInstanceKlass*, ciKlass*, Symbol*, Symbol*, Bytecodes::Code, constantTag) (1 samples, 0.30%)</title><rect x="95.0" y="99.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="98.0" y="110.0"></text>
</g>
<g>
<title>LinkResolver::resolve_static_call_or_null(LinkInfo const&amp;) (1 samples, 0.30%)</title><rect x="95.0" y="83.0" width="3.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="98.0" y="94.0"></text>
</g>
<g>
<title>LinkResolver::resolve_method(LinkInfo const&amp;, Bytecodes::Code, Thread*) (1 samples, 0.30%)</title><rect x="95.0" y="67.0" width="3.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="98.0" y="78.0"></text>
</g>
<g>
<title>LinkResolver::check_method_loader_constraints(LinkInfo const&amp;, methodHandle const&amp;, char const*, Thread*) (1 samples, 0.30%)</title><rect x="95.0" y="51.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="98.0" y="62.0"></text>
</g>
<g>
<title>Klass::class_loader() const (1 samples, 0.30%)</title><rect x="95.0" y="35.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="98.0" y="46.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=5648] (9 samples, 2.70%)</title><rect x="98.6" y="1091.0" width="31.9" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="101.6" y="1102.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9 samples, 2.70%)</title><rect x="98.6" y="1075.0" width="31.9" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="101.6" y="1086.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.60%)</title><rect x="98.6" y="1059.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="101.6" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.60%)</title><rect x="98.6" y="1043.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="101.6" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.60%)</title><rect x="98.6" y="1027.0" width="7.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="101.6" y="1038.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.60%)</title><rect x="98.6" y="1011.0" width="7.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="101.6" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="98.6" y="995.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="101.6" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="98.6" y="979.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="101.6" y="990.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.60%)</title><rect x="98.6" y="963.0" width="7.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="101.6" y="974.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.60%)</title><rect x="98.6" y="947.0" width="7.1" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="101.6" y="958.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.60%)</title><rect x="98.6" y="931.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="101.6" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.60%)</title><rect x="98.6" y="915.0" width="7.1" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="101.6" y="926.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.60%)</title><rect x="98.6" y="899.0" width="7.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="101.6" y="910.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.30%)</title><rect x="102.1" y="883.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="105.1" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.30%)</title><rect x="102.1" y="867.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="105.1" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.30%)</title><rect x="102.1" y="851.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="105.1" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (7 samples, 2.10%)</title><rect x="105.7" y="1059.0" width="24.8" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="108.7" y="1070.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (7 samples, 2.10%)</title><rect x="105.7" y="1043.0" width="24.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="108.7" y="1054.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 1.50%)</title><rect x="105.7" y="1027.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="108.7" y="1038.0"></text>
</g>
<g>
<title>_new_array_Java (1 samples, 0.30%)</title><rect x="105.7" y="1011.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="108.7" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.90%)</title><rect x="109.2" y="1011.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="112.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.90%)</title><rect x="109.2" y="995.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="112.2" y="1006.0"></text>
</g>
<g>
<title>RequestHandler2_getValueByKey.handleRequest (3 samples, 0.90%)</title><rect x="109.2" y="979.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.2" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.getValueByKey (3 samples, 0.90%)</title><rect x="109.2" y="963.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="112.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.90%)</title><rect x="109.2" y="947.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="112.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.90%)</title><rect x="109.2" y="931.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.90%)</title><rect x="109.2" y="915.0" width="10.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="112.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.90%)</title><rect x="109.2" y="899.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="112.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.90%)</title><rect x="109.2" y="883.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="112.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.90%)</title><rect x="109.2" y="867.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="112.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.90%)</title><rect x="109.2" y="851.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="112.2" y="862.0"></text>
</g>
<g>
<title>Unsafe_Unpark (2 samples, 0.60%)</title><rect x="109.2" y="835.0" width="7.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="112.2" y="846.0"></text>
</g>
<g>
<title>oopDesc::address_field(int) const (1 samples, 0.30%)</title><rect x="109.2" y="819.0" width="3.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="112.2" y="830.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.30%)</title><rect x="112.8" y="819.0" width="3.5" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="115.8" y="830.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.30%)</title><rect x="116.3" y="835.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="119.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="116.3" y="819.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="119.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="116.3" y="803.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="119.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="116.3" y="787.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="119.3" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="116.3" y="771.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="119.3" y="782.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.30%)</title><rect x="116.3" y="755.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="119.3" y="766.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.30%)</title><rect x="116.3" y="739.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="119.3" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.30%)</title><rect x="119.8" y="1011.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="122.8" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (1 samples, 0.30%)</title><rect x="119.8" y="995.0" width="3.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="122.8" y="1006.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.30%)</title><rect x="119.8" y="979.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="122.8" y="990.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.30%)</title><rect x="119.8" y="963.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="122.8" y="974.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.30%)</title><rect x="119.8" y="947.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="122.8" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.60%)</title><rect x="123.4" y="1027.0" width="7.1" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="126.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.60%)</title><rect x="123.4" y="1011.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="126.4" y="1022.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.30%)</title><rect x="126.9" y="995.0" width="3.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="129.9" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="126.9" y="979.0" width="3.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="129.9" y="990.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.30%)</title><rect x="126.9" y="963.0" width="3.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="129.9" y="974.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.30%)</title><rect x="126.9" y="947.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="129.9" y="958.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=5649] (10 samples, 3.00%)</title><rect x="130.5" y="1091.0" width="35.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="133.5" y="1102.0">[NI..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (10 samples, 3.00%)</title><rect x="130.5" y="1075.0" width="35.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="133.5" y="1086.0">one..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (5 samples, 1.50%)</title><rect x="130.5" y="1059.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.5" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (5 samples, 1.50%)</title><rect x="130.5" y="1043.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="133.5" y="1054.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSelector_epollWait (1 samples, 0.30%)</title><rect x="130.5" y="1027.0" width="3.5" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="133.5" y="1038.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="130.5" y="1011.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="133.5" y="1022.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="130.5" y="995.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="133.5" y="1006.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="130.5" y="979.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="133.5" y="990.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 1.20%)</title><rect x="134.0" y="1027.0" width="14.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="137.0" y="1038.0"></text>
</g>
<g>
<title>epoll_wait (4 samples, 1.20%)</title><rect x="134.0" y="1011.0" width="14.2" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="137.0" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.20%)</title><rect x="134.0" y="995.0" width="14.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="137.0" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.20%)</title><rect x="134.0" y="979.0" width="14.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="137.0" y="990.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (4 samples, 1.20%)</title><rect x="134.0" y="963.0" width="14.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="137.0" y="974.0"></text>
</g>
<g>
<title>do_epoll_wait (4 samples, 1.20%)</title><rect x="134.0" y="947.0" width="14.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="137.0" y="958.0"></text>
</g>
<g>
<title>ep_poll (4 samples, 1.20%)</title><rect x="134.0" y="931.0" width="14.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="137.0" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (4 samples, 1.20%)</title><rect x="134.0" y="915.0" width="14.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="137.0" y="926.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (4 samples, 1.20%)</title><rect x="134.0" y="899.0" width="14.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="137.0" y="910.0"></text>
</g>
<g>
<title>schedule (4 samples, 1.20%)</title><rect x="134.0" y="883.0" width="14.2" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="137.0" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (4 samples, 1.20%)</title><rect x="134.0" y="867.0" width="14.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="137.0" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (4 samples, 1.20%)</title><rect x="134.0" y="851.0" width="14.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="137.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5 samples, 1.50%)</title><rect x="148.2" y="1059.0" width="17.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="151.2" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5 samples, 1.50%)</title><rect x="148.2" y="1043.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="151.2" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3 samples, 0.90%)</title><rect x="148.2" y="1027.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="151.2" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.90%)</title><rect x="148.2" y="1011.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.2" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.90%)</title><rect x="148.2" y="995.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.2" y="1006.0"></text>
</g>
<g>
<title>RequestHandler2_getValueByKey.handleRequest (3 samples, 0.90%)</title><rect x="148.2" y="979.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="151.2" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (1 samples, 0.30%)</title><rect x="148.2" y="963.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="151.2" y="974.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.30%)</title><rect x="148.2" y="947.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="151.2" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.30%)</title><rect x="148.2" y="931.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="151.2" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.30%)</title><rect x="148.2" y="915.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="151.2" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.getValueByKey (2 samples, 0.60%)</title><rect x="151.7" y="963.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="154.7" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.60%)</title><rect x="151.7" y="947.0" width="7.1" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="154.7" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.60%)</title><rect x="151.7" y="931.0" width="7.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.7" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.60%)</title><rect x="151.7" y="915.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="154.7" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.30%)</title><rect x="151.7" y="899.0" width="3.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="154.7" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="155.3" y="899.0" width="3.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="158.3" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="155.3" y="883.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="158.3" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="155.3" y="867.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="158.3" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.30%)</title><rect x="155.3" y="851.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="158.3" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.30%)</title><rect x="155.3" y="835.0" width="3.5" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="158.3" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="155.3" y="819.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="158.3" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="155.3" y="803.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="158.3" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="155.3" y="787.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="158.3" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="155.3" y="771.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="158.3" y="782.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.30%)</title><rect x="155.3" y="755.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="158.3" y="766.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.30%)</title><rect x="155.3" y="739.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="158.3" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.30%)</title><rect x="155.3" y="723.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="158.3" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.30%)</title><rect x="155.3" y="707.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="158.3" y="718.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.60%)</title><rect x="158.8" y="1027.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="161.8" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.60%)</title><rect x="158.8" y="1011.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="161.8" y="1022.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.30%)</title><rect x="158.8" y="995.0" width="3.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="161.8" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="158.8" y="979.0" width="3.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="161.8" y="990.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="158.8" y="963.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="161.8" y="974.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.30%)</title><rect x="162.4" y="995.0" width="3.5" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="165.4" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="162.4" y="979.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="165.4" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="162.4" y="963.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="165.4" y="974.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.30%)</title><rect x="162.4" y="947.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="165.4" y="958.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.30%)</title><rect x="162.4" y="931.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="165.4" y="942.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.30%)</title><rect x="162.4" y="915.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="165.4" y="926.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.30%)</title><rect x="162.4" y="899.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="165.4" y="910.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.30%)</title><rect x="162.4" y="883.0" width="3.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="165.4" y="894.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=5650] (9 samples, 2.70%)</title><rect x="165.9" y="1091.0" width="31.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="168.9" y="1102.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9 samples, 2.70%)</title><rect x="165.9" y="1075.0" width="31.9" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="168.9" y="1086.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (4 samples, 1.20%)</title><rect x="165.9" y="1059.0" width="14.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="168.9" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.&lt;init&gt; (1 samples, 0.30%)</title><rect x="165.9" y="1043.0" width="3.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="168.9" y="1054.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.90%)</title><rect x="169.5" y="1043.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="172.5" y="1054.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.60%)</title><rect x="173.0" y="1027.0" width="7.1" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="176.0" y="1038.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.60%)</title><rect x="173.0" y="1011.0" width="7.1" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="176.0" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="173.0" y="995.0" width="7.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="176.0" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="173.0" y="979.0" width="7.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="176.0" y="990.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.60%)</title><rect x="173.0" y="963.0" width="7.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="176.0" y="974.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.60%)</title><rect x="173.0" y="947.0" width="7.1" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="176.0" y="958.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.60%)</title><rect x="173.0" y="931.0" width="7.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="176.0" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.60%)</title><rect x="173.0" y="915.0" width="7.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="176.0" y="926.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.60%)</title><rect x="173.0" y="899.0" width="7.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="176.0" y="910.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.60%)</title><rect x="173.0" y="883.0" width="7.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="176.0" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.60%)</title><rect x="173.0" y="867.0" width="7.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="176.0" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.60%)</title><rect x="173.0" y="851.0" width="7.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="176.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5 samples, 1.50%)</title><rect x="180.1" y="1059.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.1" y="1070.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (5 samples, 1.50%)</title><rect x="180.1" y="1043.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="183.1" y="1054.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (5 samples, 1.50%)</title><rect x="180.1" y="1027.0" width="17.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="183.1" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (5 samples, 1.50%)</title><rect x="180.1" y="1011.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="183.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (5 samples, 1.50%)</title><rect x="180.1" y="995.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="183.1" y="1006.0"></text>
</g>
<g>
<title>RequestHandler2_getValueByKey.handleRequest (5 samples, 1.50%)</title><rect x="180.1" y="979.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="183.1" y="990.0"></text>
</g>
<g>
<title>one/nio/http/Request.getParameter (2 samples, 0.60%)</title><rect x="180.1" y="963.0" width="7.1" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="183.1" y="974.0"></text>
</g>
<g>
<title>java/lang/String.startsWith (1 samples, 0.30%)</title><rect x="180.1" y="947.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.1" y="958.0"></text>
</g>
<g>
<title>java/lang/String.length (1 samples, 0.30%)</title><rect x="180.1" y="931.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="183.1" y="942.0"></text>
</g>
<g>
<title>one/nio/util/URLEncoder.decode (1 samples, 0.30%)</title><rect x="183.6" y="947.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="186.6" y="958.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.30%)</title><rect x="183.6" y="931.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="186.6" y="942.0"></text>
</g>
<g>
<title>java/lang/String.indexOf (1 samples, 0.30%)</title><rect x="183.6" y="915.0" width="3.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="186.6" y="926.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.indexOf (1 samples, 0.30%)</title><rect x="183.6" y="899.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="186.6" y="910.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.getValueByKey (3 samples, 0.90%)</title><rect x="187.2" y="963.0" width="10.6" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="190.2" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.90%)</title><rect x="187.2" y="947.0" width="10.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="190.2" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.90%)</title><rect x="187.2" y="931.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.2" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.90%)</title><rect x="187.2" y="915.0" width="10.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="190.2" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.90%)</title><rect x="187.2" y="899.0" width="10.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="190.2" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.90%)</title><rect x="187.2" y="883.0" width="10.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="190.2" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.90%)</title><rect x="187.2" y="867.0" width="10.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="190.2" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.90%)</title><rect x="187.2" y="851.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="190.2" y="862.0"></text>
</g>
<g>
<title>Parker::unpark() (1 samples, 0.30%)</title><rect x="187.2" y="835.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="190.2" y="846.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.60%)</title><rect x="190.7" y="835.0" width="7.1" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="193.7" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="190.7" y="819.0" width="7.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="193.7" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="190.7" y="803.0" width="7.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="193.7" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.60%)</title><rect x="190.7" y="787.0" width="7.1" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="193.7" y="798.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.60%)</title><rect x="190.7" y="771.0" width="7.1" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="193.7" y="782.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.60%)</title><rect x="190.7" y="755.0" width="7.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="193.7" y="766.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.30%)</title><rect x="194.3" y="739.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="197.3" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.30%)</title><rect x="194.3" y="723.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="197.3" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.30%)</title><rect x="194.3" y="707.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="197.3" y="718.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=5651] (9 samples, 2.70%)</title><rect x="197.8" y="1091.0" width="31.9" height="15" fill="#e15b5b" rx="2" ry="2"/>
<text x="200.8" y="1102.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (9 samples, 2.70%)</title><rect x="197.8" y="1075.0" width="31.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="200.8" y="1086.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.90%)</title><rect x="197.8" y="1059.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="200.8" y="1070.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (3 samples, 0.90%)</title><rect x="197.8" y="1043.0" width="10.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="200.8" y="1054.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.90%)</title><rect x="197.8" y="1027.0" width="10.6" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="200.8" y="1038.0"></text>
</g>
<g>
<title>epoll_wait (3 samples, 0.90%)</title><rect x="197.8" y="1011.0" width="10.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="200.8" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.90%)</title><rect x="197.8" y="995.0" width="10.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="200.8" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.90%)</title><rect x="197.8" y="979.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="200.8" y="990.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (3 samples, 0.90%)</title><rect x="197.8" y="963.0" width="10.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="200.8" y="974.0"></text>
</g>
<g>
<title>do_epoll_wait (3 samples, 0.90%)</title><rect x="197.8" y="947.0" width="10.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="200.8" y="958.0"></text>
</g>
<g>
<title>ep_poll (3 samples, 0.90%)</title><rect x="197.8" y="931.0" width="10.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="200.8" y="942.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (3 samples, 0.90%)</title><rect x="197.8" y="915.0" width="10.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="200.8" y="926.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (3 samples, 0.90%)</title><rect x="197.8" y="899.0" width="10.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="200.8" y="910.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.90%)</title><rect x="197.8" y="883.0" width="10.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="200.8" y="894.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.90%)</title><rect x="197.8" y="867.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="200.8" y="878.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.90%)</title><rect x="197.8" y="851.0" width="10.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="200.8" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (6 samples, 1.80%)</title><rect x="208.4" y="1059.0" width="21.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="211.4" y="1070.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (6 samples, 1.80%)</title><rect x="208.4" y="1043.0" width="21.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.4" y="1054.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 1.20%)</title><rect x="208.4" y="1027.0" width="14.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.4" y="1038.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.90%)</title><rect x="208.4" y="1011.0" width="10.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="211.4" y="1022.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.90%)</title><rect x="208.4" y="995.0" width="10.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="211.4" y="1006.0"></text>
</g>
<g>
<title>RequestHandler2_getValueByKey.handleRequest (3 samples, 0.90%)</title><rect x="208.4" y="979.0" width="10.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="211.4" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.getValueByKey (3 samples, 0.90%)</title><rect x="208.4" y="963.0" width="10.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="211.4" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.90%)</title><rect x="208.4" y="947.0" width="10.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="211.4" y="958.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.90%)</title><rect x="208.4" y="931.0" width="10.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="211.4" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.enqueue (1 samples, 0.30%)</title><rect x="208.4" y="915.0" width="3.6" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="211.4" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.60%)</title><rect x="212.0" y="915.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.0" y="926.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.60%)</title><rect x="212.0" y="899.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="215.0" y="910.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.60%)</title><rect x="212.0" y="883.0" width="7.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="215.0" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.60%)</title><rect x="212.0" y="867.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="215.0" y="878.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.60%)</title><rect x="212.0" y="851.0" width="7.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="215.0" y="862.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.60%)</title><rect x="212.0" y="835.0" width="7.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="215.0" y="846.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="212.0" y="819.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="215.0" y="830.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="212.0" y="803.0" width="7.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="215.0" y="814.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="215.5" y="787.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="218.5" y="798.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="215.5" y="771.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="218.5" y="782.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.30%)</title><rect x="215.5" y="755.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="218.5" y="766.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.30%)</title><rect x="215.5" y="739.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="218.5" y="750.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.30%)</title><rect x="215.5" y="723.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="218.5" y="734.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.30%)</title><rect x="215.5" y="707.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="218.5" y="718.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.30%)</title><rect x="219.1" y="1011.0" width="3.5" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="222.1" y="1022.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (2 samples, 0.60%)</title><rect x="222.6" y="1027.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="225.6" y="1038.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (2 samples, 0.60%)</title><rect x="222.6" y="1011.0" width="7.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="225.6" y="1022.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.30%)</title><rect x="222.6" y="995.0" width="3.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="225.6" y="1006.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="222.6" y="979.0" width="3.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="225.6" y="990.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.30%)</title><rect x="222.6" y="963.0" width="3.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="225.6" y="974.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.30%)</title><rect x="222.6" y="947.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="225.6" y="958.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.30%)</title><rect x="226.2" y="995.0" width="3.5" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="229.2" y="1006.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="226.2" y="979.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="229.2" y="990.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="226.2" y="963.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="229.2" y="974.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.30%)</title><rect x="226.2" y="947.0" width="3.5" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="229.2" y="958.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.30%)</title><rect x="226.2" y="931.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="229.2" y="942.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.30%)</title><rect x="226.2" y="915.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="229.2" y="926.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.30%)</title><rect x="226.2" y="899.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="229.2" y="910.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.30%)</title><rect x="226.2" y="883.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="229.2" y="894.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.30%)</title><rect x="226.2" y="867.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="229.2" y="878.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.30%)</title><rect x="226.2" y="851.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="229.2" y="862.0"></text>
</g>
<g>
<title>skb_release_head_state (1 samples, 0.30%)</title><rect x="226.2" y="835.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="229.2" y="846.0"></text>
</g>
<g>
<title>dst_release (1 samples, 0.30%)</title><rect x="226.2" y="819.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="229.2" y="830.0"></text>
</g>
<g>
<title>[worker-0 tid=5669] (71 samples, 21.32%)</title><rect x="229.7" y="1091.0" width="251.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="232.7" y="1102.0">[worker-0 tid=5669]</text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="229.7" y="1075.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="232.7" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.30%)</title><rect x="229.7" y="1059.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="232.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="229.7" y="1043.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="232.7" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="229.7" y="1027.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="232.7" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="229.7" y="1011.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="232.7" y="1022.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="229.7" y="995.0" width="3.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="232.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.30%)</title><rect x="229.7" y="979.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="232.7" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.30%)</title><rect x="229.7" y="963.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="232.7" y="974.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.30%)</title><rect x="229.7" y="947.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="232.7" y="958.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.30%)</title><rect x="229.7" y="931.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="232.7" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.30%)</title><rect x="229.7" y="915.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="232.7" y="926.0"></text>
</g>
<g>
<title>[unknown_Java] (6 samples, 1.80%)</title><rect x="233.2" y="1075.0" width="21.3" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="236.2" y="1086.0">[..</text>
</g>
<g>
<title>Interpreter (1 samples, 0.30%)</title><rect x="233.2" y="1059.0" width="3.6" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="236.2" y="1070.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 1.50%)</title><rect x="236.8" y="1059.0" width="17.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="239.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.50%)</title><rect x="236.8" y="1043.0" width="17.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="239.8" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.50%)</title><rect x="236.8" y="1027.0" width="17.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="239.8" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.50%)</title><rect x="236.8" y="1011.0" width="17.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="239.8" y="1022.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.50%)</title><rect x="236.8" y="995.0" width="17.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="239.8" y="1006.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 1.50%)</title><rect x="236.8" y="979.0" width="17.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="239.8" y="990.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 1.50%)</title><rect x="236.8" y="963.0" width="17.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="239.8" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 1.50%)</title><rect x="236.8" y="947.0" width="17.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="239.8" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.50%)</title><rect x="236.8" y="931.0" width="17.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="239.8" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (1 samples, 0.30%)</title><rect x="254.5" y="1075.0" width="3.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="257.5" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="254.5" y="1059.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="257.5" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="254.5" y="1043.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="257.5" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="254.5" y="1027.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="257.5" y="1038.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="254.5" y="1011.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="257.5" y="1022.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.30%)</title><rect x="254.5" y="995.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="257.5" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.30%)</title><rect x="254.5" y="979.0" width="3.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="257.5" y="990.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.30%)</title><rect x="254.5" y="963.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="257.5" y="974.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.30%)</title><rect x="254.5" y="947.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="257.5" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.30%)</title><rect x="254.5" y="931.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="257.5" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (62 samples, 18.62%)</title><rect x="258.0" y="1075.0" width="219.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="261.0" y="1086.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (62 samples, 18.62%)</title><rect x="258.0" y="1059.0" width="219.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="261.0" y="1070.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (62 samples, 18.62%)</title><rect x="258.0" y="1043.0" width="219.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="261.0" y="1054.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.90%)</title><rect x="258.0" y="1027.0" width="10.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="261.0" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.90%)</title><rect x="258.0" y="1011.0" width="10.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="261.0" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.60%)</title><rect x="258.0" y="995.0" width="7.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.60%)</title><rect x="258.0" y="979.0" width="7.1" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="261.0" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.60%)</title><rect x="258.0" y="963.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="261.0" y="974.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.30%)</title><rect x="258.0" y="947.0" width="3.6" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="261.0" y="958.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.30%)</title><rect x="258.0" y="931.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="261.0" y="942.0"></text>
</g>
<g>
<title>Monitor::lock_without_safepoint_check() (1 samples, 0.30%)</title><rect x="258.0" y="915.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="261.0" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="261.6" y="947.0" width="3.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="264.6" y="958.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.30%)</title><rect x="261.6" y="931.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="264.6" y="942.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.30%)</title><rect x="265.1" y="995.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="268.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="265.1" y="979.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="265.1" y="963.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="268.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="265.1" y="947.0" width="3.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="268.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.30%)</title><rect x="265.1" y="931.0" width="3.6" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="268.1" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.30%)</title><rect x="265.1" y="915.0" width="3.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="268.1" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="265.1" y="899.0" width="3.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="268.1" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="265.1" y="883.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="268.1" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="265.1" y="867.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="268.1" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="265.1" y="851.0" width="3.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="268.1" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.30%)</title><rect x="265.1" y="835.0" width="3.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="268.1" y="846.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl$$Lambda$68/1117949558.run (59 samples, 17.72%)</title><rect x="268.7" y="1027.0" width="209.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="271.7" y="1038.0">ru/mail/polis/service/basta..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.lambda$getValueByKey$1 (59 samples, 17.72%)</title><rect x="268.7" y="1011.0" width="209.0" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="271.7" y="1022.0">ru/mail/polis/service/basta..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (6 samples, 1.80%)</title><rect x="268.7" y="995.0" width="21.2" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="271.7" y="1006.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.50%)</title><rect x="272.2" y="979.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="275.2" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.50%)</title><rect x="272.2" y="963.0" width="17.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="275.2" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.50%)</title><rect x="272.2" y="947.0" width="17.7" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="275.2" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 1.50%)</title><rect x="272.2" y="931.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="275.2" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 1.50%)</title><rect x="272.2" y="915.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="275.2" y="926.0"></text>
</g>
<g>
<title>__send (5 samples, 1.50%)</title><rect x="272.2" y="899.0" width="17.7" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="275.2" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.50%)</title><rect x="272.2" y="883.0" width="17.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="275.2" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.50%)</title><rect x="272.2" y="867.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="275.2" y="878.0"></text>
</g>
<g>
<title>__x64_sys_sendto (5 samples, 1.50%)</title><rect x="272.2" y="851.0" width="17.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.2" y="862.0"></text>
</g>
<g>
<title>__sys_sendto (5 samples, 1.50%)</title><rect x="272.2" y="835.0" width="17.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="275.2" y="846.0"></text>
</g>
<g>
<title>sock_sendmsg (5 samples, 1.50%)</title><rect x="272.2" y="819.0" width="17.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="275.2" y="830.0"></text>
</g>
<g>
<title>inet6_sendmsg (5 samples, 1.50%)</title><rect x="272.2" y="803.0" width="17.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="275.2" y="814.0"></text>
</g>
<g>
<title>tcp_sendmsg (5 samples, 1.50%)</title><rect x="272.2" y="787.0" width="17.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="275.2" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (5 samples, 1.50%)</title><rect x="272.2" y="771.0" width="17.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="275.2" y="782.0"></text>
</g>
<g>
<title>tcp_push (5 samples, 1.50%)</title><rect x="272.2" y="755.0" width="17.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.2" y="766.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 1.50%)</title><rect x="272.2" y="739.0" width="17.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="275.2" y="750.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 1.50%)</title><rect x="272.2" y="723.0" width="17.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="275.2" y="734.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 1.50%)</title><rect x="272.2" y="707.0" width="17.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="275.2" y="718.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 1.50%)</title><rect x="272.2" y="691.0" width="17.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="275.2" y="702.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 1.50%)</title><rect x="272.2" y="675.0" width="17.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="275.2" y="686.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 1.50%)</title><rect x="272.2" y="659.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="275.2" y="670.0"></text>
</g>
<g>
<title>ip_output (5 samples, 1.50%)</title><rect x="272.2" y="643.0" width="17.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="275.2" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 1.50%)</title><rect x="272.2" y="627.0" width="17.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.2" y="638.0"></text>
</g>
<g>
<title>__ip_finish_output (5 samples, 1.50%)</title><rect x="272.2" y="611.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="275.2" y="622.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 1.50%)</title><rect x="272.2" y="595.0" width="17.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="275.2" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 1.50%)</title><rect x="272.2" y="579.0" width="17.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.2" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.20 (5 samples, 1.50%)</title><rect x="272.2" y="563.0" width="17.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="275.2" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 1.50%)</title><rect x="272.2" y="547.0" width="17.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="275.2" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 1.50%)</title><rect x="272.2" y="531.0" width="17.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="275.2" y="542.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 1.50%)</title><rect x="272.2" y="515.0" width="17.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="275.2" y="526.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 1.50%)</title><rect x="272.2" y="499.0" width="17.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="275.2" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 1.50%)</title><rect x="272.2" y="483.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="275.2" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 1.50%)</title><rect x="272.2" y="467.0" width="17.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="275.2" y="478.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 1.50%)</title><rect x="272.2" y="451.0" width="17.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="275.2" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 1.50%)</title><rect x="272.2" y="435.0" width="17.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="275.2" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 1.50%)</title><rect x="272.2" y="419.0" width="17.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="275.2" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 1.50%)</title><rect x="272.2" y="403.0" width="17.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="275.2" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 1.50%)</title><rect x="272.2" y="387.0" width="17.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="275.2" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 1.50%)</title><rect x="272.2" y="371.0" width="17.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="275.2" y="382.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 1.50%)</title><rect x="272.2" y="355.0" width="17.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="275.2" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 1.50%)</title><rect x="272.2" y="339.0" width="17.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="275.2" y="350.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 1.50%)</title><rect x="272.2" y="323.0" width="17.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="275.2" y="334.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 1.50%)</title><rect x="272.2" y="307.0" width="17.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="275.2" y="318.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 1.50%)</title><rect x="272.2" y="291.0" width="17.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="275.2" y="302.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 1.50%)</title><rect x="272.2" y="275.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="275.2" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.50%)</title><rect x="272.2" y="259.0" width="17.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="275.2" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.get (53 samples, 15.92%)</title><rect x="289.9" y="995.0" width="187.8" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="292.9" y="1006.0">ru/mail/polis/dao/basta1..</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.30%)</title><rect x="289.9" y="979.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="292.9" y="990.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="289.9" y="963.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="292.9" y="974.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="289.9" y="947.0" width="3.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="292.9" y="958.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="289.9" y="931.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="292.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/Record.getValue (1 samples, 0.30%)</title><rect x="293.5" y="979.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="296.5" y="990.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.asReadOnlyBuffer (1 samples, 0.30%)</title><rect x="293.5" y="963.0" width="3.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="296.5" y="974.0"></text>
</g>
<g>
<title>jlong_disjoint_arraycopy (1 samples, 0.30%)</title><rect x="293.5" y="947.0" width="3.5" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="296.5" y="958.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.iterator (51 samples, 15.32%)</title><rect x="297.0" y="979.0" width="180.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="300.0" y="990.0">ru/mail/polis/dao/basta..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (5 samples, 1.50%)</title><rect x="297.0" y="963.0" width="17.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="300.0" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (3 samples, 0.90%)</title><rect x="297.0" y="947.0" width="10.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="300.0" y="958.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (3 samples, 0.90%)</title><rect x="297.0" y="931.0" width="10.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="300.0" y="942.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (3 samples, 0.90%)</title><rect x="297.0" y="915.0" width="10.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="300.0" y="926.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::SetIterUnderDBIter(rocksdb::InternalIteratorBase&lt;rocksdb::Slice&gt;*) (1 samples, 0.30%)</title><rect x="297.0" y="899.0" width="3.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="300.0" y="910.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.30%)</title><rect x="300.6" y="899.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="303.6" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (1 samples, 0.30%)</title><rect x="304.1" y="899.0" width="3.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="307.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.30%)</title><rect x="304.1" y="883.0" width="3.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="307.1" y="894.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (2 samples, 0.60%)</title><rect x="307.7" y="947.0" width="7.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="310.7" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (2 samples, 0.60%)</title><rect x="307.7" y="931.0" width="7.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="310.7" y="942.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (2 samples, 0.60%)</title><rect x="307.7" y="915.0" width="7.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="310.7" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (2 samples, 0.60%)</title><rect x="307.7" y="899.0" width="7.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="310.7" y="910.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (2 samples, 0.60%)</title><rect x="307.7" y="883.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="310.7" y="894.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (2 samples, 0.60%)</title><rect x="307.7" y="867.0" width="7.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="310.7" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (2 samples, 0.60%)</title><rect x="307.7" y="851.0" width="7.0" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="310.7" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (2 samples, 0.60%)</title><rect x="307.7" y="835.0" width="7.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="310.7" y="846.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.60%)</title><rect x="307.7" y="819.0" width="7.0" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="310.7" y="830.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (2 samples, 0.60%)</title><rect x="307.7" y="803.0" width="7.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="310.7" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.&lt;init&gt; (44 samples, 13.21%)</title><rect x="314.7" y="963.0" width="156.0" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="317.7" y="974.0">ru/mail/polis/dao/ba..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (44 samples, 13.21%)</title><rect x="314.7" y="947.0" width="156.0" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="317.7" y="958.0">org/rocksdb/Abstract..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (44 samples, 13.21%)</title><rect x="314.7" y="931.0" width="156.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="317.7" y="942.0">org/rocksdb/RocksIte..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (26 samples, 7.81%)</title><rect x="314.7" y="915.0" width="92.2" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="317.7" y="926.0">Java_org_ro..</text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (26 samples, 7.81%)</title><rect x="314.7" y="899.0" width="92.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="317.7" y="910.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (26 samples, 7.81%)</title><rect x="314.7" y="883.0" width="92.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="317.7" y="894.0">rocksdb::Me..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (26 samples, 7.81%)</title><rect x="314.7" y="867.0" width="92.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="317.7" y="878.0">/tmp/libroc..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (26 samples, 7.81%)</title><rect x="314.7" y="851.0" width="92.2" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="317.7" y="862.0">rocksdb::In..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="314.7" y="835.0" width="3.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="317.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (25 samples, 7.51%)</title><rect x="318.3" y="835.0" width="88.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="321.3" y="846.0">rocksdb::M..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (24 samples, 7.21%)</title><rect x="318.3" y="819.0" width="85.0" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="321.3" y="830.0">rocksdb::B..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (11 samples, 3.30%)</title><rect x="318.3" y="803.0" width="39.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="321.3" y="814.0">JNI..</text>
</g>
<g>
<title>jni_CallIntMethodV (11 samples, 3.30%)</title><rect x="318.3" y="787.0" width="39.0" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="321.3" y="798.0">jni..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="318.3" y="771.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="321.3" y="782.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (10 samples, 3.00%)</title><rect x="321.8" y="771.0" width="35.5" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="324.8" y="782.0">jni..</text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.60%)</title><rect x="321.8" y="755.0" width="7.1" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="324.8" y="766.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (5 samples, 1.50%)</title><rect x="328.9" y="755.0" width="17.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="331.9" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="336.0" y="739.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="339.0" y="750.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.30%)</title><rect x="339.5" y="739.0" width="3.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="342.5" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="339.5" y="723.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="342.5" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="339.5" y="707.0" width="3.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="342.5" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="339.5" y="691.0" width="3.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="342.5" y="702.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.30%)</title><rect x="343.1" y="739.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="346.1" y="750.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.30%)</title><rect x="346.6" y="755.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="349.6" y="766.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.30%)</title><rect x="350.2" y="755.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="353.2" y="766.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="353.7" y="755.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="356.7" y="766.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (10 samples, 3.00%)</title><rect x="357.3" y="803.0" width="35.4" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="360.3" y="814.0">JNI..</text>
</g>
<g>
<title>jni_CallVoidMethodV (9 samples, 2.70%)</title><rect x="360.8" y="787.0" width="31.9" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="363.8" y="798.0">jn..</text>
</g>
<g>
<title>JNIHandles::resolve(_jobject*) (1 samples, 0.30%)</title><rect x="360.8" y="771.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="363.8" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="364.4" y="771.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="367.4" y="782.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (7 samples, 2.10%)</title><rect x="367.9" y="771.0" width="24.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="370.9" y="782.0">j..</text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 1.20%)</title><rect x="371.4" y="755.0" width="14.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="374.4" y="766.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.30%)</title><rect x="378.5" y="739.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="381.5" y="750.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.30%)</title><rect x="382.1" y="739.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="385.1" y="750.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="385.6" y="755.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="388.6" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="389.2" y="755.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="392.2" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="389.2" y="739.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="392.2" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="389.2" y="723.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="392.2" y="734.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="392.7" y="803.0" width="3.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="395.7" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="392.7" y="787.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="395.7" y="798.0"></text>
</g>
<g>
<title>pthread_mutex_unlock (2 samples, 0.60%)</title><rect x="396.2" y="803.0" width="7.1" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="399.2" y="814.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="399.8" y="787.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="402.8" y="798.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="399.8" y="771.0" width="3.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="402.8" y="782.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="399.8" y="755.0" width="3.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="402.8" y="766.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Unlock() (1 samples, 0.30%)</title><rect x="403.3" y="819.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="406.3" y="830.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="406.9" y="915.0" width="3.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="409.9" y="926.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="406.9" y="899.0" width="3.5" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="409.9" y="910.0"></text>
</g>
<g>
<title>std::string::_Rep::_M_clone(std::allocator&lt;char&gt; const&amp;, unsigned long) (1 samples, 0.30%)</title><rect x="406.9" y="883.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="409.9" y="894.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.60%)</title><rect x="410.4" y="915.0" width="7.1" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="413.4" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.30%)</title><rect x="417.5" y="915.0" width="3.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="420.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (14 samples, 4.20%)</title><rect x="421.1" y="915.0" width="49.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.1" y="926.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (14 samples, 4.20%)</title><rect x="421.1" y="899.0" width="49.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.1" y="910.0">ru/ma..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.30%)</title><rect x="421.1" y="883.0" width="3.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="424.1" y="894.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.30%)</title><rect x="421.1" y="867.0" width="3.5" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="424.1" y="878.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (13 samples, 3.90%)</title><rect x="424.6" y="883.0" width="46.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="427.6" y="894.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (4 samples, 1.20%)</title><rect x="424.6" y="867.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="427.6" y="878.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (9 samples, 2.70%)</title><rect x="438.8" y="867.0" width="31.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="441.8" y="878.0">or..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (9 samples, 2.70%)</title><rect x="438.8" y="851.0" width="31.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="441.8" y="862.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (9 samples, 2.70%)</title><rect x="438.8" y="835.0" width="31.9" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="441.8" y="846.0">Ja..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="438.8" y="819.0" width="3.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="441.8" y="830.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="442.3" y="819.0" width="3.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="445.3" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="442.3" y="803.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="445.3" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="442.3" y="787.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="445.3" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="442.3" y="771.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="445.3" y="782.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 1.50%)</title><rect x="445.9" y="819.0" width="17.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="448.9" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="445.9" y="803.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="448.9" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 1.20%)</title><rect x="449.4" y="803.0" width="14.2" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="452.4" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 1.20%)</title><rect x="449.4" y="787.0" width="14.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="452.4" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (4 samples, 1.20%)</title><rect x="449.4" y="771.0" width="14.2" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="452.4" y="782.0"></text>
</g>
<g>
<title>ThreadHeapSampler::enabled() (1 samples, 0.30%)</title><rect x="449.4" y="755.0" width="3.5" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="452.4" y="766.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (3 samples, 0.90%)</title><rect x="452.9" y="755.0" width="10.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="455.9" y="766.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.60%)</title><rect x="463.6" y="819.0" width="7.1" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="466.6" y="830.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.30%)</title><rect x="463.6" y="803.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="466.6" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="467.1" y="803.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="470.1" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.close (2 samples, 0.60%)</title><rect x="470.7" y="963.0" width="7.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="473.7" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (2 samples, 0.60%)</title><rect x="470.7" y="947.0" width="7.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="473.7" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (2 samples, 0.60%)</title><rect x="470.7" y="931.0" width="7.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="473.7" y="942.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (2 samples, 0.60%)</title><rect x="470.7" y="915.0" width="7.0" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="473.7" y="926.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (2 samples, 0.60%)</title><rect x="470.7" y="899.0" width="7.0" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="473.7" y="910.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (2 samples, 0.60%)</title><rect x="470.7" y="883.0" width="7.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="473.7" y="894.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.30%)</title><rect x="470.7" y="867.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="473.7" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="470.7" y="851.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="473.7" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="470.7" y="835.0" width="3.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="473.7" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="470.7" y="819.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="473.7" y="830.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;unsigned long, unsigned long, std::_Identity&lt;unsigned long&gt;, std::less&lt;unsigned long&gt;, std::allocator&lt;unsigned long&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;unsigned long&gt;*) (1 samples, 0.30%)</title><rect x="474.2" y="867.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="477.2" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="474.2" y="851.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="477.2" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="474.2" y="835.0" width="3.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="477.2" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="474.2" y="819.0" width="3.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="477.2" y="830.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.30%)</title><rect x="477.7" y="1075.0" width="3.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="480.7" y="1086.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="477.7" y="1059.0" width="3.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="480.7" y="1070.0"></text>
</g>
<g>
<title>[worker-1 tid=5670] (66 samples, 19.82%)</title><rect x="481.3" y="1091.0" width="233.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="484.3" y="1102.0">[worker-1 tid=5670]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="481.3" y="1075.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="484.3" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.30%)</title><rect x="481.3" y="1059.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="484.3" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.30%)</title><rect x="481.3" y="1043.0" width="3.5" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="484.3" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.30%)</title><rect x="481.3" y="1027.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="484.3" y="1038.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.30%)</title><rect x="481.3" y="1011.0" width="3.5" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="484.3" y="1022.0"></text>
</g>
<g>
<title>[unknown_Java] (2 samples, 0.60%)</title><rect x="484.8" y="1075.0" width="7.1" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="487.8" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.60%)</title><rect x="484.8" y="1059.0" width="7.1" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="487.8" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="484.8" y="1043.0" width="7.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="487.8" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="484.8" y="1027.0" width="7.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="487.8" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.60%)</title><rect x="484.8" y="1011.0" width="7.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="487.8" y="1022.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.60%)</title><rect x="484.8" y="995.0" width="7.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="487.8" y="1006.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.60%)</title><rect x="484.8" y="979.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="487.8" y="990.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.60%)</title><rect x="484.8" y="963.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="487.8" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.60%)</title><rect x="484.8" y="947.0" width="7.1" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="487.8" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.60%)</title><rect x="484.8" y="931.0" width="7.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="487.8" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (62 samples, 18.62%)</title><rect x="491.9" y="1075.0" width="219.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="494.9" y="1086.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (62 samples, 18.62%)</title><rect x="491.9" y="1059.0" width="219.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="494.9" y="1070.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (62 samples, 18.62%)</title><rect x="491.9" y="1043.0" width="219.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="494.9" y="1054.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (8 samples, 2.40%)</title><rect x="491.9" y="1027.0" width="28.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.9" y="1038.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (8 samples, 2.40%)</title><rect x="491.9" y="1011.0" width="28.4" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="494.9" y="1022.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 2.40%)</title><rect x="491.9" y="995.0" width="28.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="494.9" y="1006.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (8 samples, 2.40%)</title><rect x="491.9" y="979.0" width="28.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="494.9" y="990.0">ja..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (8 samples, 2.40%)</title><rect x="491.9" y="963.0" width="28.4" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="494.9" y="974.0">jd..</text>
</g>
<g>
<title>[unknown] (8 samples, 2.40%)</title><rect x="491.9" y="947.0" width="28.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="494.9" y="958.0">[u..</text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (8 samples, 2.40%)</title><rect x="491.9" y="931.0" width="28.4" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="494.9" y="942.0">pt..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 2.40%)</title><rect x="491.9" y="915.0" width="28.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="494.9" y="926.0">en..</text>
</g>
<g>
<title>do_syscall_64 (8 samples, 2.40%)</title><rect x="491.9" y="899.0" width="28.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="494.9" y="910.0">do..</text>
</g>
<g>
<title>__x64_sys_futex (8 samples, 2.40%)</title><rect x="491.9" y="883.0" width="28.4" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="494.9" y="894.0">__..</text>
</g>
<g>
<title>do_futex (8 samples, 2.40%)</title><rect x="491.9" y="867.0" width="28.4" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="494.9" y="878.0">do..</text>
</g>
<g>
<title>futex_wait (8 samples, 2.40%)</title><rect x="491.9" y="851.0" width="28.4" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="494.9" y="862.0">fu..</text>
</g>
<g>
<title>futex_wait_queue_me (7 samples, 2.10%)</title><rect x="495.5" y="835.0" width="24.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="498.5" y="846.0">f..</text>
</g>
<g>
<title>schedule (7 samples, 2.10%)</title><rect x="495.5" y="819.0" width="24.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="498.5" y="830.0">s..</text>
</g>
<g>
<title>__sched_text_start (7 samples, 2.10%)</title><rect x="495.5" y="803.0" width="24.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="498.5" y="814.0">_..</text>
</g>
<g>
<title>finish_task_switch (7 samples, 2.10%)</title><rect x="495.5" y="787.0" width="24.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="498.5" y="798.0">f..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl$$Lambda$68/1117949558.run (54 samples, 16.22%)</title><rect x="520.3" y="1027.0" width="191.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="523.3" y="1038.0">ru/mail/polis/service/bas..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.lambda$getValueByKey$1 (54 samples, 16.22%)</title><rect x="520.3" y="1011.0" width="191.3" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="523.3" y="1022.0">ru/mail/polis/service/bas..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 1.50%)</title><rect x="520.3" y="995.0" width="17.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="523.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.50%)</title><rect x="520.3" y="979.0" width="17.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="523.3" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.50%)</title><rect x="520.3" y="963.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="523.3" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.50%)</title><rect x="520.3" y="947.0" width="17.7" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="523.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 1.50%)</title><rect x="520.3" y="931.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="523.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 1.50%)</title><rect x="520.3" y="915.0" width="17.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="523.3" y="926.0"></text>
</g>
<g>
<title>__send (5 samples, 1.50%)</title><rect x="520.3" y="899.0" width="17.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="523.3" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.20%)</title><rect x="523.8" y="883.0" width="14.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="526.8" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.20%)</title><rect x="523.8" y="867.0" width="14.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="526.8" y="878.0"></text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.90%)</title><rect x="523.8" y="851.0" width="10.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="526.8" y="862.0"></text>
</g>
<g>
<title>__sys_sendto (3 samples, 0.90%)</title><rect x="523.8" y="835.0" width="10.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="526.8" y="846.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.90%)</title><rect x="523.8" y="819.0" width="10.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="526.8" y="830.0"></text>
</g>
<g>
<title>inet6_sendmsg (3 samples, 0.90%)</title><rect x="523.8" y="803.0" width="10.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="526.8" y="814.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.90%)</title><rect x="523.8" y="787.0" width="10.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="526.8" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3 samples, 0.90%)</title><rect x="523.8" y="771.0" width="10.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="526.8" y="782.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.90%)</title><rect x="523.8" y="755.0" width="10.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="526.8" y="766.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.90%)</title><rect x="523.8" y="739.0" width="10.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="526.8" y="750.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.90%)</title><rect x="523.8" y="723.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="526.8" y="734.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.90%)</title><rect x="523.8" y="707.0" width="10.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="526.8" y="718.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.90%)</title><rect x="523.8" y="691.0" width="10.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="526.8" y="702.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.90%)</title><rect x="523.8" y="675.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="526.8" y="686.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.90%)</title><rect x="523.8" y="659.0" width="10.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="526.8" y="670.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.90%)</title><rect x="523.8" y="643.0" width="10.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="526.8" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.90%)</title><rect x="523.8" y="627.0" width="10.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="526.8" y="638.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.90%)</title><rect x="523.8" y="611.0" width="10.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="526.8" y="622.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.90%)</title><rect x="523.8" y="595.0" width="10.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="526.8" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.60%)</title><rect x="527.4" y="579.0" width="7.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="530.4" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.20 (2 samples, 0.60%)</title><rect x="527.4" y="563.0" width="7.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="530.4" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.60%)</title><rect x="527.4" y="547.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="530.4" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.60%)</title><rect x="527.4" y="531.0" width="7.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="530.4" y="542.0"></text>
</g>
<g>
<title>net_rx_action (2 samples, 0.60%)</title><rect x="527.4" y="515.0" width="7.0" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="530.4" y="526.0"></text>
</g>
<g>
<title>process_backlog (2 samples, 0.60%)</title><rect x="527.4" y="499.0" width="7.0" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="530.4" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb (2 samples, 0.60%)</title><rect x="527.4" y="483.0" width="7.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="530.4" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (2 samples, 0.60%)</title><rect x="527.4" y="467.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="530.4" y="478.0"></text>
</g>
<g>
<title>ip_rcv (2 samples, 0.60%)</title><rect x="527.4" y="451.0" width="7.0" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="530.4" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (2 samples, 0.60%)</title><rect x="527.4" y="435.0" width="7.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="530.4" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (2 samples, 0.60%)</title><rect x="527.4" y="419.0" width="7.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="530.4" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (2 samples, 0.60%)</title><rect x="527.4" y="403.0" width="7.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="530.4" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (2 samples, 0.60%)</title><rect x="527.4" y="387.0" width="7.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="530.4" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (2 samples, 0.60%)</title><rect x="527.4" y="371.0" width="7.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="530.4" y="382.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (2 samples, 0.60%)</title><rect x="527.4" y="355.0" width="7.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="530.4" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.60%)</title><rect x="527.4" y="339.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="530.4" y="350.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.60%)</title><rect x="527.4" y="323.0" width="7.0" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="530.4" y="334.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.60%)</title><rect x="527.4" y="307.0" width="7.0" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="530.4" y="318.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.60%)</title><rect x="527.4" y="291.0" width="7.0" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="530.4" y="302.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.60%)</title><rect x="527.4" y="275.0" width="7.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="530.4" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.60%)</title><rect x="527.4" y="259.0" width="7.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="530.4" y="270.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="534.4" y="851.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="537.4" y="862.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.30%)</title><rect x="534.4" y="835.0" width="3.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="537.4" y="846.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.30%)</title><rect x="534.4" y="819.0" width="3.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="537.4" y="830.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.30%)</title><rect x="534.4" y="803.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="537.4" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.get (49 samples, 14.71%)</title><rect x="538.0" y="995.0" width="173.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="541.0" y="1006.0">ru/mail/polis/dao/bast..</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (2 samples, 0.60%)</title><rect x="541.5" y="979.0" width="7.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="544.5" y="990.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (2 samples, 0.60%)</title><rect x="541.5" y="963.0" width="7.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="544.5" y="974.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) (2 samples, 0.60%)</title><rect x="541.5" y="947.0" width="7.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="544.5" y="958.0"></text>
</g>
<g>
<title>ObjectMonitor::TrySpin(Thread*) [clone .part.71] (2 samples, 0.60%)</title><rect x="541.5" y="931.0" width="7.1" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="544.5" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.iterator (41 samples, 12.31%)</title><rect x="548.6" y="979.0" width="145.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="551.6" y="990.0">ru/mail/polis/dao/..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (5 samples, 1.50%)</title><rect x="548.6" y="963.0" width="17.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="551.6" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (3 samples, 0.90%)</title><rect x="548.6" y="947.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="551.6" y="958.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (3 samples, 0.90%)</title><rect x="548.6" y="931.0" width="10.6" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="551.6" y="942.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (3 samples, 0.90%)</title><rect x="548.6" y="915.0" width="10.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="551.6" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (3 samples, 0.90%)</title><rect x="548.6" y="899.0" width="10.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="551.6" y="910.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (3 samples, 0.90%)</title><rect x="548.6" y="883.0" width="10.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="551.6" y="894.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.60%)</title><rect x="552.2" y="867.0" width="7.0" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="555.2" y="878.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.60%)</title><rect x="552.2" y="851.0" width="7.0" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="555.2" y="862.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.60%)</title><rect x="552.2" y="835.0" width="7.0" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="555.2" y="846.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.&lt;init&gt; (2 samples, 0.60%)</title><rect x="559.2" y="947.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.2" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.&lt;init&gt; (2 samples, 0.60%)</title><rect x="559.2" y="931.0" width="7.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="562.2" y="942.0"></text>
</g>
<g>
<title>org/rocksdb/RocksObject.&lt;init&gt; (2 samples, 0.60%)</title><rect x="559.2" y="915.0" width="7.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="562.2" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.&lt;init&gt; (2 samples, 0.60%)</title><rect x="559.2" y="899.0" width="7.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="562.2" y="910.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractNativeReference.&lt;init&gt; (1 samples, 0.30%)</title><rect x="562.8" y="883.0" width="3.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="565.8" y="894.0"></text>
</g>
<g>
<title>java/lang/Object.&lt;init&gt; (1 samples, 0.30%)</title><rect x="562.8" y="867.0" width="3.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="565.8" y="878.0"></text>
</g>
<g>
<title>OptoRuntime::register_finalizer(oopDesc*, JavaThread*) (1 samples, 0.30%)</title><rect x="562.8" y="851.0" width="3.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="565.8" y="862.0"></text>
</g>
<g>
<title>InstanceKlass::register_finalizer(instanceOopDesc*, Thread*) (1 samples, 0.30%)</title><rect x="562.8" y="835.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="565.8" y="846.0"></text>
</g>
<g>
<title>InstanceKlass::method_with_idnum(int) (1 samples, 0.30%)</title><rect x="562.8" y="819.0" width="3.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="565.8" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.&lt;init&gt; (35 samples, 10.51%)</title><rect x="566.3" y="963.0" width="124.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="569.3" y="974.0">ru/mail/polis/d..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (35 samples, 10.51%)</title><rect x="566.3" y="947.0" width="124.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="569.3" y="958.0">org/rocksdb/Abs..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (35 samples, 10.51%)</title><rect x="566.3" y="931.0" width="124.1" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="569.3" y="942.0">org/rocksdb/Roc..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (25 samples, 7.51%)</title><rect x="566.3" y="915.0" width="88.6" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="569.3" y="926.0">Java_org_r..</text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (25 samples, 7.51%)</title><rect x="566.3" y="899.0" width="88.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="569.3" y="910.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (24 samples, 7.21%)</title><rect x="566.3" y="883.0" width="85.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="569.3" y="894.0">rocksdb::M..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (24 samples, 7.21%)</title><rect x="566.3" y="867.0" width="85.1" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="569.3" y="878.0">/tmp/libro..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (24 samples, 7.21%)</title><rect x="566.3" y="851.0" width="85.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="569.3" y="862.0">rocksdb::I..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="566.3" y="835.0" width="3.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="569.3" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (23 samples, 6.91%)</title><rect x="569.9" y="835.0" width="81.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="572.9" y="846.0">rocksdb::..</text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.30%)</title><rect x="573.4" y="819.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="576.4" y="830.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="577.0" y="819.0" width="3.5" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="580.0" y="830.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="580.5" y="819.0" width="3.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="583.5" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="580.5" y="803.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="583.5" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="580.5" y="787.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="583.5" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="580.5" y="771.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="583.5" y="782.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (19 samples, 5.71%)</title><rect x="584.1" y="819.0" width="67.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="587.1" y="830.0">rocksdb..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (4 samples, 1.20%)</title><rect x="587.6" y="803.0" width="14.2" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="590.6" y="814.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (4 samples, 1.20%)</title><rect x="587.6" y="787.0" width="14.2" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="590.6" y="798.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 1.20%)</title><rect x="587.6" y="771.0" width="14.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="590.6" y="782.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="598.2" y="755.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="601.2" y="766.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (11 samples, 3.30%)</title><rect x="601.8" y="803.0" width="39.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="604.8" y="814.0">JNI..</text>
</g>
<g>
<title>jni_CallVoidMethodV (11 samples, 3.30%)</title><rect x="601.8" y="787.0" width="39.0" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="604.8" y="798.0">jni..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="605.3" y="771.0" width="3.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="608.3" y="782.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.30%)</title><rect x="608.9" y="771.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="611.9" y="782.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.30%)</title><rect x="612.4" y="771.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="615.4" y="782.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.30%)</title><rect x="615.9" y="771.0" width="3.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="618.9" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="619.5" y="771.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="622.5" y="782.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (5 samples, 1.50%)</title><rect x="623.0" y="771.0" width="17.8" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="626.0" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.60%)</title><rect x="630.1" y="755.0" width="7.1" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="633.1" y="766.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.30%)</title><rect x="630.1" y="739.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="633.1" y="750.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.30%)</title><rect x="633.7" y="739.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="636.7" y="750.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="637.2" y="755.0" width="3.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="640.2" y="766.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.30%)</title><rect x="640.8" y="803.0" width="3.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="643.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.60%)</title><rect x="644.3" y="803.0" width="7.1" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="647.3" y="814.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (2 samples, 0.60%)</title><rect x="644.3" y="787.0" width="7.1" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="647.3" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="651.4" y="883.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="654.4" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="651.4" y="867.0" width="3.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="654.4" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="651.4" y="851.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="654.4" y="862.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.30%)</title><rect x="654.9" y="915.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="657.9" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (8 samples, 2.40%)</title><rect x="658.5" y="915.0" width="28.3" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="661.5" y="926.0">ru..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (8 samples, 2.40%)</title><rect x="658.5" y="899.0" width="28.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="661.5" y="910.0">ru..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (8 samples, 2.40%)</title><rect x="658.5" y="883.0" width="28.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="661.5" y="894.0">or..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (8 samples, 2.40%)</title><rect x="658.5" y="867.0" width="28.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="661.5" y="878.0">or..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (8 samples, 2.40%)</title><rect x="658.5" y="851.0" width="28.3" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="661.5" y="862.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (6 samples, 1.80%)</title><rect x="658.5" y="835.0" width="21.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="661.5" y="846.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="658.5" y="819.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="661.5" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="658.5" y="803.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="661.5" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="658.5" y="787.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="661.5" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="658.5" y="771.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="661.5" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="662.0" y="819.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="665.0" y="830.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.90%)</title><rect x="665.6" y="819.0" width="10.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="668.6" y="830.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.30%)</title><rect x="665.6" y="803.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="668.6" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.60%)</title><rect x="669.1" y="803.0" width="7.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="672.1" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.60%)</title><rect x="669.1" y="787.0" width="7.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="672.1" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.30%)</title><rect x="669.1" y="771.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="672.1" y="782.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (1 samples, 0.30%)</title><rect x="669.1" y="755.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="672.1" y="766.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="672.6" y="771.0" width="3.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="675.6" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="676.2" y="819.0" width="3.5" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="679.2" y="830.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="676.2" y="803.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="679.2" y="814.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.60%)</title><rect x="679.7" y="835.0" width="7.1" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="682.7" y="846.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) [clone .plt] (1 samples, 0.30%)</title><rect x="686.8" y="915.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="689.8" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="686.8" y="899.0" width="3.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="689.8" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="686.8" y="883.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="689.8" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="686.8" y="867.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="689.8" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.close (1 samples, 0.30%)</title><rect x="690.4" y="963.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="693.4" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (1 samples, 0.30%)</title><rect x="690.4" y="947.0" width="3.5" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="693.4" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (1 samples, 0.30%)</title><rect x="690.4" y="931.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="693.4" y="942.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (1 samples, 0.30%)</title><rect x="690.4" y="915.0" width="3.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="693.4" y="926.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (1 samples, 0.30%)</title><rect x="690.4" y="899.0" width="3.5" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="693.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (1 samples, 0.30%)</title><rect x="690.4" y="883.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="693.4" y="894.0"></text>
</g>
<g>
<title>std::_Rb_tree&lt;rocksdb::TruncatedRangeDelIterator*, rocksdb::TruncatedRangeDelIterator*, std::_Identity&lt;rocksdb::TruncatedRangeDelIterator*&gt;, rocksdb::SeqMaxComparator, std::allocator&lt;rocksdb::TruncatedRangeDelIterator*&gt; &gt;::_M_erase(std::_Rb_tree_node&lt;rocksdb::TruncatedRangeDelIterator*&gt;*) (1 samples, 0.30%)</title><rect x="690.4" y="867.0" width="3.5" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="693.4" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.next (5 samples, 1.50%)</title><rect x="693.9" y="979.0" width="17.7" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="696.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.next (5 samples, 1.50%)</title><rect x="693.9" y="963.0" width="17.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="696.9" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (5 samples, 1.50%)</title><rect x="693.9" y="947.0" width="17.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.9" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (5 samples, 1.50%)</title><rect x="693.9" y="931.0" width="17.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="696.9" y="942.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.30%)</title><rect x="693.9" y="915.0" width="3.5" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="696.9" y="926.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (2 samples, 0.60%)</title><rect x="697.4" y="915.0" width="7.1" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="700.4" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (2 samples, 0.60%)</title><rect x="697.4" y="899.0" width="7.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="700.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.60%)</title><rect x="697.4" y="883.0" width="7.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="700.4" y="894.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.30%)</title><rect x="697.4" y="867.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="700.4" y="878.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.30%)</title><rect x="697.4" y="851.0" width="3.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="700.4" y="862.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.30%)</title><rect x="697.4" y="835.0" width="3.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="700.4" y="846.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="697.4" y="819.0" width="3.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="700.4" y="830.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.30%)</title><rect x="697.4" y="803.0" width="3.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="700.4" y="814.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.30%)</title><rect x="701.0" y="867.0" width="3.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="704.0" y="878.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Valid() const (1 samples, 0.30%)</title><rect x="704.5" y="915.0" width="3.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="707.5" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (1 samples, 0.30%)</title><rect x="708.1" y="915.0" width="3.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="711.1" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (1 samples, 0.30%)</title><rect x="708.1" y="899.0" width="3.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="711.1" y="910.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (1 samples, 0.30%)</title><rect x="708.1" y="883.0" width="3.5" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="711.1" y="894.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.30%)</title><rect x="708.1" y="867.0" width="3.5" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="711.1" y="878.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (1 samples, 0.30%)</title><rect x="708.1" y="851.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="711.1" y="862.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (1 samples, 0.30%)</title><rect x="708.1" y="835.0" width="3.5" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="711.1" y="846.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.30%)</title><rect x="708.1" y="819.0" width="3.5" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="711.1" y="830.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.30%)</title><rect x="711.6" y="1075.0" width="3.6" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="714.6" y="1086.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="711.6" y="1059.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.6" y="1070.0"></text>
</g>
<g>
<title>java/lang/ref/FinalReference.&lt;init&gt; (1 samples, 0.30%)</title><rect x="711.6" y="1043.0" width="3.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="714.6" y="1054.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.30%)</title><rect x="711.6" y="1027.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="714.6" y="1038.0"></text>
</g>
<g>
<title>[worker-2 tid=5671] (65 samples, 19.52%)</title><rect x="715.2" y="1091.0" width="230.3" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="718.2" y="1102.0">[worker-2 tid=5671]</text>
</g>
<g>
<title>Runtime1::monitorenter(JavaThread*, oopDesc*, BasicObjectLock*) (1 samples, 0.30%)</title><rect x="715.2" y="1075.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="718.2" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.30%)</title><rect x="715.2" y="1059.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="718.2" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.30%)</title><rect x="715.2" y="1043.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="718.2" y="1054.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="715.2" y="1027.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="718.2" y="1038.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="715.2" y="1011.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="718.2" y="1022.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="715.2" y="995.0" width="3.5" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="718.2" y="1006.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.30%)</title><rect x="718.7" y="1075.0" width="3.6" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="721.7" y="1086.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.30%)</title><rect x="718.7" y="1059.0" width="3.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="721.7" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="718.7" y="1043.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="721.7" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="718.7" y="1027.0" width="3.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="721.7" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="718.7" y="1011.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="721.7" y="1022.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="718.7" y="995.0" width="3.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="721.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.30%)</title><rect x="718.7" y="979.0" width="3.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="721.7" y="990.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.30%)</title><rect x="718.7" y="963.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="721.7" y="974.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.30%)</title><rect x="718.7" y="947.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="721.7" y="958.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.30%)</title><rect x="718.7" y="931.0" width="3.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="721.7" y="942.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.30%)</title><rect x="718.7" y="915.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="721.7" y="926.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (3 samples, 0.90%)</title><rect x="722.3" y="1075.0" width="10.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="725.3" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.90%)</title><rect x="722.3" y="1059.0" width="10.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="725.3" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.90%)</title><rect x="722.3" y="1043.0" width="10.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="725.3" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.90%)</title><rect x="722.3" y="1027.0" width="10.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="725.3" y="1038.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.90%)</title><rect x="722.3" y="1011.0" width="10.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="725.3" y="1022.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.90%)</title><rect x="722.3" y="995.0" width="10.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="725.3" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.90%)</title><rect x="722.3" y="979.0" width="10.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="725.3" y="990.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.90%)</title><rect x="722.3" y="963.0" width="10.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="725.3" y="974.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.90%)</title><rect x="722.3" y="947.0" width="10.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="725.3" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.90%)</title><rect x="722.3" y="931.0" width="10.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="725.3" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (60 samples, 18.02%)</title><rect x="732.9" y="1075.0" width="212.6" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="735.9" y="1086.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (60 samples, 18.02%)</title><rect x="732.9" y="1059.0" width="212.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.9" y="1070.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (60 samples, 18.02%)</title><rect x="732.9" y="1043.0" width="212.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.9" y="1054.0">java/util/concurrent/ThreadP..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (3 samples, 0.90%)</title><rect x="732.9" y="1027.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="735.9" y="1038.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (3 samples, 0.90%)</title><rect x="732.9" y="1011.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="735.9" y="1022.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (2 samples, 0.60%)</title><rect x="732.9" y="995.0" width="7.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="735.9" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (2 samples, 0.60%)</title><rect x="732.9" y="979.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="735.9" y="990.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (2 samples, 0.60%)</title><rect x="732.9" y="963.0" width="7.1" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="735.9" y="974.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.60%)</title><rect x="732.9" y="947.0" width="7.1" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="735.9" y="958.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.60%)</title><rect x="732.9" y="931.0" width="7.1" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="735.9" y="942.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="732.9" y="915.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="735.9" y="926.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="732.9" y="899.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="735.9" y="910.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.60%)</title><rect x="732.9" y="883.0" width="7.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.9" y="894.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.60%)</title><rect x="732.9" y="867.0" width="7.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.9" y="878.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.60%)</title><rect x="732.9" y="851.0" width="7.1" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="735.9" y="862.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.60%)</title><rect x="732.9" y="835.0" width="7.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="735.9" y="846.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.60%)</title><rect x="732.9" y="819.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="735.9" y="830.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.60%)</title><rect x="732.9" y="803.0" width="7.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="735.9" y="814.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.60%)</title><rect x="732.9" y="787.0" width="7.1" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="735.9" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.30%)</title><rect x="740.0" y="995.0" width="3.5" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="743.0" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.30%)</title><rect x="740.0" y="979.0" width="3.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="743.0" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.30%)</title><rect x="740.0" y="963.0" width="3.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="743.0" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.30%)</title><rect x="740.0" y="947.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="743.0" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.30%)</title><rect x="740.0" y="931.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="743.0" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.30%)</title><rect x="740.0" y="915.0" width="3.5" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="743.0" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="740.0" y="899.0" width="3.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="743.0" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="740.0" y="883.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="743.0" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.30%)</title><rect x="740.0" y="867.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="743.0" y="878.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.30%)</title><rect x="740.0" y="851.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="743.0" y="862.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.30%)</title><rect x="740.0" y="835.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="743.0" y="846.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.30%)</title><rect x="740.0" y="819.0" width="3.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="743.0" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.30%)</title><rect x="740.0" y="803.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="743.0" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.30%)</title><rect x="740.0" y="787.0" width="3.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="743.0" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl$$Lambda$68/1117949558.run (57 samples, 17.12%)</title><rect x="743.5" y="1027.0" width="202.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.5" y="1038.0">ru/mail/polis/service/bast..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.lambda$getValueByKey$1 (57 samples, 17.12%)</title><rect x="743.5" y="1011.0" width="202.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="746.5" y="1022.0">ru/mail/polis/service/bast..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (3 samples, 0.90%)</title><rect x="743.5" y="995.0" width="10.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="746.5" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (3 samples, 0.90%)</title><rect x="743.5" y="979.0" width="10.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="746.5" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.90%)</title><rect x="743.5" y="963.0" width="10.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="746.5" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (3 samples, 0.90%)</title><rect x="743.5" y="947.0" width="10.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="746.5" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (3 samples, 0.90%)</title><rect x="743.5" y="931.0" width="10.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="746.5" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (3 samples, 0.90%)</title><rect x="743.5" y="915.0" width="10.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="746.5" y="926.0"></text>
</g>
<g>
<title>__send (3 samples, 0.90%)</title><rect x="743.5" y="899.0" width="10.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="746.5" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.90%)</title><rect x="743.5" y="883.0" width="10.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="746.5" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.90%)</title><rect x="743.5" y="867.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="746.5" y="878.0"></text>
</g>
<g>
<title>__x64_sys_sendto (3 samples, 0.90%)</title><rect x="743.5" y="851.0" width="10.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="746.5" y="862.0"></text>
</g>
<g>
<title>__sys_sendto (3 samples, 0.90%)</title><rect x="743.5" y="835.0" width="10.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="746.5" y="846.0"></text>
</g>
<g>
<title>sock_sendmsg (3 samples, 0.90%)</title><rect x="743.5" y="819.0" width="10.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="746.5" y="830.0"></text>
</g>
<g>
<title>inet6_sendmsg (3 samples, 0.90%)</title><rect x="743.5" y="803.0" width="10.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="746.5" y="814.0"></text>
</g>
<g>
<title>tcp_sendmsg (3 samples, 0.90%)</title><rect x="743.5" y="787.0" width="10.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="746.5" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (3 samples, 0.90%)</title><rect x="743.5" y="771.0" width="10.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="746.5" y="782.0"></text>
</g>
<g>
<title>tcp_push (3 samples, 0.90%)</title><rect x="743.5" y="755.0" width="10.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="746.5" y="766.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (3 samples, 0.90%)</title><rect x="743.5" y="739.0" width="10.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="746.5" y="750.0"></text>
</g>
<g>
<title>tcp_write_xmit (3 samples, 0.90%)</title><rect x="743.5" y="723.0" width="10.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="746.5" y="734.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (3 samples, 0.90%)</title><rect x="743.5" y="707.0" width="10.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="746.5" y="718.0"></text>
</g>
<g>
<title>ip_queue_xmit (3 samples, 0.90%)</title><rect x="743.5" y="691.0" width="10.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="746.5" y="702.0"></text>
</g>
<g>
<title>__ip_queue_xmit (3 samples, 0.90%)</title><rect x="743.5" y="675.0" width="10.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="746.5" y="686.0"></text>
</g>
<g>
<title>ip_local_out (3 samples, 0.90%)</title><rect x="743.5" y="659.0" width="10.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="746.5" y="670.0"></text>
</g>
<g>
<title>ip_output (3 samples, 0.90%)</title><rect x="743.5" y="643.0" width="10.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="746.5" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (3 samples, 0.90%)</title><rect x="743.5" y="627.0" width="10.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="746.5" y="638.0"></text>
</g>
<g>
<title>__ip_finish_output (3 samples, 0.90%)</title><rect x="743.5" y="611.0" width="10.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="746.5" y="622.0"></text>
</g>
<g>
<title>ip_finish_output2 (3 samples, 0.90%)</title><rect x="743.5" y="595.0" width="10.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="746.5" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (3 samples, 0.90%)</title><rect x="743.5" y="579.0" width="10.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="746.5" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.20 (3 samples, 0.90%)</title><rect x="743.5" y="563.0" width="10.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="746.5" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (3 samples, 0.90%)</title><rect x="743.5" y="547.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="746.5" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (3 samples, 0.90%)</title><rect x="743.5" y="531.0" width="10.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="746.5" y="542.0"></text>
</g>
<g>
<title>net_rx_action (3 samples, 0.90%)</title><rect x="743.5" y="515.0" width="10.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="746.5" y="526.0"></text>
</g>
<g>
<title>process_backlog (3 samples, 0.90%)</title><rect x="743.5" y="499.0" width="10.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="746.5" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb (3 samples, 0.90%)</title><rect x="743.5" y="483.0" width="10.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="746.5" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (3 samples, 0.90%)</title><rect x="743.5" y="467.0" width="10.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="746.5" y="478.0"></text>
</g>
<g>
<title>ip_rcv (3 samples, 0.90%)</title><rect x="743.5" y="451.0" width="10.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="746.5" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (3 samples, 0.90%)</title><rect x="743.5" y="435.0" width="10.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="746.5" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (3 samples, 0.90%)</title><rect x="743.5" y="419.0" width="10.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="746.5" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (3 samples, 0.90%)</title><rect x="743.5" y="403.0" width="10.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="746.5" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (3 samples, 0.90%)</title><rect x="743.5" y="387.0" width="10.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="746.5" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (3 samples, 0.90%)</title><rect x="743.5" y="371.0" width="10.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="746.5" y="382.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.90%)</title><rect x="743.5" y="355.0" width="10.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="746.5" y="366.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.30%)</title><rect x="743.5" y="339.0" width="3.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="746.5" y="350.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.60%)</title><rect x="747.1" y="339.0" width="7.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="750.1" y="350.0"></text>
</g>
<g>
<title>tcp_data_ready (2 samples, 0.60%)</title><rect x="747.1" y="323.0" width="7.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="750.1" y="334.0"></text>
</g>
<g>
<title>sock_def_readable (2 samples, 0.60%)</title><rect x="747.1" y="307.0" width="7.0" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="750.1" y="318.0"></text>
</g>
<g>
<title>__wake_up_sync_key (2 samples, 0.60%)</title><rect x="747.1" y="291.0" width="7.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="750.1" y="302.0"></text>
</g>
<g>
<title>__wake_up_common_lock (2 samples, 0.60%)</title><rect x="747.1" y="275.0" width="7.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="750.1" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.60%)</title><rect x="747.1" y="259.0" width="7.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="750.1" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.get (54 samples, 16.22%)</title><rect x="754.1" y="995.0" width="191.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="757.1" y="1006.0">ru/mail/polis/dao/basta12..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.iterator (49 samples, 14.71%)</title><rect x="754.1" y="979.0" width="173.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="757.1" y="990.0">ru/mail/polis/dao/bast..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (5 samples, 1.50%)</title><rect x="754.1" y="963.0" width="17.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="757.1" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (5 samples, 1.50%)</title><rect x="754.1" y="947.0" width="17.8" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="757.1" y="958.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (5 samples, 1.50%)</title><rect x="754.1" y="931.0" width="17.8" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="757.1" y="942.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (5 samples, 1.50%)</title><rect x="754.1" y="915.0" width="17.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="757.1" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (5 samples, 1.50%)</title><rect x="754.1" y="899.0" width="17.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="757.1" y="910.0"></text>
</g>
<g>
<title>rocksdb::ColumnFamilyData::GetReferencedSuperVersion(rocksdb::InstrumentedMutex*) (1 samples, 0.30%)</title><rect x="754.1" y="883.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="757.1" y="894.0"></text>
</g>
<g>
<title>rocksdb::ThreadLocalPtr::StaticMeta::Swap(unsigned int, void*) (1 samples, 0.30%)</title><rect x="754.1" y="867.0" width="3.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="757.1" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="754.1" y="851.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="757.1" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="754.1" y="835.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="757.1" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="754.1" y="819.0" width="3.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="757.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long) (1 samples, 0.30%)</title><rect x="757.7" y="883.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="760.7" y="894.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::Arena*) (1 samples, 0.30%)</title><rect x="757.7" y="867.0" width="3.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="760.7" y="878.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Valid() const (1 samples, 0.30%)</title><rect x="761.2" y="883.0" width="3.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="764.2" y="894.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (2 samples, 0.60%)</title><rect x="764.8" y="883.0" width="7.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="767.8" y="894.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.30%)</title><rect x="768.3" y="867.0" width="3.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="771.3" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="768.3" y="851.0" width="3.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="771.3" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="768.3" y="835.0" width="3.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="771.3" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="768.3" y="819.0" width="3.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="771.3" y="830.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.&lt;init&gt; (42 samples, 12.61%)</title><rect x="771.9" y="963.0" width="148.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="774.9" y="974.0">ru/mail/polis/dao/b..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (42 samples, 12.61%)</title><rect x="771.9" y="947.0" width="148.8" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="774.9" y="958.0">org/rocksdb/Abstrac..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (42 samples, 12.61%)</title><rect x="771.9" y="931.0" width="148.8" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="774.9" y="942.0">org/rocksdb/RocksIt..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (27 samples, 8.11%)</title><rect x="775.4" y="915.0" width="95.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="778.4" y="926.0">Java_org_ro..</text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (26 samples, 7.81%)</title><rect x="775.4" y="899.0" width="92.1" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="778.4" y="910.0">rocksdb::DB..</text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (25 samples, 7.51%)</title><rect x="778.9" y="883.0" width="88.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="781.9" y="894.0">rocksdb::M..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (25 samples, 7.51%)</title><rect x="778.9" y="867.0" width="88.6" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="781.9" y="878.0">/tmp/libro..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (24 samples, 7.21%)</title><rect x="778.9" y="851.0" width="85.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="781.9" y="862.0">rocksdb::I..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.30%)</title><rect x="782.5" y="835.0" width="3.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="785.5" y="846.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (22 samples, 6.61%)</title><rect x="786.0" y="835.0" width="78.0" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="789.0" y="846.0">rocksdb::..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.30%)</title><rect x="786.0" y="819.0" width="3.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="789.0" y="830.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (21 samples, 6.31%)</title><rect x="789.6" y="819.0" width="74.4" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="792.6" y="830.0">rocksdb:..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (7 samples, 2.10%)</title><rect x="789.6" y="803.0" width="24.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="792.6" y="814.0">J..</text>
</g>
<g>
<title>jni_CallIntMethodV (7 samples, 2.10%)</title><rect x="789.6" y="787.0" width="24.8" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="792.6" y="798.0">j..</text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (5 samples, 1.50%)</title><rect x="796.7" y="771.0" width="17.7" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="799.7" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.60%)</title><rect x="807.3" y="755.0" width="7.1" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="810.3" y="766.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.30%)</title><rect x="810.8" y="739.0" width="3.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="813.8" y="750.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (10 samples, 3.00%)</title><rect x="814.4" y="803.0" width="35.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="817.4" y="814.0">JNI..</text>
</g>
<g>
<title>jni_CallVoidMethodV (10 samples, 3.00%)</title><rect x="814.4" y="787.0" width="35.4" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="817.4" y="798.0">jni..</text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.30%)</title><rect x="817.9" y="771.0" width="3.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="820.9" y="782.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="817.9" y="755.0" width="3.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="820.9" y="766.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="817.9" y="739.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="820.9" y="750.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="817.9" y="723.0" width="3.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="820.9" y="734.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (7 samples, 2.10%)</title><rect x="821.5" y="771.0" width="24.8" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="824.5" y="782.0">j..</text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.60%)</title><rect x="825.0" y="755.0" width="7.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="828.0" y="766.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (4 samples, 1.20%)</title><rect x="832.1" y="755.0" width="14.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="835.1" y="766.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.30%)</title><rect x="835.6" y="739.0" width="3.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="838.6" y="750.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (2 samples, 0.60%)</title><rect x="839.2" y="739.0" width="7.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="842.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="846.3" y="771.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="849.3" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="846.3" y="755.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="849.3" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="846.3" y="739.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="849.3" y="750.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.30%)</title><rect x="849.8" y="803.0" width="3.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="852.8" y="814.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.30%)</title><rect x="853.4" y="803.0" width="3.5" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="856.4" y="814.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="856.9" y="803.0" width="3.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="859.9" y="814.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="856.9" y="787.0" width="3.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="859.9" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="856.9" y="771.0" width="3.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="859.9" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="856.9" y="755.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="859.9" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="856.9" y="739.0" width="3.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="859.9" y="750.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.30%)</title><rect x="860.5" y="803.0" width="3.5" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="863.5" y="814.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.30%)</title><rect x="860.5" y="787.0" width="3.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="863.5" y="798.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.30%)</title><rect x="864.0" y="851.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="867.0" y="862.0"></text>
</g>
<g>
<title>rocksdb::MemTableIterator::Valid() const (1 samples, 0.30%)</title><rect x="867.5" y="899.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="870.5" y="910.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned (1 samples, 0.30%)</title><rect x="871.1" y="915.0" width="3.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="874.1" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="871.1" y="899.0" width="3.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="874.1" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="871.1" y="883.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="874.1" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="871.1" y="867.0" width="3.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="874.1" y="878.0"></text>
</g>
<g>
<title>call_stub (3 samples, 0.90%)</title><rect x="874.6" y="915.0" width="10.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="877.6" y="926.0"></text>
</g>
<g>
<title>jni_ReleaseByteArrayElements (1 samples, 0.30%)</title><rect x="885.3" y="915.0" width="3.5" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="888.3" y="926.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (2 samples, 0.60%)</title><rect x="888.8" y="915.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="891.8" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (7 samples, 2.10%)</title><rect x="895.9" y="915.0" width="24.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.9" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (7 samples, 2.10%)</title><rect x="895.9" y="899.0" width="24.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="898.9" y="910.0">r..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (7 samples, 2.10%)</title><rect x="895.9" y="883.0" width="24.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="898.9" y="894.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (7 samples, 2.10%)</title><rect x="895.9" y="867.0" width="24.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="898.9" y="878.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (6 samples, 1.80%)</title><rect x="899.4" y="851.0" width="21.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="902.4" y="862.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (6 samples, 1.80%)</title><rect x="899.4" y="835.0" width="21.3" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="902.4" y="846.0">J..</text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.30%)</title><rect x="899.4" y="819.0" width="3.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="902.4" y="830.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="899.4" y="803.0" width="3.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="902.4" y="814.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="899.4" y="787.0" width="3.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="902.4" y="798.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="899.4" y="771.0" width="3.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="902.4" y="782.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="903.0" y="819.0" width="3.5" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="906.0" y="830.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.30%)</title><rect x="903.0" y="803.0" width="3.5" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="906.0" y="814.0"></text>
</g>
<g>
<title>jni_NewByteArray (4 samples, 1.20%)</title><rect x="906.5" y="819.0" width="14.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="909.5" y="830.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (1 samples, 0.30%)</title><rect x="906.5" y="803.0" width="3.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="909.5" y="814.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (3 samples, 0.90%)</title><rect x="910.1" y="803.0" width="10.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="913.1" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.60%)</title><rect x="910.1" y="787.0" width="7.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="913.1" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (2 samples, 0.60%)</title><rect x="910.1" y="771.0" width="7.0" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="913.1" y="782.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.30%)</title><rect x="910.1" y="755.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="913.1" y="766.0"></text>
</g>
<g>
<title>memset@plt (1 samples, 0.30%)</title><rect x="913.6" y="755.0" width="3.5" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="916.6" y="766.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.30%)</title><rect x="917.1" y="787.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="920.1" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.close (2 samples, 0.60%)</title><rect x="920.7" y="963.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="923.7" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (2 samples, 0.60%)</title><rect x="920.7" y="947.0" width="7.1" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="923.7" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (2 samples, 0.60%)</title><rect x="920.7" y="931.0" width="7.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="923.7" y="942.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (2 samples, 0.60%)</title><rect x="920.7" y="915.0" width="7.1" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="923.7" y="926.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_disposeInternal (1 samples, 0.30%)</title><rect x="920.7" y="899.0" width="3.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="923.7" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="920.7" y="883.0" width="3.5" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="923.7" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="920.7" y="867.0" width="3.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="923.7" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="920.7" y="851.0" width="3.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="923.7" y="862.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (1 samples, 0.30%)</title><rect x="924.2" y="899.0" width="3.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="927.2" y="910.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::~ArenaWrappedDBIter() (1 samples, 0.30%)</title><rect x="924.2" y="883.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="927.2" y="894.0"></text>
</g>
<g>
<title>rocksdb::DBIter::~DBIter() (1 samples, 0.30%)</title><rect x="924.2" y="867.0" width="3.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="927.2" y="878.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.30%)</title><rect x="924.2" y="851.0" width="3.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="927.2" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.next (5 samples, 1.50%)</title><rect x="927.8" y="979.0" width="17.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="930.8" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.next (5 samples, 1.50%)</title><rect x="927.8" y="963.0" width="17.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="930.8" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.next (5 samples, 1.50%)</title><rect x="927.8" y="947.0" width="17.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="930.8" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.next0 (5 samples, 1.50%)</title><rect x="927.8" y="931.0" width="17.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="930.8" y="942.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Next() (3 samples, 0.90%)</title><rect x="927.8" y="915.0" width="10.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="930.8" y="926.0"></text>
</g>
<g>
<title>rocksdb::DBIter::FindNextUserEntryInternal(bool, bool) (3 samples, 0.90%)</title><rect x="927.8" y="899.0" width="10.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="930.8" y="910.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.90%)</title><rect x="927.8" y="883.0" width="10.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="930.8" y="894.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.30%)</title><rect x="927.8" y="867.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="930.8" y="878.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.30%)</title><rect x="927.8" y="851.0" width="3.5" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="930.8" y="862.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.30%)</title><rect x="927.8" y="835.0" width="3.5" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="930.8" y="846.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="927.8" y="819.0" width="3.5" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="930.8" y="830.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.30%)</title><rect x="927.8" y="803.0" width="3.5" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="930.8" y="814.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.60%)</title><rect x="931.3" y="867.0" width="7.1" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="934.3" y="878.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (2 samples, 0.60%)</title><rect x="931.3" y="851.0" width="7.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="934.3" y="862.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.60%)</title><rect x="931.3" y="835.0" width="7.1" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="934.3" y="846.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.30%)</title><rect x="931.3" y="819.0" width="3.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="934.3" y="830.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="934.9" y="819.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="937.9" y="830.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.30%)</title><rect x="934.9" y="803.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="937.9" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (2 samples, 0.60%)</title><rect x="938.4" y="915.0" width="7.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="941.4" y="926.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (2 samples, 0.60%)</title><rect x="938.4" y="899.0" width="7.1" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="941.4" y="910.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (2 samples, 0.60%)</title><rect x="938.4" y="883.0" width="7.1" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="941.4" y="894.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.60%)</title><rect x="938.4" y="867.0" width="7.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="941.4" y="878.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (2 samples, 0.60%)</title><rect x="938.4" y="851.0" width="7.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="941.4" y="862.0"></text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (2 samples, 0.60%)</title><rect x="938.4" y="835.0" width="7.1" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="941.4" y="846.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="938.4" y="819.0" width="3.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="941.4" y="830.0"></text>
</g>
<g>
<title>jni_NewByteArray (1 samples, 0.30%)</title><rect x="942.0" y="819.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="945.0" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.30%)</title><rect x="942.0" y="803.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="945.0" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.30%)</title><rect x="942.0" y="787.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="945.0" y="798.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.30%)</title><rect x="942.0" y="771.0" width="3.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="945.0" y="782.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (1 samples, 0.30%)</title><rect x="942.0" y="755.0" width="3.5" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="945.0" y="766.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="942.0" y="739.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="945.0" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="942.0" y="723.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="945.0" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="942.0" y="707.0" width="3.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="945.0" y="718.0"></text>
</g>
<g>
<title>[worker-3 tid=5672] (69 samples, 20.72%)</title><rect x="945.5" y="1091.0" width="244.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="948.5" y="1102.0">[worker-3 tid=5672]</text>
</g>
<g>
<title>SharedRuntime::complete_monitor_locking_C(oopDesc*, BasicLock*, JavaThread*) (1 samples, 0.30%)</title><rect x="945.5" y="1075.0" width="3.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="948.5" y="1086.0"></text>
</g>
<g>
<title>ObjectSynchronizer::fast_enter(Handle, BasicLock*, bool, Thread*) (1 samples, 0.30%)</title><rect x="945.5" y="1059.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="948.5" y="1070.0"></text>
</g>
<g>
<title>ObjectMonitor::enter(Thread*) [clone .part.93] (1 samples, 0.30%)</title><rect x="945.5" y="1043.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="948.5" y="1054.0"></text>
</g>
<g>
<title>ObjectMonitor::EnterI(Thread*) (1 samples, 0.30%)</title><rect x="945.5" y="1027.0" width="3.5" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="948.5" y="1038.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.30%)</title><rect x="945.5" y="1011.0" width="3.5" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="948.5" y="1022.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.30%)</title><rect x="945.5" y="995.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="948.5" y="1006.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.30%)</title><rect x="945.5" y="979.0" width="3.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="948.5" y="990.0"></text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.90%)</title><rect x="949.0" y="1075.0" width="10.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="952.0" y="1086.0"></text>
</g>
<g>
<title>__pthread_cond_signal (3 samples, 0.90%)</title><rect x="949.0" y="1059.0" width="10.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="952.0" y="1070.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.90%)</title><rect x="949.0" y="1043.0" width="10.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="952.0" y="1054.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.90%)</title><rect x="949.0" y="1027.0" width="10.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="952.0" y="1038.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.90%)</title><rect x="949.0" y="1011.0" width="10.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="952.0" y="1022.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.90%)</title><rect x="949.0" y="995.0" width="10.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="952.0" y="1006.0"></text>
</g>
<g>
<title>futex_wake (3 samples, 0.90%)</title><rect x="949.0" y="979.0" width="10.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="952.0" y="990.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.90%)</title><rect x="949.0" y="963.0" width="10.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="952.0" y="974.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.90%)</title><rect x="949.0" y="947.0" width="10.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="952.0" y="958.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.90%)</title><rect x="949.0" y="931.0" width="10.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="952.0" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_timedwait (2 samples, 0.60%)</title><rect x="959.7" y="1075.0" width="7.1" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="962.7" y="1086.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.60%)</title><rect x="959.7" y="1059.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="962.7" y="1070.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.60%)</title><rect x="959.7" y="1043.0" width="7.1" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="962.7" y="1054.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.60%)</title><rect x="959.7" y="1027.0" width="7.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="962.7" y="1038.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.60%)</title><rect x="959.7" y="1011.0" width="7.1" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="962.7" y="1022.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.60%)</title><rect x="959.7" y="995.0" width="7.1" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="962.7" y="1006.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.60%)</title><rect x="959.7" y="979.0" width="7.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="962.7" y="990.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.60%)</title><rect x="959.7" y="963.0" width="7.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="962.7" y="974.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.60%)</title><rect x="959.7" y="947.0" width="7.1" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="962.7" y="958.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.60%)</title><rect x="959.7" y="931.0" width="7.1" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="962.7" y="942.0"></text>
</g>
<g>
<title>java/lang/Thread.run (62 samples, 18.62%)</title><rect x="966.8" y="1075.0" width="219.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="969.8" y="1086.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (62 samples, 18.62%)</title><rect x="966.8" y="1059.0" width="219.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="969.8" y="1070.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (62 samples, 18.62%)</title><rect x="966.8" y="1043.0" width="219.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="969.8" y="1054.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (12 samples, 3.60%)</title><rect x="966.8" y="1027.0" width="42.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="969.8" y="1038.0">java..</text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (12 samples, 3.60%)</title><rect x="966.8" y="1011.0" width="42.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="969.8" y="1022.0">java..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (8 samples, 2.40%)</title><rect x="966.8" y="995.0" width="28.3" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="969.8" y="1006.0">ja..</text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.acquireQueued (1 samples, 0.30%)</title><rect x="966.8" y="979.0" width="3.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="969.8" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (7 samples, 2.10%)</title><rect x="970.3" y="979.0" width="24.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="973.3" y="990.0">j..</text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (7 samples, 2.10%)</title><rect x="970.3" y="963.0" width="24.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="973.3" y="974.0">j..</text>
</g>
<g>
<title>[unknown] (7 samples, 2.10%)</title><rect x="970.3" y="947.0" width="24.8" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="973.3" y="958.0">[..</text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (7 samples, 2.10%)</title><rect x="970.3" y="931.0" width="24.8" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="973.3" y="942.0">p..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.80%)</title><rect x="970.3" y="915.0" width="21.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="973.3" y="926.0">e..</text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.80%)</title><rect x="970.3" y="899.0" width="21.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="973.3" y="910.0">d..</text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 1.80%)</title><rect x="970.3" y="883.0" width="21.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="973.3" y="894.0">_..</text>
</g>
<g>
<title>do_futex (6 samples, 1.80%)</title><rect x="970.3" y="867.0" width="21.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="973.3" y="878.0">d..</text>
</g>
<g>
<title>futex_wait (6 samples, 1.80%)</title><rect x="970.3" y="851.0" width="21.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="973.3" y="862.0">f..</text>
</g>
<g>
<title>futex_wait_queue_me (6 samples, 1.80%)</title><rect x="970.3" y="835.0" width="21.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="973.3" y="846.0">f..</text>
</g>
<g>
<title>schedule (6 samples, 1.80%)</title><rect x="970.3" y="819.0" width="21.3" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="973.3" y="830.0">s..</text>
</g>
<g>
<title>__sched_text_start (6 samples, 1.80%)</title><rect x="970.3" y="803.0" width="21.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="973.3" y="814.0">_..</text>
</g>
<g>
<title>finish_task_switch (6 samples, 1.80%)</title><rect x="970.3" y="787.0" width="21.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="973.3" y="798.0">f..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="991.6" y="915.0" width="3.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="994.6" y="926.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="991.6" y="899.0" width="3.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="994.6" y="910.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="991.6" y="883.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="994.6" y="894.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (4 samples, 1.20%)</title><rect x="995.1" y="995.0" width="14.2" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="998.1" y="1006.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (4 samples, 1.20%)</title><rect x="995.1" y="979.0" width="14.2" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="998.1" y="990.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (4 samples, 1.20%)</title><rect x="995.1" y="963.0" width="14.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="998.1" y="974.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (4 samples, 1.20%)</title><rect x="995.1" y="947.0" width="14.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="998.1" y="958.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (4 samples, 1.20%)</title><rect x="995.1" y="931.0" width="14.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="998.1" y="942.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 1.20%)</title><rect x="995.1" y="915.0" width="14.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="998.1" y="926.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 1.20%)</title><rect x="995.1" y="899.0" width="14.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="998.1" y="910.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 1.20%)</title><rect x="995.1" y="883.0" width="14.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="998.1" y="894.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 1.20%)</title><rect x="995.1" y="867.0" width="14.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="998.1" y="878.0"></text>
</g>
<g>
<title>do_futex (4 samples, 1.20%)</title><rect x="995.1" y="851.0" width="14.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="998.1" y="862.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 1.20%)</title><rect x="995.1" y="835.0" width="14.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="998.1" y="846.0"></text>
</g>
<g>
<title>mark_wake_futex (1 samples, 0.30%)</title><rect x="995.1" y="819.0" width="3.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="998.1" y="830.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.90%)</title><rect x="998.6" y="819.0" width="10.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1001.6" y="830.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.90%)</title><rect x="998.6" y="803.0" width="10.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1001.6" y="814.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.90%)</title><rect x="998.6" y="787.0" width="10.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1001.6" y="798.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl$$Lambda$68/1117949558.run (50 samples, 15.02%)</title><rect x="1009.3" y="1027.0" width="177.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1012.3" y="1038.0">ru/mail/polis/service/b..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.lambda$getValueByKey$1 (50 samples, 15.02%)</title><rect x="1009.3" y="1011.0" width="177.2" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1012.3" y="1022.0">ru/mail/polis/service/b..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (5 samples, 1.50%)</title><rect x="1009.3" y="995.0" width="17.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1012.3" y="1006.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (5 samples, 1.50%)</title><rect x="1009.3" y="979.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1012.3" y="990.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.50%)</title><rect x="1009.3" y="963.0" width="17.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1012.3" y="974.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.50%)</title><rect x="1009.3" y="947.0" width="17.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1012.3" y="958.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (5 samples, 1.50%)</title><rect x="1009.3" y="931.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1012.3" y="942.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (5 samples, 1.50%)</title><rect x="1009.3" y="915.0" width="17.7" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1012.3" y="926.0"></text>
</g>
<g>
<title>__send (5 samples, 1.50%)</title><rect x="1009.3" y="899.0" width="17.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="1012.3" y="910.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.50%)</title><rect x="1009.3" y="883.0" width="17.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1012.3" y="894.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.50%)</title><rect x="1009.3" y="867.0" width="17.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1012.3" y="878.0"></text>
</g>
<g>
<title>__x64_sys_sendto (5 samples, 1.50%)</title><rect x="1009.3" y="851.0" width="17.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1012.3" y="862.0"></text>
</g>
<g>
<title>__sys_sendto (5 samples, 1.50%)</title><rect x="1009.3" y="835.0" width="17.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1012.3" y="846.0"></text>
</g>
<g>
<title>sock_sendmsg (5 samples, 1.50%)</title><rect x="1009.3" y="819.0" width="17.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1012.3" y="830.0"></text>
</g>
<g>
<title>inet6_sendmsg (5 samples, 1.50%)</title><rect x="1009.3" y="803.0" width="17.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1012.3" y="814.0"></text>
</g>
<g>
<title>tcp_sendmsg (5 samples, 1.50%)</title><rect x="1009.3" y="787.0" width="17.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1012.3" y="798.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (5 samples, 1.50%)</title><rect x="1009.3" y="771.0" width="17.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.3" y="782.0"></text>
</g>
<g>
<title>tcp_push (5 samples, 1.50%)</title><rect x="1009.3" y="755.0" width="17.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1012.3" y="766.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (5 samples, 1.50%)</title><rect x="1009.3" y="739.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1012.3" y="750.0"></text>
</g>
<g>
<title>tcp_write_xmit (5 samples, 1.50%)</title><rect x="1009.3" y="723.0" width="17.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1012.3" y="734.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 1.50%)</title><rect x="1009.3" y="707.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1012.3" y="718.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 1.50%)</title><rect x="1009.3" y="691.0" width="17.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1012.3" y="702.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 1.50%)</title><rect x="1009.3" y="675.0" width="17.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1012.3" y="686.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 1.50%)</title><rect x="1009.3" y="659.0" width="17.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1012.3" y="670.0"></text>
</g>
<g>
<title>ip_output (5 samples, 1.50%)</title><rect x="1009.3" y="643.0" width="17.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1012.3" y="654.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 1.50%)</title><rect x="1009.3" y="627.0" width="17.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1012.3" y="638.0"></text>
</g>
<g>
<title>__ip_finish_output (5 samples, 1.50%)</title><rect x="1009.3" y="611.0" width="17.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1012.3" y="622.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 1.50%)</title><rect x="1009.3" y="595.0" width="17.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1012.3" y="606.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 1.50%)</title><rect x="1009.3" y="579.0" width="17.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1012.3" y="590.0"></text>
</g>
<g>
<title>do_softirq.part.20 (5 samples, 1.50%)</title><rect x="1009.3" y="563.0" width="17.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1012.3" y="574.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 1.50%)</title><rect x="1009.3" y="547.0" width="17.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="1012.3" y="558.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 1.50%)</title><rect x="1009.3" y="531.0" width="17.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1012.3" y="542.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 1.50%)</title><rect x="1009.3" y="515.0" width="17.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1012.3" y="526.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 1.50%)</title><rect x="1009.3" y="499.0" width="17.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1012.3" y="510.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 1.50%)</title><rect x="1009.3" y="483.0" width="17.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1012.3" y="494.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 1.50%)</title><rect x="1009.3" y="467.0" width="17.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1012.3" y="478.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 1.50%)</title><rect x="1009.3" y="451.0" width="17.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1012.3" y="462.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 1.50%)</title><rect x="1009.3" y="435.0" width="17.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1012.3" y="446.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 1.50%)</title><rect x="1009.3" y="419.0" width="17.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1012.3" y="430.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 1.50%)</title><rect x="1009.3" y="403.0" width="17.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1012.3" y="414.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 1.50%)</title><rect x="1009.3" y="387.0" width="17.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1012.3" y="398.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 1.50%)</title><rect x="1009.3" y="371.0" width="17.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1012.3" y="382.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 1.50%)</title><rect x="1009.3" y="355.0" width="17.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1012.3" y="366.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 1.50%)</title><rect x="1009.3" y="339.0" width="17.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="1012.3" y="350.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 1.50%)</title><rect x="1009.3" y="323.0" width="17.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1012.3" y="334.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 1.50%)</title><rect x="1009.3" y="307.0" width="17.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1012.3" y="318.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 1.50%)</title><rect x="1009.3" y="291.0" width="17.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1012.3" y="302.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 1.50%)</title><rect x="1009.3" y="275.0" width="17.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1012.3" y="286.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.50%)</title><rect x="1009.3" y="259.0" width="17.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1012.3" y="270.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.get (45 samples, 13.51%)</title><rect x="1027.0" y="995.0" width="159.5" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1030.0" y="1006.0">ru/mail/polis/dao/ba..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.iterator (42 samples, 12.61%)</title><rect x="1034.1" y="979.0" width="148.8" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="1037.1" y="990.0">ru/mail/polis/dao/b..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.newIterator (8 samples, 2.40%)</title><rect x="1034.1" y="963.0" width="28.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1037.1" y="974.0">or..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.iterator (8 samples, 2.40%)</title><rect x="1034.1" y="947.0" width="28.3" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="1037.1" y="958.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_iterator__J (7 samples, 2.10%)</title><rect x="1034.1" y="931.0" width="24.8" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1037.1" y="942.0">J..</text>
</g>
<g>
<title>rocksdb::DBImpl::DefaultColumnFamily() const (1 samples, 0.30%)</title><rect x="1034.1" y="915.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1037.1" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="1034.1" y="899.0" width="3.5" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1037.1" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="1034.1" y="883.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1037.1" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="1034.1" y="867.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1037.1" y="878.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyHandle*) (6 samples, 1.80%)</title><rect x="1037.6" y="915.0" width="21.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1040.6" y="926.0">r..</text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long) (1 samples, 0.30%)</title><rect x="1037.6" y="899.0" width="3.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1040.6" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewIteratorImpl(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, unsigned long, rocksdb::ReadCallback*, bool, bool) (5 samples, 1.50%)</title><rect x="1041.2" y="899.0" width="17.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1044.2" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::NewInternalIterator(rocksdb::ReadOptions const&amp;, rocksdb::ColumnFamilyData*, rocksdb::SuperVersion*, rocksdb::Arena*, rocksdb::RangeDelAggregator*, unsigned long) (3 samples, 0.90%)</title><rect x="1041.2" y="883.0" width="10.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1044.2" y="894.0"></text>
</g>
<g>
<title>rocksdb::MemTable::NewRangeTombstoneIterator(rocksdb::ReadOptions const&amp;, unsigned long) (1 samples, 0.30%)</title><rect x="1041.2" y="867.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1044.2" y="878.0"></text>
</g>
<g>
<title>rocksdb::MemTableListVersion::AddIterators(rocksdb::ReadOptions const&amp;, rocksdb::MergeIteratorBuilder*) (2 samples, 0.60%)</title><rect x="1044.7" y="867.0" width="7.1" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="1047.7" y="878.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="1048.3" y="851.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1051.3" y="862.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="1048.3" y="835.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1051.3" y="846.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="1048.3" y="819.0" width="3.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1051.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::MergeIteratorBuilder::~MergeIteratorBuilder() (1 samples, 0.30%)</title><rect x="1051.8" y="883.0" width="3.5" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1054.8" y="894.0"></text>
</g>
<g>
<title>rocksdb::NewArenaWrappedDbIterator(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.30%)</title><rect x="1055.3" y="883.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1058.3" y="894.0"></text>
</g>
<g>
<title>rocksdb::ArenaWrappedDBIter::Init(rocksdb::Env*, rocksdb::ReadOptions const&amp;, rocksdb::ImmutableCFOptions const&amp;, rocksdb::MutableCFOptions const&amp;, unsigned long const&amp;, unsigned long, unsigned long, rocksdb::ReadCallback*, rocksdb::DBImpl*, rocksdb::ColumnFamilyData*, bool, bool) (1 samples, 0.30%)</title><rect x="1055.3" y="867.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1058.3" y="878.0"></text>
</g>
<g>
<title>rocksdb::Arena::AllocateAligned(unsigned long, unsigned long, rocksdb::Logger*) (1 samples, 0.30%)</title><rect x="1055.3" y="851.0" width="3.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1058.3" y="862.0"></text>
</g>
<g>
<title>_int_malloc (1 samples, 0.30%)</title><rect x="1058.9" y="931.0" width="3.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1061.9" y="942.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.&lt;init&gt; (33 samples, 9.91%)</title><rect x="1062.4" y="963.0" width="117.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1065.4" y="974.0">ru/mail/polis/..</text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.seek (33 samples, 9.91%)</title><rect x="1062.4" y="947.0" width="117.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1065.4" y="958.0">org/rocksdb/Ab..</text>
</g>
<g>
<title>org/rocksdb/RocksIterator.seek0 (33 samples, 9.91%)</title><rect x="1062.4" y="931.0" width="117.0" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1065.4" y="942.0">org/rocksdb/Ro..</text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_seek0 (25 samples, 7.51%)</title><rect x="1062.4" y="915.0" width="88.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1065.4" y="926.0">Java_org_r..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.30%)</title><rect x="1062.4" y="899.0" width="3.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1065.4" y="910.0"></text>
</g>
<g>
<title>rocksdb::DBIter::Seek(rocksdb::Slice const&amp;) (24 samples, 7.21%)</title><rect x="1066.0" y="899.0" width="85.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1069.0" y="910.0">rocksdb::D..</text>
</g>
<g>
<title>rocksdb::MemTableIterator::Seek(rocksdb::Slice const&amp;) (24 samples, 7.21%)</title><rect x="1066.0" y="883.0" width="85.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1069.0" y="894.0">rocksdb::M..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (24 samples, 7.21%)</title><rect x="1066.0" y="867.0" width="85.0" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="1069.0" y="878.0">/tmp/libro..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::FindGreaterOrEqual(char const*) const (24 samples, 7.21%)</title><rect x="1066.0" y="851.0" width="85.0" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1069.0" y="862.0">rocksdb::I..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (23 samples, 6.91%)</title><rect x="1069.5" y="835.0" width="81.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1072.5" y="846.0">rocksdb::..</text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.30%)</title><rect x="1073.1" y="819.0" width="3.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1076.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (21 samples, 6.31%)</title><rect x="1076.6" y="819.0" width="74.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1079.6" y="830.0">rocksdb:..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (6 samples, 1.80%)</title><rect x="1076.6" y="803.0" width="21.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="1079.6" y="814.0">J..</text>
</g>
<g>
<title>jni_CallIntMethodV (6 samples, 1.80%)</title><rect x="1076.6" y="787.0" width="21.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="1079.6" y="798.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="1076.6" y="771.0" width="3.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1079.6" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="1080.2" y="771.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1083.2" y="782.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="1083.7" y="771.0" width="3.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1086.7" y="782.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.90%)</title><rect x="1087.2" y="771.0" width="10.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="1090.2" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (3 samples, 0.90%)</title><rect x="1087.2" y="755.0" width="10.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1090.2" y="766.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.30%)</title><rect x="1094.3" y="739.0" width="3.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1097.3" y="750.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (12 samples, 3.60%)</title><rect x="1097.9" y="803.0" width="42.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1100.9" y="814.0">JNIE..</text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="1097.9" y="787.0" width="3.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1100.9" y="798.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (11 samples, 3.30%)</title><rect x="1101.4" y="787.0" width="39.0" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1104.4" y="798.0">jni..</text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.30%)</title><rect x="1101.4" y="771.0" width="3.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1104.4" y="782.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.30%)</title><rect x="1105.0" y="771.0" width="3.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1108.0" y="782.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="1108.5" y="771.0" width="3.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1111.5" y="782.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (7 samples, 2.10%)</title><rect x="1112.0" y="771.0" width="24.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1115.0" y="782.0">j..</text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.30%)</title><rect x="1112.0" y="755.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1115.0" y="766.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (6 samples, 1.80%)</title><rect x="1115.6" y="755.0" width="21.2" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1118.6" y="766.0">J..</text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.30%)</title><rect x="1122.7" y="739.0" width="3.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1125.7" y="750.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.30%)</title><rect x="1126.2" y="739.0" width="3.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1129.2" y="750.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (2 samples, 0.60%)</title><rect x="1129.8" y="739.0" width="7.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1132.8" y="750.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (2 samples, 0.60%)</title><rect x="1129.8" y="723.0" width="7.0" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1132.8" y="734.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (2 samples, 0.60%)</title><rect x="1129.8" y="707.0" width="7.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1132.8" y="718.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.30%)</title><rect x="1136.8" y="771.0" width="3.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1139.8" y="782.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.30%)</title><rect x="1140.4" y="803.0" width="3.5" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="1143.4" y="814.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.30%)</title><rect x="1143.9" y="803.0" width="3.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1146.9" y="814.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.30%)</title><rect x="1143.9" y="787.0" width="3.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1146.9" y="798.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.30%)</title><rect x="1147.5" y="803.0" width="3.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1150.5" y="814.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.30%)</title><rect x="1147.5" y="787.0" width="3.5" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1150.5" y="798.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.30%)</title><rect x="1151.0" y="915.0" width="3.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1154.0" y="926.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="1151.0" y="899.0" width="3.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1154.0" y="910.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="1151.0" y="883.0" width="3.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1154.0" y="894.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="1151.0" y="867.0" width="3.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1154.0" y="878.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (7 samples, 2.10%)</title><rect x="1154.6" y="915.0" width="24.8" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1157.6" y="926.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (7 samples, 2.10%)</title><rect x="1154.6" y="899.0" width="24.8" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1157.6" y="910.0">r..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (7 samples, 2.10%)</title><rect x="1154.6" y="883.0" width="24.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="1157.6" y="894.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (7 samples, 2.10%)</title><rect x="1154.6" y="867.0" width="24.8" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1157.6" y="878.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (7 samples, 2.10%)</title><rect x="1154.6" y="851.0" width="24.8" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="1157.6" y="862.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (7 samples, 2.10%)</title><rect x="1154.6" y="835.0" width="24.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1157.6" y="846.0">J..</text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.30%)</title><rect x="1154.6" y="819.0" width="3.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1157.6" y="830.0"></text>
</g>
<g>
<title>jni_NewByteArray (3 samples, 0.90%)</title><rect x="1158.1" y="819.0" width="10.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1161.1" y="830.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (2 samples, 0.60%)</title><rect x="1161.7" y="803.0" width="7.0" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1164.7" y="814.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (2 samples, 0.60%)</title><rect x="1161.7" y="787.0" width="7.0" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="1164.7" y="798.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.30%)</title><rect x="1161.7" y="771.0" width="3.5" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="1164.7" y="782.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.30%)</title><rect x="1165.2" y="771.0" width="3.5" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="1168.2" y="782.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.90%)</title><rect x="1168.7" y="819.0" width="10.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="1171.7" y="830.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="1175.8" y="803.0" width="3.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1178.8" y="814.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.close (1 samples, 0.30%)</title><rect x="1179.4" y="963.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1182.4" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractImmutableNativeReference.close (1 samples, 0.30%)</title><rect x="1179.4" y="947.0" width="3.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1182.4" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractRocksIterator.disposeInternal (1 samples, 0.30%)</title><rect x="1179.4" y="931.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1182.4" y="942.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.disposeInternal (1 samples, 0.30%)</title><rect x="1179.4" y="915.0" width="3.5" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="1182.4" y="926.0"></text>
</g>
<g>
<title>__libc_free (1 samples, 0.30%)</title><rect x="1179.4" y="899.0" width="3.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1182.4" y="910.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.30%)</title><rect x="1179.4" y="883.0" width="3.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1182.4" y="894.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.30%)</title><rect x="1179.4" y="867.0" width="3.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1182.4" y="878.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.30%)</title><rect x="1179.4" y="851.0" width="3.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1182.4" y="862.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.next (1 samples, 0.30%)</title><rect x="1182.9" y="979.0" width="3.6" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="1185.9" y="990.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyRecordIter.next (1 samples, 0.30%)</title><rect x="1182.9" y="963.0" width="3.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1185.9" y="974.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key (1 samples, 0.30%)</title><rect x="1182.9" y="947.0" width="3.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1185.9" y="958.0"></text>
</g>
<g>
<title>org/rocksdb/RocksIterator.key0 (1 samples, 0.30%)</title><rect x="1182.9" y="931.0" width="3.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1185.9" y="942.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksIterator_key0 (1 samples, 0.30%)</title><rect x="1182.9" y="915.0" width="3.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="1185.9" y="926.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.30%)</title><rect x="1182.9" y="899.0" width="3.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1185.9" y="910.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.30%)</title><rect x="1182.9" y="883.0" width="3.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="1185.9" y="894.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.register (1 samples, 0.30%)</title><rect x="1186.5" y="1075.0" width="3.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1189.5" y="1086.0"></text>
</g>
<g>
<title>java/lang/ref/Finalizer.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1186.5" y="1059.0" width="3.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1189.5" y="1070.0"></text>
</g>
<g>
<title>java/lang/ref/FinalReference.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1186.5" y="1043.0" width="3.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1189.5" y="1054.0"></text>
</g>
<g>
<title>java/lang/ref/Reference.&lt;init&gt; (1 samples, 0.30%)</title><rect x="1186.5" y="1027.0" width="3.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="1189.5" y="1038.0"></text>
</g>
</g>
</svg>
