<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="294" onload="init(evt)" viewBox="0 0 1200 294" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="277"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="277"> </text>
<g id="frames">
<g>
<title>all (344 samples, 100.00%)</title><rect x="10.0" y="243.0" width="1180.0" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="13.0" y="254.0">all</text>
</g>
<g>
<title>[NIO Selector #0 tid=2296] (85 samples, 24.71%)</title><rect x="10.0" y="227.0" width="291.6" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="13.0" y="238.0">[NIO Selector #0 tid=2296]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (85 samples, 24.71%)</title><rect x="10.0" y="211.0" width="291.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="222.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (3 samples, 0.87%)</title><rect x="10.0" y="195.0" width="10.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="13.0" y="206.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (3 samples, 0.87%)</title><rect x="10.0" y="179.0" width="10.3" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="13.0" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (82 samples, 23.84%)</title><rect x="20.3" y="195.0" width="281.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="23.3" y="206.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (82 samples, 23.84%)</title><rect x="20.3" y="179.0" width="281.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.3" y="190.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (82 samples, 23.84%)</title><rect x="20.3" y="163.0" width="281.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.3" y="174.0">one/nio/http/HttpSession.processHttpBu..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (38 samples, 11.05%)</title><rect x="20.3" y="147.0" width="130.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="23.3" y="158.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (38 samples, 11.05%)</title><rect x="20.3" y="131.0" width="130.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="23.3" y="142.0">one/nio/http/Htt..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.handleDefault (38 samples, 11.05%)</title><rect x="20.3" y="115.0" width="130.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="23.3" y="126.0">ru/mail/polis/se..</text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 1.16%)</title><rect x="20.3" y="99.0" width="13.7" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="23.3" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (22 samples, 6.40%)</title><rect x="34.0" y="99.0" width="75.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="37.0" y="110.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (22 samples, 6.40%)</title><rect x="34.0" y="83.0" width="75.5" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.0" y="94.0">one/nio/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (18 samples, 5.23%)</title><rect x="34.0" y="67.0" width="61.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="37.0" y="78.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (18 samples, 5.23%)</title><rect x="34.0" y="51.0" width="61.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="37.0" y="62.0">one/ni..</text>
</g>
<g>
<title>byte[] (18 samples, 5.23%)</title><rect x="34.0" y="35.0" width="61.8" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="37.0" y="46.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (4 samples, 1.16%)</title><rect x="95.8" y="67.0" width="13.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="98.8" y="78.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (4 samples, 1.16%)</title><rect x="95.8" y="51.0" width="13.7" height="15" fill="#5bc9c9" rx="2" ry="2"/>
<text x="98.8" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (12 samples, 3.49%)</title><rect x="109.5" y="99.0" width="41.1" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="112.5" y="110.0">one..</text>
</g>
<g>
<title>byte[] (5 samples, 1.45%)</title><rect x="109.5" y="83.0" width="17.1" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="112.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String[] (4 samples, 1.16%)</title><rect x="126.6" y="83.0" width="13.7" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="129.6" y="94.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.87%)</title><rect x="140.3" y="83.0" width="10.3" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="143.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (28 samples, 8.14%)</title><rect x="150.6" y="147.0" width="96.1" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="153.6" y="158.0">one/nio/htt..</text>
</g>
<g>
<title>one.nio.http.Request (8 samples, 2.33%)</title><rect x="150.6" y="131.0" width="27.5" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="153.6" y="142.0">o..</text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (10 samples, 2.91%)</title><rect x="178.1" y="131.0" width="34.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="181.1" y="142.0">on..</text>
</g>
<g>
<title>java.lang.String[] (10 samples, 2.91%)</title><rect x="178.1" y="115.0" width="34.3" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="181.1" y="126.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 2.91%)</title><rect x="212.4" y="131.0" width="34.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="215.4" y="142.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 2.91%)</title><rect x="212.4" y="115.0" width="34.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="215.4" y="126.0">on..</text>
</g>
<g>
<title>char[] (5 samples, 1.45%)</title><rect x="212.4" y="99.0" width="17.1" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="215.4" y="110.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.29%)</title><rect x="229.5" y="99.0" width="3.5" height="15" fill="#66d4d4" rx="2" ry="2"/>
<text x="232.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 1.16%)</title><rect x="233.0" y="99.0" width="13.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="236.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 1.16%)</title><rect x="233.0" y="83.0" width="13.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="236.0" y="94.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 1.16%)</title><rect x="233.0" y="67.0" width="13.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="236.0" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 1.16%)</title><rect x="233.0" y="51.0" width="13.7" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="236.0" y="62.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 4.65%)</title><rect x="246.7" y="147.0" width="54.9" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="249.7" y="158.0">one/n..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (16 samples, 4.65%)</title><rect x="246.7" y="131.0" width="54.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="249.7" y="142.0">one/n..</text>
</g>
<g>
<title>char[] (8 samples, 2.33%)</title><rect x="246.7" y="115.0" width="27.4" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="249.7" y="126.0">c..</text>
</g>
<g>
<title>java.lang.String (2 samples, 0.58%)</title><rect x="274.1" y="115.0" width="6.9" height="15" fill="#67d5d5" rx="2" ry="2"/>
<text x="277.1" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 1.74%)</title><rect x="281.0" y="115.0" width="20.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="284.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 1.74%)</title><rect x="281.0" y="99.0" width="20.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="284.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 1.74%)</title><rect x="281.0" y="83.0" width="20.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="284.0" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 1.74%)</title><rect x="281.0" y="67.0" width="20.6" height="15" fill="#63d1d1" rx="2" ry="2"/>
<text x="284.0" y="78.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=2297] (85 samples, 24.71%)</title><rect x="301.6" y="227.0" width="291.5" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="304.6" y="238.0">[NIO Selector #1 tid=2297]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (85 samples, 24.71%)</title><rect x="301.6" y="211.0" width="291.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="304.6" y="222.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.29%)</title><rect x="301.6" y="195.0" width="3.4" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="304.6" y="206.0"></text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (1 samples, 0.29%)</title><rect x="301.6" y="179.0" width="3.4" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="304.6" y="190.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (84 samples, 24.42%)</title><rect x="305.0" y="195.0" width="288.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="308.0" y="206.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (84 samples, 24.42%)</title><rect x="305.0" y="179.0" width="288.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="308.0" y="190.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (84 samples, 24.42%)</title><rect x="305.0" y="163.0" width="288.1" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="308.0" y="174.0">one/nio/http/HttpSession.processHttpBuf..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (36 samples, 10.47%)</title><rect x="305.0" y="147.0" width="123.5" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="308.0" y="158.0">one/nio/http/Ht..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (36 samples, 10.47%)</title><rect x="305.0" y="131.0" width="123.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="308.0" y="142.0">one/nio/http/Ht..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.handleDefault (36 samples, 10.47%)</title><rect x="305.0" y="115.0" width="123.5" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="308.0" y="126.0">ru/mail/polis/s..</text>
</g>
<g>
<title>byte[] (1 samples, 0.29%)</title><rect x="305.0" y="99.0" width="3.4" height="15" fill="#5ecccc" rx="2" ry="2"/>
<text x="308.0" y="110.0"></text>
</g>
<g>
<title>one.nio.http.Response (4 samples, 1.16%)</title><rect x="308.4" y="99.0" width="13.8" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="311.4" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (16 samples, 4.65%)</title><rect x="322.2" y="99.0" width="54.8" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="325.2" y="110.0">one/n..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (16 samples, 4.65%)</title><rect x="322.2" y="83.0" width="54.8" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="325.2" y="94.0">one/n..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (8 samples, 2.33%)</title><rect x="322.2" y="67.0" width="27.4" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="325.2" y="78.0">o..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (8 samples, 2.33%)</title><rect x="322.2" y="51.0" width="27.4" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="325.2" y="62.0">o..</text>
</g>
<g>
<title>byte[] (8 samples, 2.33%)</title><rect x="322.2" y="35.0" width="27.4" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="325.2" y="46.0">b..</text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 2.33%)</title><rect x="349.6" y="67.0" width="27.4" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="352.6" y="78.0">o..</text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (8 samples, 2.33%)</title><rect x="349.6" y="51.0" width="27.4" height="15" fill="#50bebe" rx="2" ry="2"/>
<text x="352.6" y="62.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (15 samples, 4.36%)</title><rect x="377.0" y="99.0" width="51.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="380.0" y="110.0">one/n..</text>
</g>
<g>
<title>byte[] (7 samples, 2.03%)</title><rect x="377.0" y="83.0" width="24.0" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="380.0" y="94.0">b..</text>
</g>
<g>
<title>java.lang.String[] (5 samples, 1.45%)</title><rect x="401.0" y="83.0" width="17.2" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="404.0" y="94.0"></text>
</g>
<g>
<title>java.lang.String (3 samples, 0.87%)</title><rect x="418.2" y="83.0" width="10.3" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="421.2" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (30 samples, 8.72%)</title><rect x="428.5" y="147.0" width="102.9" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="431.5" y="158.0">one/nio/http..</text>
</g>
<g>
<title>one.nio.http.Request (5 samples, 1.45%)</title><rect x="428.5" y="131.0" width="17.1" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="431.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (15 samples, 4.36%)</title><rect x="445.6" y="131.0" width="51.5" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="448.6" y="142.0">one/n..</text>
</g>
<g>
<title>java.lang.String[] (15 samples, 4.36%)</title><rect x="445.6" y="115.0" width="51.5" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="448.6" y="126.0">java...</text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 2.91%)</title><rect x="497.1" y="131.0" width="34.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="500.1" y="142.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 2.91%)</title><rect x="497.1" y="115.0" width="34.3" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="500.1" y="126.0">on..</text>
</g>
<g>
<title>char[] (2 samples, 0.58%)</title><rect x="497.1" y="99.0" width="6.9" height="15" fill="#61cfcf" rx="2" ry="2"/>
<text x="500.1" y="110.0"></text>
</g>
<g>
<title>java.lang.String (6 samples, 1.74%)</title><rect x="504.0" y="99.0" width="20.5" height="15" fill="#52c0c0" rx="2" ry="2"/>
<text x="507.0" y="110.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.58%)</title><rect x="524.5" y="99.0" width="6.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="527.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (2 samples, 0.58%)</title><rect x="524.5" y="83.0" width="6.9" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="527.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (2 samples, 0.58%)</title><rect x="524.5" y="67.0" width="6.9" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="527.5" y="78.0"></text>
</g>
<g>
<title>byte[] (2 samples, 0.58%)</title><rect x="524.5" y="51.0" width="6.9" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="527.5" y="62.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 5.23%)</title><rect x="531.4" y="147.0" width="61.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="534.4" y="158.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (18 samples, 5.23%)</title><rect x="531.4" y="131.0" width="61.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="534.4" y="142.0">one/ni..</text>
</g>
<g>
<title>char[] (8 samples, 2.33%)</title><rect x="531.4" y="115.0" width="27.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="534.4" y="126.0">c..</text>
</g>
<g>
<title>java.lang.String (3 samples, 0.87%)</title><rect x="558.8" y="115.0" width="10.3" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="561.8" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 2.03%)</title><rect x="569.1" y="115.0" width="24.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="572.1" y="126.0">j..</text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (7 samples, 2.03%)</title><rect x="569.1" y="99.0" width="24.0" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="572.1" y="110.0">j..</text>
</g>
<g>
<title>java/lang/StringUTF16.compress (7 samples, 2.03%)</title><rect x="569.1" y="83.0" width="24.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="572.1" y="94.0">j..</text>
</g>
<g>
<title>byte[] (7 samples, 2.03%)</title><rect x="569.1" y="67.0" width="24.0" height="15" fill="#56c4c4" rx="2" ry="2"/>
<text x="572.1" y="78.0">b..</text>
</g>
<g>
<title>[NIO Selector #2 tid=2298] (87 samples, 25.29%)</title><rect x="593.1" y="227.0" width="298.5" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="596.1" y="238.0">[NIO Selector #2 tid=2298]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (87 samples, 25.29%)</title><rect x="593.1" y="211.0" width="298.5" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="596.1" y="222.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/Session.process (87 samples, 25.29%)</title><rect x="593.1" y="195.0" width="298.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="596.1" y="206.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (87 samples, 25.29%)</title><rect x="593.1" y="179.0" width="298.5" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="596.1" y="190.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (87 samples, 25.29%)</title><rect x="593.1" y="163.0" width="298.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="596.1" y="174.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (38 samples, 11.05%)</title><rect x="593.1" y="147.0" width="130.4" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="596.1" y="158.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (38 samples, 11.05%)</title><rect x="593.1" y="131.0" width="130.4" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="596.1" y="142.0">one/nio/http/Htt..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.handleDefault (38 samples, 11.05%)</title><rect x="593.1" y="115.0" width="130.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="596.1" y="126.0">ru/mail/polis/se..</text>
</g>
<g>
<title>byte[] (1 samples, 0.29%)</title><rect x="593.1" y="99.0" width="3.5" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="596.1" y="110.0"></text>
</g>
<g>
<title>one.nio.http.Response (3 samples, 0.87%)</title><rect x="596.6" y="99.0" width="10.3" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="599.6" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (20 samples, 5.81%)</title><rect x="606.9" y="99.0" width="68.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.9" y="110.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (20 samples, 5.81%)</title><rect x="606.9" y="83.0" width="68.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="609.9" y="94.0">one/nio..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (15 samples, 4.36%)</title><rect x="606.9" y="67.0" width="51.4" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="609.9" y="78.0">one/n..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (15 samples, 4.36%)</title><rect x="606.9" y="51.0" width="51.4" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="609.9" y="62.0">one/n..</text>
</g>
<g>
<title>byte[] (15 samples, 4.36%)</title><rect x="606.9" y="35.0" width="51.4" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="609.9" y="46.0">byte[]</text>
</g>
<g>
<title>one/nio/net/Session.write (5 samples, 1.45%)</title><rect x="658.3" y="67.0" width="17.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="661.3" y="78.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (5 samples, 1.45%)</title><rect x="658.3" y="51.0" width="17.2" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="661.3" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (14 samples, 4.07%)</title><rect x="675.5" y="99.0" width="48.0" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="678.5" y="110.0">one/..</text>
</g>
<g>
<title>byte[] (4 samples, 1.16%)</title><rect x="675.5" y="83.0" width="13.7" height="15" fill="#6cdada" rx="2" ry="2"/>
<text x="678.5" y="94.0"></text>
</g>
<g>
<title>java.lang.String[] (5 samples, 1.45%)</title><rect x="689.2" y="83.0" width="17.1" height="15" fill="#5ac8c8" rx="2" ry="2"/>
<text x="692.2" y="94.0"></text>
</g>
<g>
<title>java.lang.String (5 samples, 1.45%)</title><rect x="706.3" y="83.0" width="17.2" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="709.3" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (25 samples, 7.27%)</title><rect x="723.5" y="147.0" width="85.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="726.5" y="158.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (6 samples, 1.74%)</title><rect x="723.5" y="131.0" width="20.6" height="15" fill="#55c3c3" rx="2" ry="2"/>
<text x="726.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (9 samples, 2.62%)</title><rect x="744.1" y="131.0" width="30.8" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="747.1" y="142.0">on..</text>
</g>
<g>
<title>java.lang.String[] (9 samples, 2.62%)</title><rect x="744.1" y="115.0" width="30.8" height="15" fill="#58c6c6" rx="2" ry="2"/>
<text x="747.1" y="126.0">ja..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 2.91%)</title><rect x="774.9" y="131.0" width="34.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="777.9" y="142.0">on..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (10 samples, 2.91%)</title><rect x="774.9" y="115.0" width="34.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="777.9" y="126.0">on..</text>
</g>
<g>
<title>char[] (5 samples, 1.45%)</title><rect x="774.9" y="99.0" width="17.2" height="15" fill="#5ccaca" rx="2" ry="2"/>
<text x="777.9" y="110.0"></text>
</g>
<g>
<title>java.lang.String (1 samples, 0.29%)</title><rect x="792.1" y="99.0" width="3.4" height="15" fill="#64d2d2" rx="2" ry="2"/>
<text x="795.1" y="110.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 1.16%)</title><rect x="795.5" y="99.0" width="13.7" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="798.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 1.16%)</title><rect x="795.5" y="83.0" width="13.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="798.5" y="94.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 1.16%)</title><rect x="795.5" y="67.0" width="13.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="798.5" y="78.0"></text>
</g>
<g>
<title>byte[] (4 samples, 1.16%)</title><rect x="795.5" y="51.0" width="13.7" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="798.5" y="62.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 6.98%)</title><rect x="809.2" y="147.0" width="82.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="812.2" y="158.0">one/nio/u..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (24 samples, 6.98%)</title><rect x="809.2" y="131.0" width="82.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="812.2" y="142.0">one/nio/u..</text>
</g>
<g>
<title>char[] (14 samples, 4.07%)</title><rect x="809.2" y="115.0" width="48.1" height="15" fill="#51bfbf" rx="2" ry="2"/>
<text x="812.2" y="126.0">char[]</text>
</g>
<g>
<title>java.lang.String (4 samples, 1.16%)</title><rect x="857.3" y="115.0" width="13.7" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="860.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 1.74%)</title><rect x="871.0" y="115.0" width="20.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="874.0" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (6 samples, 1.74%)</title><rect x="871.0" y="99.0" width="20.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="874.0" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (6 samples, 1.74%)</title><rect x="871.0" y="83.0" width="20.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="874.0" y="94.0"></text>
</g>
<g>
<title>byte[] (6 samples, 1.74%)</title><rect x="871.0" y="67.0" width="20.6" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="874.0" y="78.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=2306] (87 samples, 25.29%)</title><rect x="891.6" y="227.0" width="298.4" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="894.6" y="238.0">[NIO Selector #3 tid=2306]</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (87 samples, 25.29%)</title><rect x="891.6" y="211.0" width="298.4" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="894.6" y="222.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (7 samples, 2.03%)</title><rect x="891.6" y="195.0" width="24.0" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="894.6" y="206.0">o..</text>
</g>
<g>
<title>one.nio.net.NativeSelector$2 (7 samples, 2.03%)</title><rect x="891.6" y="179.0" width="24.0" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="894.6" y="190.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.process (80 samples, 23.26%)</title><rect x="915.6" y="195.0" width="274.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="918.6" y="206.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (80 samples, 23.26%)</title><rect x="915.6" y="179.0" width="274.4" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="918.6" y="190.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (80 samples, 23.26%)</title><rect x="915.6" y="163.0" width="274.4" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="918.6" y="174.0">one/nio/http/HttpSession.processHttpB..</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (37 samples, 10.76%)</title><rect x="915.6" y="147.0" width="126.9" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="918.6" y="158.0">one/nio/http/Htt..</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (37 samples, 10.76%)</title><rect x="915.6" y="131.0" width="126.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.6" y="142.0">one/nio/http/Htt..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.handleDefault (37 samples, 10.76%)</title><rect x="915.6" y="115.0" width="126.9" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="918.6" y="126.0">ru/mail/polis/se..</text>
</g>
<g>
<title>byte[] (4 samples, 1.16%)</title><rect x="915.6" y="99.0" width="13.7" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="918.6" y="110.0"></text>
</g>
<g>
<title>one.nio.http.Response (1 samples, 0.29%)</title><rect x="929.3" y="99.0" width="3.4" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="932.3" y="110.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (13 samples, 3.78%)</title><rect x="932.7" y="99.0" width="44.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="935.7" y="110.0">one/..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (13 samples, 3.78%)</title><rect x="932.7" y="83.0" width="44.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="935.7" y="94.0">one/..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (11 samples, 3.20%)</title><rect x="932.7" y="67.0" width="37.8" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="935.7" y="78.0">one..</text>
</g>
<g>
<title>one/nio/util/ByteArrayBuilder.&lt;init&gt; (11 samples, 3.20%)</title><rect x="932.7" y="51.0" width="37.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="935.7" y="62.0">one..</text>
</g>
<g>
<title>byte[] (11 samples, 3.20%)</title><rect x="932.7" y="35.0" width="37.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="935.7" y="46.0">byt..</text>
</g>
<g>
<title>one/nio/net/Session.write (2 samples, 0.58%)</title><rect x="970.5" y="67.0" width="6.8" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="973.5" y="78.0"></text>
</g>
<g>
<title>one.nio.net.Session$ArrayQueueItem (2 samples, 0.58%)</title><rect x="970.5" y="51.0" width="6.8" height="15" fill="#68d6d6" rx="2" ry="2"/>
<text x="973.5" y="62.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (19 samples, 5.52%)</title><rect x="977.3" y="99.0" width="65.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="980.3" y="110.0">one/nio..</text>
</g>
<g>
<title>byte[] (4 samples, 1.16%)</title><rect x="977.3" y="83.0" width="13.7" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="980.3" y="94.0"></text>
</g>
<g>
<title>java.lang.String[] (13 samples, 3.78%)</title><rect x="991.0" y="83.0" width="44.6" height="15" fill="#59c7c7" rx="2" ry="2"/>
<text x="994.0" y="94.0">java..</text>
</g>
<g>
<title>java.lang.String (2 samples, 0.58%)</title><rect x="1035.6" y="83.0" width="6.9" height="15" fill="#6bd9d9" rx="2" ry="2"/>
<text x="1038.6" y="94.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (26 samples, 7.56%)</title><rect x="1042.5" y="147.0" width="89.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1045.5" y="158.0">one/nio/ht..</text>
</g>
<g>
<title>one.nio.http.Request (4 samples, 1.16%)</title><rect x="1042.5" y="131.0" width="13.7" height="15" fill="#6ad8d8" rx="2" ry="2"/>
<text x="1045.5" y="142.0"></text>
</g>
<g>
<title>one/nio/http/Request.&lt;init&gt; (11 samples, 3.20%)</title><rect x="1056.2" y="131.0" width="37.8" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1059.2" y="142.0">one..</text>
</g>
<g>
<title>java.lang.String[] (11 samples, 3.20%)</title><rect x="1056.2" y="115.0" width="37.8" height="15" fill="#54c2c2" rx="2" ry="2"/>
<text x="1059.2" y="126.0">jav..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 3.20%)</title><rect x="1094.0" y="131.0" width="37.7" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="1097.0" y="142.0">one..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (11 samples, 3.20%)</title><rect x="1094.0" y="115.0" width="37.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1097.0" y="126.0">one..</text>
</g>
<g>
<title>char[] (6 samples, 1.74%)</title><rect x="1094.0" y="99.0" width="20.5" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1097.0" y="110.0"></text>
</g>
<g>
<title>java.lang.String (2 samples, 0.58%)</title><rect x="1114.5" y="99.0" width="6.9" height="15" fill="#5dcbcb" rx="2" ry="2"/>
<text x="1117.5" y="110.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.87%)</title><rect x="1121.4" y="99.0" width="10.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1124.4" y="110.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (3 samples, 0.87%)</title><rect x="1121.4" y="83.0" width="10.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1124.4" y="94.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (3 samples, 0.87%)</title><rect x="1121.4" y="67.0" width="10.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1124.4" y="78.0"></text>
</g>
<g>
<title>byte[] (3 samples, 0.87%)</title><rect x="1121.4" y="51.0" width="10.3" height="15" fill="#69d7d7" rx="2" ry="2"/>
<text x="1124.4" y="62.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 4.94%)</title><rect x="1131.7" y="147.0" width="58.3" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1134.7" y="158.0">one/ni..</text>
</g>
<g>
<title>one/nio/util/Utf8.read (17 samples, 4.94%)</title><rect x="1131.7" y="131.0" width="58.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="1134.7" y="142.0">one/ni..</text>
</g>
<g>
<title>char[] (11 samples, 3.20%)</title><rect x="1131.7" y="115.0" width="37.7" height="15" fill="#62d0d0" rx="2" ry="2"/>
<text x="1134.7" y="126.0">cha..</text>
</g>
<g>
<title>java.lang.String (2 samples, 0.58%)</title><rect x="1169.4" y="115.0" width="6.9" height="15" fill="#5fcdcd" rx="2" ry="2"/>
<text x="1172.4" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 1.16%)</title><rect x="1176.3" y="115.0" width="13.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="1179.3" y="126.0"></text>
</g>
<g>
<title>java/lang/String.&lt;init&gt; (4 samples, 1.16%)</title><rect x="1176.3" y="99.0" width="13.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="1179.3" y="110.0"></text>
</g>
<g>
<title>java/lang/StringUTF16.compress (4 samples, 1.16%)</title><rect x="1176.3" y="83.0" width="13.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1179.3" y="94.0"></text>
</g>
<g>
<title>byte[] (4 samples, 1.16%)</title><rect x="1176.3" y="67.0" width="13.7" height="15" fill="#6ddbdb" rx="2" ry="2"/>
<text x="1179.3" y="78.0"></text>
</g>
</g>
</svg>
