<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (447 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>[C2 CompilerThre tid=5611] (49 samples, 10.96%)</title><rect x="10.0" y="883.0" width="129.4" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="13.0" y="894.0">[C2 CompilerThre..</text>
</g>
<g>
<title>[unknown] (2 samples, 0.45%)</title><rect x="10.0" y="867.0" width="5.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="878.0"></text>
</g>
<g>
<title>__GI___open (2 samples, 0.45%)</title><rect x="10.0" y="851.0" width="5.3" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="13.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="12.6" y="835.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="15.6" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="12.6" y="819.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="15.6" y="830.0"></text>
</g>
<g>
<title>__x64_sys_openat (1 samples, 0.22%)</title><rect x="12.6" y="803.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="15.6" y="814.0"></text>
</g>
<g>
<title>do_sys_open (1 samples, 0.22%)</title><rect x="12.6" y="787.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="15.6" y="798.0"></text>
</g>
<g>
<title>do_filp_open (1 samples, 0.22%)</title><rect x="12.6" y="771.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="15.6" y="782.0"></text>
</g>
<g>
<title>path_openat (1 samples, 0.22%)</title><rect x="12.6" y="755.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="15.6" y="766.0"></text>
</g>
<g>
<title>vfs_open (1 samples, 0.22%)</title><rect x="12.6" y="739.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="15.6" y="750.0"></text>
</g>
<g>
<title>do_dentry_open (1 samples, 0.22%)</title><rect x="12.6" y="723.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="15.6" y="734.0"></text>
</g>
<g>
<title>security_file_open (1 samples, 0.22%)</title><rect x="12.6" y="707.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="15.6" y="718.0"></text>
</g>
<g>
<title>apparmor_file_open (1 samples, 0.22%)</title><rect x="12.6" y="691.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="15.6" y="702.0"></text>
</g>
<g>
<title>aa_path_perm (1 samples, 0.22%)</title><rect x="12.6" y="675.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="15.6" y="686.0"></text>
</g>
<g>
<title>profile_path_perm.part.9 (1 samples, 0.22%)</title><rect x="12.6" y="659.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="15.6" y="670.0"></text>
</g>
<g>
<title>path_name (1 samples, 0.22%)</title><rect x="12.6" y="643.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="15.6" y="654.0"></text>
</g>
<g>
<title>aa_path_name (1 samples, 0.22%)</title><rect x="12.6" y="627.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="15.6" y="638.0"></text>
</g>
<g>
<title>d_absolute_path (1 samples, 0.22%)</title><rect x="12.6" y="611.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="15.6" y="622.0"></text>
</g>
<g>
<title>memcpy (1 samples, 0.22%)</title><rect x="12.6" y="595.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="15.6" y="606.0"></text>
</g>
<g>
<title>start_thread (47 samples, 10.51%)</title><rect x="15.3" y="867.0" width="124.1" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="18.3" y="878.0">start_thread</text>
</g>
<g>
<title>thread_native_entry(Thread*) (47 samples, 10.51%)</title><rect x="15.3" y="851.0" width="124.1" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="18.3" y="862.0">thread_native_e..</text>
</g>
<g>
<title>Thread::call_run() (47 samples, 10.51%)</title><rect x="15.3" y="835.0" width="124.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.3" y="846.0">Thread::call_ru..</text>
</g>
<g>
<title>JavaThread::run() (47 samples, 10.51%)</title><rect x="15.3" y="819.0" width="124.1" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="18.3" y="830.0">JavaThread::run()</text>
</g>
<g>
<title>CompileBroker::compiler_thread_loop() (47 samples, 10.51%)</title><rect x="15.3" y="803.0" width="124.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="18.3" y="814.0">CompileBroker::..</text>
</g>
<g>
<title>CompileBroker::invoke_compiler_on_method(CompileTask*) (47 samples, 10.51%)</title><rect x="15.3" y="787.0" width="124.1" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="18.3" y="798.0">CompileBroker::..</text>
</g>
<g>
<title>C2Compiler::compile_method(ciEnv*, ciMethod*, int, DirectiveSet*) (47 samples, 10.51%)</title><rect x="15.3" y="771.0" width="124.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.3" y="782.0">C2Compiler::com..</text>
</g>
<g>
<title>Compile::Compile(ciEnv*, C2Compiler*, ciMethod*, int, bool, bool, bool, DirectiveSet*) (47 samples, 10.51%)</title><rect x="15.3" y="755.0" width="124.1" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="18.3" y="766.0">Compile::Compil..</text>
</g>
<g>
<title>Compile::Code_Gen() (24 samples, 5.37%)</title><rect x="15.3" y="739.0" width="63.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="18.3" y="750.0">Compile..</text>
</g>
<g>
<title>Compile::Output() (1 samples, 0.22%)</title><rect x="15.3" y="723.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="18.3" y="734.0"></text>
</g>
<g>
<title>Compile::init_buffer(unsigned int*) (1 samples, 0.22%)</title><rect x="15.3" y="707.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="18.3" y="718.0"></text>
</g>
<g>
<title>Compile::shorten_branches(unsigned int*, int&amp;, int&amp;, int&amp;) (1 samples, 0.22%)</title><rect x="15.3" y="691.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="18.3" y="702.0"></text>
</g>
<g>
<title>Compile::fill_buffer(CodeBuffer*, unsigned int*) (1 samples, 0.22%)</title><rect x="17.9" y="723.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="20.9" y="734.0"></text>
</g>
<g>
<title>storeImmNKlassNode::emit(CodeBuffer&amp;, PhaseRegAlloc*) const (1 samples, 0.22%)</title><rect x="17.9" y="707.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="20.9" y="718.0"></text>
</g>
<g>
<title>MacroAssembler::set_narrow_klass(Address, Klass*) (1 samples, 0.22%)</title><rect x="17.9" y="691.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="20.9" y="702.0"></text>
</g>
<g>
<title>Assembler::mov_narrow_oop(Address, int, RelocationHolder const&amp;) (1 samples, 0.22%)</title><rect x="17.9" y="675.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="20.9" y="686.0"></text>
</g>
<g>
<title>relocInfo::initialize(CodeSection*, Relocation*) (1 samples, 0.22%)</title><rect x="17.9" y="659.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="20.9" y="670.0"></text>
</g>
<g>
<title>MachNode::alignment_required() const (1 samples, 0.22%)</title><rect x="20.6" y="723.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="23.6" y="734.0"></text>
</g>
<g>
<title>Matcher::match() (2 samples, 0.45%)</title><rect x="23.2" y="723.0" width="5.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="26.2" y="734.0"></text>
</g>
<g>
<title>Matcher::xform(Node*, int) (2 samples, 0.45%)</title><rect x="23.2" y="707.0" width="5.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="26.2" y="718.0"></text>
</g>
<g>
<title>Matcher::match_tree(Node const*) (2 samples, 0.45%)</title><rect x="23.2" y="691.0" width="5.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="26.2" y="702.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.22%)</title><rect x="23.2" y="675.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="26.2" y="686.0"></text>
</g>
<g>
<title>Matcher::Label_Root(Node const*, State*, Node*, Node*&amp;) (1 samples, 0.22%)</title><rect x="23.2" y="659.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="26.2" y="670.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.22%)</title><rect x="25.8" y="675.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="28.8" y="686.0"></text>
</g>
<g>
<title>PhaseCFG::do_global_code_motion() (1 samples, 0.22%)</title><rect x="28.5" y="723.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="31.5" y="734.0"></text>
</g>
<g>
<title>PhaseCFG::global_code_motion() (1 samples, 0.22%)</title><rect x="28.5" y="707.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="31.5" y="718.0"></text>
</g>
<g>
<title>PhaseCFG::schedule_local(Block*, GrowableArray&lt;int&gt;&amp;, VectorSet&amp;, long*) (1 samples, 0.22%)</title><rect x="28.5" y="691.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="31.5" y="702.0"></text>
</g>
<g>
<title>PhaseCFG::adjust_register_pressure(Node*, Block*, long*, bool) (1 samples, 0.22%)</title><rect x="28.5" y="675.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="31.5" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::lower_pressure(Block*, unsigned int, LRG&amp;, IndexSet*, PhaseChaitin::Pressure&amp;, PhaseChaitin::Pressure&amp;) (1 samples, 0.22%)</title><rect x="28.5" y="659.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="31.5" y="670.0"></text>
</g>
<g>
<title>RegMask::is_UP() const (1 samples, 0.22%)</title><rect x="28.5" y="643.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="31.5" y="654.0"></text>
</g>
<g>
<title>PhaseChaitin::Register_Allocate() (18 samples, 4.03%)</title><rect x="31.1" y="723.0" width="47.5" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="34.1" y="734.0">Phas..</text>
</g>
<g>
<title>MachNode::rematerialize() const (1 samples, 0.22%)</title><rect x="31.1" y="707.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="34.1" y="718.0"></text>
</g>
<g>
<title>Node::rematerialize() const (1 samples, 0.22%)</title><rect x="33.8" y="707.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="36.8" y="718.0"></text>
</g>
<g>
<title>PhaseAggressiveCoalesce::insert_copies(Matcher&amp;) (1 samples, 0.22%)</title><rect x="36.4" y="707.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="39.4" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::Select() (1 samples, 0.22%)</title><rect x="39.0" y="707.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="42.0" y="718.0"></text>
</g>
<g>
<title>PhaseIFG::re_insert(unsigned int) (1 samples, 0.22%)</title><rect x="39.0" y="691.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="42.0" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::Split(unsigned int, ResourceArea*) (2 samples, 0.45%)</title><rect x="41.7" y="707.0" width="5.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="44.7" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::build_ifg_physical(ResourceArea*) (3 samples, 0.67%)</title><rect x="47.0" y="707.0" width="7.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="50.0" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::interfere_with_live(unsigned int, IndexSet*) (1 samples, 0.22%)</title><rect x="49.6" y="691.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="52.6" y="702.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.22%)</title><rect x="49.6" y="675.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="52.6" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::remove_bound_register_from_interfering_live_ranges(LRG&amp;, IndexSet*, unsigned int&amp;) (1 samples, 0.22%)</title><rect x="52.2" y="691.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="55.2" y="702.0"></text>
</g>
<g>
<title>IndexSetIterator::advance_and_next() (1 samples, 0.22%)</title><rect x="52.2" y="675.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="55.2" y="686.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) (2 samples, 0.45%)</title><rect x="54.9" y="707.0" width="5.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="57.9" y="718.0"></text>
</g>
<g>
<title>PhaseChaitin::gather_lrg_masks(bool) [clone .constprop.87] (1 samples, 0.22%)</title><rect x="60.2" y="707.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="63.2" y="718.0"></text>
</g>
<g>
<title>RegMask::Size() const (1 samples, 0.22%)</title><rect x="60.2" y="691.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="63.2" y="702.0"></text>
</g>
<g>
<title>PhaseChaitin::post_allocate_copy_removal() (1 samples, 0.22%)</title><rect x="62.8" y="707.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="65.8" y="718.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, unsigned int, VectorSet&amp;) (1 samples, 0.22%)</title><rect x="65.4" y="707.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="68.4" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="65.4" y="691.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="68.4" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="65.4" y="675.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="68.4" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="65.4" y="659.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="68.4" y="670.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.22%)</title><rect x="65.4" y="643.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="68.4" y="654.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.22%)</title><rect x="65.4" y="627.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="68.4" y="638.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.22%)</title><rect x="65.4" y="611.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="68.4" y="622.0"></text>
</g>
<g>
<title>PhaseLive::compute(unsigned int) (1 samples, 0.22%)</title><rect x="68.1" y="707.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="71.1" y="718.0"></text>
</g>
<g>
<title>PhaseLive::add_liveout(Block*, IndexSet*, VectorSet&amp;) (1 samples, 0.22%)</title><rect x="68.1" y="691.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="71.1" y="702.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.22%)</title><rect x="68.1" y="675.0" width="2.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="71.1" y="686.0"></text>
</g>
<g>
<title>PhiNode::out_RegMask() const (1 samples, 0.22%)</title><rect x="70.7" y="707.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="73.7" y="718.0"></text>
</g>
<g>
<title>addP_rReg_immNode::ideal_Opcode() const (1 samples, 0.22%)</title><rect x="73.4" y="707.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="76.4" y="718.0"></text>
</g>
<g>
<title>find_lowest_bit(unsigned int) (1 samples, 0.22%)</title><rect x="76.0" y="707.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="79.0" y="718.0"></text>
</g>
<g>
<title>Compile::Optimize() (16 samples, 3.58%)</title><rect x="78.6" y="739.0" width="42.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="81.6" y="750.0">Comp..</text>
</g>
<g>
<title>Compile::final_graph_reshaping() (1 samples, 0.22%)</title><rect x="78.6" y="723.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="81.6" y="734.0"></text>
</g>
<g>
<title>Compile::final_graph_reshaping_walk(Node_Stack&amp;, Node*, Final_Reshape_Counts&amp;) (1 samples, 0.22%)</title><rect x="78.6" y="707.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="81.6" y="718.0"></text>
</g>
<g>
<title>Compile::optimize_loops(int&amp;, PhaseIterGVN&amp;, LoopOptsMode) [clone .part.341] (3 samples, 0.67%)</title><rect x="81.3" y="723.0" width="7.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="84.3" y="734.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (3 samples, 0.67%)</title><rect x="81.3" y="707.0" width="7.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="84.3" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_early(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.22%)</title><rect x="81.3" y="691.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="84.3" y="702.0"></text>
</g>
<g>
<title>CProjNode::is_CFG() const (1 samples, 0.22%)</title><rect x="81.3" y="675.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="84.3" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (2 samples, 0.45%)</title><rect x="83.9" y="691.0" width="5.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="86.9" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.22%)</title><rect x="86.6" y="675.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="89.6" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::get_late_ctrl(Node*, Node*) (1 samples, 0.22%)</title><rect x="86.6" y="659.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="89.6" y="670.0"></text>
</g>
<g>
<title>Compile::remove_speculative_types(PhaseIterGVN&amp;) [clone .part.258] (1 samples, 0.22%)</title><rect x="89.2" y="723.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="92.2" y="734.0"></text>
</g>
<g>
<title>PhaseCCP::analyze() (1 samples, 0.22%)</title><rect x="91.8" y="723.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="94.8" y="734.0"></text>
</g>
<g>
<title>AddPNode::bottom_type() const (1 samples, 0.22%)</title><rect x="91.8" y="707.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="94.8" y="718.0"></text>
</g>
<g>
<title>LoadNode::bottom_type() const (1 samples, 0.22%)</title><rect x="91.8" y="691.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="94.8" y="702.0"></text>
</g>
<g>
<title>PhaseCCP::do_transform() (1 samples, 0.22%)</title><rect x="94.5" y="723.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="97.5" y="734.0"></text>
</g>
<g>
<title>PhaseCCP::transform(Node*) (1 samples, 0.22%)</title><rect x="94.5" y="707.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="97.5" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_and_optimize(LoopOptsMode) (4 samples, 0.89%)</title><rect x="97.1" y="723.0" width="10.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="100.1" y="734.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.22%)</title><rect x="97.1" y="707.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="100.1" y="718.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.22%)</title><rect x="97.1" y="691.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="100.1" y="702.0"></text>
</g>
<g>
<title>IdealLoopTree::iteration_split_impl(PhaseIdealLoop*, Node_List&amp;) (1 samples, 0.22%)</title><rect x="97.1" y="675.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="100.1" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::insert_pre_post_loops(IdealLoopTree*, Node_List&amp;, bool) (1 samples, 0.22%)</title><rect x="97.1" y="659.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="100.1" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::clone_loop(IdealLoopTree*, Node_List&amp;, int, PhaseIdealLoop::CloneLoopMode, Node*) (1 samples, 0.22%)</title><rect x="97.1" y="643.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="100.1" y="654.0"></text>
</g>
<g>
<title>Node::set_req(unsigned int, Node*) (1 samples, 0.22%)</title><rect x="97.1" y="627.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="100.1" y="638.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.22%)</title><rect x="97.1" y="611.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="100.1" y="622.0"></text>
</g>
<g>
<title>IdealLoopTree::loop_predication(PhaseIdealLoop*) (1 samples, 0.22%)</title><rect x="99.8" y="707.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="102.8" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_impl(IdealLoopTree*) [clone .part.79] (1 samples, 0.22%)</title><rect x="99.8" y="691.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="102.8" y="702.0"></text>
</g>
<g>
<title>PhaseIdealLoop::loop_predication_follow_branches(Node*, IdealLoopTree*, float, PathFrequency&amp;, Node_Stack&amp;, VectorSet&amp;, Node_List&amp;) (1 samples, 0.22%)</title><rect x="99.8" y="675.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="102.8" y="686.0"></text>
</g>
<g>
<title>ProjNode::is_uncommon_trap_if_pattern(Deoptimization::DeoptReason) (1 samples, 0.22%)</title><rect x="99.8" y="659.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="102.8" y="670.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late(VectorSet&amp;, Node_List&amp;, Node_Stack&amp;) (1 samples, 0.22%)</title><rect x="102.4" y="707.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="105.4" y="718.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_late_post(Node*) (1 samples, 0.22%)</title><rect x="102.4" y="691.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="105.4" y="702.0"></text>
</g>
<g>
<title>MultiNode::is_CFG() const (1 samples, 0.22%)</title><rect x="102.4" y="675.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="105.4" y="686.0"></text>
</g>
<g>
<title>PhaseIdealLoop::build_loop_tree() (1 samples, 0.22%)</title><rect x="105.0" y="707.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="108.0" y="718.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (3 samples, 0.67%)</title><rect x="107.7" y="723.0" width="7.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="110.7" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::transform_old(Node*) (3 samples, 0.67%)</title><rect x="107.7" y="707.0" width="7.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="110.7" y="718.0"></text>
</g>
<g>
<title>PhiNode::Value(PhaseGVN*) const (1 samples, 0.22%)</title><rect x="107.7" y="691.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="110.7" y="702.0"></text>
</g>
<g>
<title>TypeOopPtr::cleanup_speculative() const (1 samples, 0.22%)</title><rect x="107.7" y="675.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="110.7" y="686.0"></text>
</g>
<g>
<title>TypeInstPtr::remove_speculative() const (1 samples, 0.22%)</title><rect x="107.7" y="659.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="110.7" y="670.0"></text>
</g>
<g>
<title>TypeInstPtr::make(TypePtr::PTR, ciKlass*, bool, ciObject*, int, int, TypePtr const*, int) (1 samples, 0.22%)</title><rect x="107.7" y="643.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="110.7" y="654.0"></text>
</g>
<g>
<title>RegionNode::Ideal(PhaseGVN*, bool) (1 samples, 0.22%)</title><rect x="110.3" y="691.0" width="2.7" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="113.3" y="702.0"></text>
</g>
<g>
<title>CProjNode::is_CFG() const (1 samples, 0.22%)</title><rect x="110.3" y="675.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="113.3" y="686.0"></text>
</g>
<g>
<title>Type::meet_helper(Type const*, bool) const (1 samples, 0.22%)</title><rect x="113.0" y="691.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="116.0" y="702.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_macro_nodes() (2 samples, 0.45%)</title><rect x="115.6" y="723.0" width="5.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="118.6" y="734.0"></text>
</g>
<g>
<title>PhaseIterGVN::optimize() (1 samples, 0.22%)</title><rect x="115.6" y="707.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="118.6" y="718.0"></text>
</g>
<g>
<title>MemBarNode::hash() const (1 samples, 0.22%)</title><rect x="115.6" y="691.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="118.6" y="702.0"></text>
</g>
<g>
<title>PhaseMacroExpand::expand_arraycopy_node(ArrayCopyNode*) (1 samples, 0.22%)</title><rect x="118.2" y="707.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="121.2" y="718.0"></text>
</g>
<g>
<title>PhaseMacroExpand::generate_arraycopy(ArrayCopyNode*, AllocateArrayNode*, Node**, MergeMemNode*, Node**, TypePtr const*, BasicType, Node*, Node*, Node*, Node*, Node*, bool, bool, RegionNode*) (1 samples, 0.22%)</title><rect x="118.2" y="691.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="121.2" y="702.0"></text>
</g>
<g>
<title>PhaseMacroExpand::generate_block_arraycopy(Node**, MergeMemNode**, Node*, TypePtr const*, BasicType, AllocateNode*, Node*, Node*, Node*, Node*, Node*, bool) (1 samples, 0.22%)</title><rect x="118.2" y="675.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="121.2" y="686.0"></text>
</g>
<g>
<title>PhaseMacroExpand::generate_unchecked_arraycopy(Node**, MergeMemNode**, TypePtr const*, BasicType, bool, Node*, Node*, Node*, Node*, Node*, bool) (1 samples, 0.22%)</title><rect x="118.2" y="659.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="121.2" y="670.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="118.2" y="643.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="121.2" y="654.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="118.2" y="627.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="121.2" y="638.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="118.2" y="611.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="121.2" y="622.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (6 samples, 1.34%)</title><rect x="120.9" y="739.0" width="15.8" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="123.9" y="750.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (6 samples, 1.34%)</title><rect x="120.9" y="723.0" width="15.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="123.9" y="734.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (6 samples, 1.34%)</title><rect x="120.9" y="707.0" width="15.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="123.9" y="718.0"></text>
</g>
<g>
<title>Parse::do_one_block() (6 samples, 1.34%)</title><rect x="120.9" y="691.0" width="15.8" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="123.9" y="702.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (6 samples, 1.34%)</title><rect x="120.9" y="675.0" width="15.8" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="123.9" y="686.0"></text>
</g>
<g>
<title>Parse::do_call() (6 samples, 1.34%)</title><rect x="120.9" y="659.0" width="15.8" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="123.9" y="670.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (4 samples, 0.89%)</title><rect x="120.9" y="643.0" width="10.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="123.9" y="654.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (4 samples, 0.89%)</title><rect x="120.9" y="627.0" width="10.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="123.9" y="638.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (4 samples, 0.89%)</title><rect x="120.9" y="611.0" width="10.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="123.9" y="622.0"></text>
</g>
<g>
<title>Parse::do_one_block() (4 samples, 0.89%)</title><rect x="120.9" y="595.0" width="10.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="123.9" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (4 samples, 0.89%)</title><rect x="120.9" y="579.0" width="10.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="123.9" y="590.0"></text>
</g>
<g>
<title>Parse::do_call() (3 samples, 0.67%)</title><rect x="120.9" y="563.0" width="7.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="123.9" y="574.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (3 samples, 0.67%)</title><rect x="120.9" y="547.0" width="7.9" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="123.9" y="558.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (3 samples, 0.67%)</title><rect x="120.9" y="531.0" width="7.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="123.9" y="542.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (3 samples, 0.67%)</title><rect x="120.9" y="515.0" width="7.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="123.9" y="526.0"></text>
</g>
<g>
<title>Parse::do_one_block() (3 samples, 0.67%)</title><rect x="120.9" y="499.0" width="7.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="123.9" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (3 samples, 0.67%)</title><rect x="120.9" y="483.0" width="7.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="123.9" y="494.0"></text>
</g>
<g>
<title>Parse::array_load(BasicType) (2 samples, 0.45%)</title><rect x="120.9" y="467.0" width="5.3" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="123.9" y="478.0"></text>
</g>
<g>
<title>Parse::array_addressing(BasicType, int, Type const*&amp;) (2 samples, 0.45%)</title><rect x="120.9" y="451.0" width="5.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="123.9" y="462.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.22%)</title><rect x="120.9" y="435.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="123.9" y="446.0"></text>
</g>
<g>
<title>GraphKit::make_runtime_call(int, TypeFunc const*, unsigned char*, char const*, TypePtr const*, Node*, Node*, Node*, Node*, Node*, Node*, Node*, Node*) (1 samples, 0.22%)</title><rect x="120.9" y="419.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="123.9" y="430.0"></text>
</g>
<g>
<title>PhaseGVN::transform_no_reclaim(Node*) (1 samples, 0.22%)</title><rect x="123.5" y="435.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="126.5" y="446.0"></text>
</g>
<g>
<title>Node::uncast() const (1 samples, 0.22%)</title><rect x="123.5" y="419.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="126.5" y="430.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.22%)</title><rect x="126.2" y="467.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="129.2" y="478.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.22%)</title><rect x="126.2" y="451.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="129.2" y="462.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.22%)</title><rect x="126.2" y="435.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="129.2" y="446.0"></text>
</g>
<g>
<title>Parse::build_exits() (1 samples, 0.22%)</title><rect x="126.2" y="419.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="129.2" y="430.0"></text>
</g>
<g>
<title>GraphKit::clone_map() (1 samples, 0.22%)</title><rect x="126.2" y="403.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="129.2" y="414.0"></text>
</g>
<g>
<title>MergeMemNode::make(Node*) (1 samples, 0.22%)</title><rect x="126.2" y="387.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="129.2" y="398.0"></text>
</g>
<g>
<title>MergeMemNode::MergeMemNode(Node*) (1 samples, 0.22%)</title><rect x="126.2" y="371.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="129.2" y="382.0"></text>
</g>
<g>
<title>Parse::do_instanceof() (1 samples, 0.22%)</title><rect x="128.8" y="563.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="131.8" y="574.0"></text>
</g>
<g>
<title>GraphKit::gen_instanceof(Node*, Node*, bool) (1 samples, 0.22%)</title><rect x="128.8" y="547.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="131.8" y="558.0"></text>
</g>
<g>
<title>GraphKit::load_object_klass(Node*) (1 samples, 0.22%)</title><rect x="128.8" y="531.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="131.8" y="542.0"></text>
</g>
<g>
<title>TypeLong::make(long) (1 samples, 0.22%)</title><rect x="128.8" y="515.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="131.8" y="526.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="128.8" y="499.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="131.8" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="128.8" y="483.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="131.8" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="128.8" y="467.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="131.8" y="478.0"></text>
</g>
<g>
<title>PredictedCallGenerator::generate(JVMState*) (2 samples, 0.45%)</title><rect x="131.4" y="643.0" width="5.3" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="134.4" y="654.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.45%)</title><rect x="131.4" y="627.0" width="5.3" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="134.4" y="638.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.45%)</title><rect x="131.4" y="611.0" width="5.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="134.4" y="622.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.45%)</title><rect x="131.4" y="595.0" width="5.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="134.4" y="606.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.45%)</title><rect x="131.4" y="579.0" width="5.3" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="134.4" y="590.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.45%)</title><rect x="131.4" y="563.0" width="5.3" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="134.4" y="574.0"></text>
</g>
<g>
<title>Parse::do_call() (2 samples, 0.45%)</title><rect x="131.4" y="547.0" width="5.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="134.4" y="558.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (2 samples, 0.45%)</title><rect x="131.4" y="531.0" width="5.3" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="134.4" y="542.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (2 samples, 0.45%)</title><rect x="131.4" y="515.0" width="5.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="134.4" y="526.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (2 samples, 0.45%)</title><rect x="131.4" y="499.0" width="5.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="134.4" y="510.0"></text>
</g>
<g>
<title>Parse::do_one_block() (2 samples, 0.45%)</title><rect x="131.4" y="483.0" width="5.3" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="134.4" y="494.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (2 samples, 0.45%)</title><rect x="131.4" y="467.0" width="5.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="134.4" y="478.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.22%)</title><rect x="131.4" y="451.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="134.4" y="462.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.22%)</title><rect x="131.4" y="435.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="134.4" y="446.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.22%)</title><rect x="131.4" y="419.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="134.4" y="430.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.22%)</title><rect x="131.4" y="403.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="134.4" y="414.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.22%)</title><rect x="131.4" y="387.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="134.4" y="398.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.22%)</title><rect x="131.4" y="371.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="134.4" y="382.0"></text>
</g>
<g>
<title>Parse::do_call() (1 samples, 0.22%)</title><rect x="131.4" y="355.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="134.4" y="366.0"></text>
</g>
<g>
<title>ParseGenerator::generate(JVMState*) (1 samples, 0.22%)</title><rect x="131.4" y="339.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="134.4" y="350.0"></text>
</g>
<g>
<title>Parse::Parse(JVMState*, ciMethod*, float) (1 samples, 0.22%)</title><rect x="131.4" y="323.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="134.4" y="334.0"></text>
</g>
<g>
<title>Parse::do_all_blocks() (1 samples, 0.22%)</title><rect x="131.4" y="307.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="134.4" y="318.0"></text>
</g>
<g>
<title>Parse::do_one_block() (1 samples, 0.22%)</title><rect x="131.4" y="291.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="134.4" y="302.0"></text>
</g>
<g>
<title>Parse::do_one_bytecode() (1 samples, 0.22%)</title><rect x="131.4" y="275.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="134.4" y="286.0"></text>
</g>
<g>
<title>Parse::do_ifnull(BoolTest::mask, Node*) (1 samples, 0.22%)</title><rect x="131.4" y="259.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="134.4" y="270.0"></text>
</g>
<g>
<title>GraphKit::uncommon_trap(int, ciKlass*, char const*, bool, bool) (1 samples, 0.22%)</title><rect x="131.4" y="243.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="134.4" y="254.0"></text>
</g>
<g>
<title>GraphKit::kill_dead_locals() (1 samples, 0.22%)</title><rect x="131.4" y="227.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="134.4" y="238.0"></text>
</g>
<g>
<title>ciMethod::liveness_at_bci(int) (1 samples, 0.22%)</title><rect x="131.4" y="211.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="134.4" y="222.0"></text>
</g>
<g>
<title>MethodLiveness::get_liveness_at(int) (1 samples, 0.22%)</title><rect x="131.4" y="195.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="134.4" y="206.0"></text>
</g>
<g>
<title>BitMap::set_union(BitMap const&amp;) (1 samples, 0.22%)</title><rect x="131.4" y="179.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="134.4" y="190.0"></text>
</g>
<g>
<title>PhaseTransform::zerocon(BasicType) (1 samples, 0.22%)</title><rect x="134.1" y="451.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="137.1" y="462.0"></text>
</g>
<g>
<title>ciEnv::register_method(ciMethod*, int, CodeOffsets*, int, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, bool, bool, RTMState) (1 samples, 0.22%)</title><rect x="136.7" y="739.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="139.7" y="750.0"></text>
</g>
<g>
<title>nmethod::new_nmethod(methodHandle const&amp;, int, int, CodeOffsets*, int, DebugInformationRecorder*, Dependencies*, CodeBuffer*, int, OopMapSet*, ExceptionHandlerTable*, ImplicitExceptionTable*, AbstractCompiler*, int, _jobject*, _jobject*) (1 samples, 0.22%)</title><rect x="136.7" y="723.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="139.7" y="734.0"></text>
</g>
<g>
<title>Method::is_method() const volatile (1 samples, 0.22%)</title><rect x="136.7" y="707.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="139.7" y="718.0"></text>
</g>
<g>
<title>[NIO Selector #0 tid=5648] (12 samples, 2.68%)</title><rect x="139.4" y="883.0" width="31.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="142.4" y="894.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (12 samples, 2.68%)</title><rect x="139.4" y="867.0" width="31.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="142.4" y="878.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (1 samples, 0.22%)</title><rect x="147.3" y="851.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="150.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (8 samples, 1.79%)</title><rect x="149.9" y="851.0" width="21.1" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="152.9" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8 samples, 1.79%)</title><rect x="149.9" y="835.0" width="21.1" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="152.9" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (2 samples, 0.45%)</title><rect x="149.9" y="819.0" width="5.3" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="152.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.45%)</title><rect x="149.9" y="803.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="152.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.45%)</title><rect x="149.9" y="787.0" width="5.3" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="152.9" y="798.0"></text>
</g>
<g>
<title>RequestHandler3_putValueByKey.handleRequest (1 samples, 0.22%)</title><rect x="149.9" y="771.0" width="2.7" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="152.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.putValueByKey (1 samples, 0.22%)</title><rect x="149.9" y="755.0" width="2.7" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="152.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (1 samples, 0.22%)</title><rect x="149.9" y="739.0" width="2.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="152.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (1 samples, 0.22%)</title><rect x="149.9" y="723.0" width="2.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="152.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.22%)</title><rect x="149.9" y="707.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.22%)</title><rect x="149.9" y="691.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="152.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.22%)</title><rect x="149.9" y="675.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="152.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.22%)</title><rect x="149.9" y="659.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="152.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.22%)</title><rect x="149.9" y="643.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="152.9" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.22%)</title><rect x="149.9" y="627.0" width="2.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="152.9" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="149.9" y="611.0" width="2.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="152.9" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="149.9" y="595.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="152.9" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.22%)</title><rect x="149.9" y="579.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="152.9" y="590.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.22%)</title><rect x="149.9" y="563.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="152.9" y="574.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.22%)</title><rect x="149.9" y="547.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="152.9" y="558.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.22%)</title><rect x="149.9" y="531.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="152.9" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.22%)</title><rect x="149.9" y="515.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="152.9" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="149.9" y="499.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="152.9" y="510.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.findHandlerByHost (1 samples, 0.22%)</title><rect x="152.6" y="771.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="155.6" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (6 samples, 1.34%)</title><rect x="155.2" y="819.0" width="15.8" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="158.2" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (6 samples, 1.34%)</title><rect x="155.2" y="803.0" width="15.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="158.2" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.45%)</title><rect x="155.2" y="787.0" width="5.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="158.2" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.45%)</title><rect x="155.2" y="771.0" width="5.3" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="158.2" y="782.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (2 samples, 0.45%)</title><rect x="155.2" y="755.0" width="5.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="158.2" y="766.0"></text>
</g>
<g>
<title>__recv (4 samples, 0.89%)</title><rect x="160.5" y="787.0" width="10.5" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="163.5" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.89%)</title><rect x="160.5" y="771.0" width="10.5" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="163.5" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.89%)</title><rect x="160.5" y="755.0" width="10.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="163.5" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 0.89%)</title><rect x="160.5" y="739.0" width="10.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="163.5" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (4 samples, 0.89%)</title><rect x="160.5" y="723.0" width="10.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="163.5" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (4 samples, 0.89%)</title><rect x="160.5" y="707.0" width="10.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="163.5" y="718.0"></text>
</g>
<g>
<title>inet6_recvmsg (4 samples, 0.89%)</title><rect x="160.5" y="691.0" width="10.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="163.5" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (4 samples, 0.89%)</title><rect x="160.5" y="675.0" width="10.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="163.5" y="686.0"></text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 0.45%)</title><rect x="160.5" y="659.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="163.5" y="670.0"></text>
</g>
<g>
<title>__skb_datagram_iter (2 samples, 0.45%)</title><rect x="160.5" y="643.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="163.5" y="654.0"></text>
</g>
<g>
<title>simple_copy_to_iter (2 samples, 0.45%)</title><rect x="160.5" y="627.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="163.5" y="638.0"></text>
</g>
<g>
<title>_copy_to_iter (2 samples, 0.45%)</title><rect x="160.5" y="611.0" width="5.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="163.5" y="622.0"></text>
</g>
<g>
<title>copy_user_generic_string (1 samples, 0.22%)</title><rect x="163.1" y="595.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="166.1" y="606.0"></text>
</g>
<g>
<title>tcp_cleanup_rbuf (2 samples, 0.45%)</title><rect x="165.7" y="659.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="168.7" y="670.0"></text>
</g>
<g>
<title>tcp_send_ack (2 samples, 0.45%)</title><rect x="165.7" y="643.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="168.7" y="654.0"></text>
</g>
<g>
<title>__tcp_send_ack.part.46 (2 samples, 0.45%)</title><rect x="165.7" y="627.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="168.7" y="638.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (2 samples, 0.45%)</title><rect x="165.7" y="611.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="168.7" y="622.0"></text>
</g>
<g>
<title>ip_queue_xmit (2 samples, 0.45%)</title><rect x="165.7" y="595.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="168.7" y="606.0"></text>
</g>
<g>
<title>__ip_queue_xmit (2 samples, 0.45%)</title><rect x="165.7" y="579.0" width="5.3" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="168.7" y="590.0"></text>
</g>
<g>
<title>ip_local_out (2 samples, 0.45%)</title><rect x="165.7" y="563.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="168.7" y="574.0"></text>
</g>
<g>
<title>ip_output (2 samples, 0.45%)</title><rect x="165.7" y="547.0" width="5.3" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="168.7" y="558.0"></text>
</g>
<g>
<title>ip_finish_output (2 samples, 0.45%)</title><rect x="165.7" y="531.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="168.7" y="542.0"></text>
</g>
<g>
<title>__ip_finish_output (2 samples, 0.45%)</title><rect x="165.7" y="515.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="168.7" y="526.0"></text>
</g>
<g>
<title>ip_finish_output2 (2 samples, 0.45%)</title><rect x="165.7" y="499.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="168.7" y="510.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (2 samples, 0.45%)</title><rect x="165.7" y="483.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="168.7" y="494.0"></text>
</g>
<g>
<title>do_softirq.part.20 (2 samples, 0.45%)</title><rect x="165.7" y="467.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="168.7" y="478.0"></text>
</g>
<g>
<title>do_softirq_own_stack (2 samples, 0.45%)</title><rect x="165.7" y="451.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="168.7" y="462.0"></text>
</g>
<g>
<title>__softirqentry_text_start (2 samples, 0.45%)</title><rect x="165.7" y="435.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="168.7" y="446.0"></text>
</g>
<g>
<title>__kfree_skb_flush (1 samples, 0.22%)</title><rect x="168.4" y="419.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="171.4" y="430.0"></text>
</g>
<g>
<title>[NIO Selector #1 tid=5649] (12 samples, 2.68%)</title><rect x="171.0" y="883.0" width="31.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="174.0" y="894.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (12 samples, 2.68%)</title><rect x="171.0" y="867.0" width="31.7" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="174.0" y="878.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (6 samples, 1.34%)</title><rect x="173.7" y="851.0" width="15.8" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="176.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (6 samples, 1.34%)</title><rect x="173.7" y="835.0" width="15.8" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="176.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (6 samples, 1.34%)</title><rect x="173.7" y="819.0" width="15.8" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="176.7" y="830.0"></text>
</g>
<g>
<title>epoll_wait (6 samples, 1.34%)</title><rect x="173.7" y="803.0" width="15.8" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="176.7" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.34%)</title><rect x="173.7" y="787.0" width="15.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="176.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.34%)</title><rect x="173.7" y="771.0" width="15.8" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="176.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (6 samples, 1.34%)</title><rect x="173.7" y="755.0" width="15.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="176.7" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (6 samples, 1.34%)</title><rect x="173.7" y="739.0" width="15.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="176.7" y="750.0"></text>
</g>
<g>
<title>ep_poll (6 samples, 1.34%)</title><rect x="173.7" y="723.0" width="15.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="176.7" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (6 samples, 1.34%)</title><rect x="173.7" y="707.0" width="15.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="176.7" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (6 samples, 1.34%)</title><rect x="173.7" y="691.0" width="15.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="176.7" y="702.0"></text>
</g>
<g>
<title>schedule (6 samples, 1.34%)</title><rect x="173.7" y="675.0" width="15.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="176.7" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (6 samples, 1.34%)</title><rect x="173.7" y="659.0" width="15.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="176.7" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (5 samples, 1.12%)</title><rect x="176.3" y="643.0" width="13.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="179.3" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (5 samples, 1.12%)</title><rect x="189.5" y="851.0" width="13.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.5" y="862.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (4 samples, 0.89%)</title><rect x="189.5" y="835.0" width="10.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.5" y="846.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (3 samples, 0.67%)</title><rect x="189.5" y="819.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="192.5" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (2 samples, 0.45%)</title><rect x="189.5" y="803.0" width="5.3" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="192.5" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (2 samples, 0.45%)</title><rect x="189.5" y="787.0" width="5.3" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="192.5" y="798.0"></text>
</g>
<g>
<title>RequestHandler3_putValueByKey.handleRequest (2 samples, 0.45%)</title><rect x="189.5" y="771.0" width="5.3" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="192.5" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.putValueByKey (2 samples, 0.45%)</title><rect x="189.5" y="755.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="192.5" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.45%)</title><rect x="189.5" y="739.0" width="5.3" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="192.5" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.45%)</title><rect x="189.5" y="723.0" width="5.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="192.5" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.45%)</title><rect x="189.5" y="707.0" width="5.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="192.5" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.45%)</title><rect x="189.5" y="691.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="192.5" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.45%)</title><rect x="189.5" y="675.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.5" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.45%)</title><rect x="189.5" y="659.0" width="5.3" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="192.5" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.45%)</title><rect x="189.5" y="643.0" width="5.3" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="192.5" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.45%)</title><rect x="189.5" y="627.0" width="5.3" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="192.5" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.45%)</title><rect x="189.5" y="611.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="192.5" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="189.5" y="595.0" width="5.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="192.5" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.45%)</title><rect x="189.5" y="579.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="192.5" y="590.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.45%)</title><rect x="189.5" y="563.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="192.5" y="574.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.45%)</title><rect x="189.5" y="547.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="192.5" y="558.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.45%)</title><rect x="189.5" y="531.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="192.5" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.45%)</title><rect x="189.5" y="515.0" width="5.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="192.5" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.45%)</title><rect x="189.5" y="499.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="192.5" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getHeader (1 samples, 0.22%)</title><rect x="194.8" y="803.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="197.8" y="814.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (1 samples, 0.22%)</title><rect x="197.4" y="819.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="200.4" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (1 samples, 0.22%)</title><rect x="197.4" y="803.0" width="2.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="200.4" y="814.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.22%)</title><rect x="197.4" y="787.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="200.4" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="197.4" y="771.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="200.4" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="197.4" y="755.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="200.4" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.22%)</title><rect x="197.4" y="739.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="200.4" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.22%)</title><rect x="197.4" y="723.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="200.4" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.22%)</title><rect x="197.4" y="707.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.4" y="718.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.22%)</title><rect x="197.4" y="691.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="200.4" y="702.0"></text>
</g>
<g>
<title>tcp_recvmsg (1 samples, 0.22%)</title><rect x="197.4" y="675.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="200.4" y="686.0"></text>
</g>
<g>
<title>tcp_rcv_space_adjust (1 samples, 0.22%)</title><rect x="197.4" y="659.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="200.4" y="670.0"></text>
</g>
<g>
<title>tcp_mstamp_refresh (1 samples, 0.22%)</title><rect x="197.4" y="643.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="200.4" y="654.0"></text>
</g>
<g>
<title>ktime_get (1 samples, 0.22%)</title><rect x="197.4" y="627.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="200.4" y="638.0"></text>
</g>
<g>
<title>read_tsc (1 samples, 0.22%)</title><rect x="197.4" y="611.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="200.4" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.22%)</title><rect x="200.1" y="835.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="203.1" y="846.0"></text>
</g>
<g>
<title>gettimeofday (1 samples, 0.22%)</title><rect x="200.1" y="819.0" width="2.6" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="203.1" y="830.0"></text>
</g>
<g>
<title>[vdso] (1 samples, 0.22%)</title><rect x="200.1" y="803.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="203.1" y="814.0"></text>
</g>
<g>
<title>[NIO Selector #2 tid=5650] (13 samples, 2.91%)</title><rect x="202.7" y="883.0" width="34.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="205.7" y="894.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (13 samples, 2.91%)</title><rect x="202.7" y="867.0" width="34.3" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="205.7" y="878.0">on..</text>
</g>
<g>
<title>one/nio/net/NativeSelector$2.next (1 samples, 0.22%)</title><rect x="205.3" y="851.0" width="2.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="208.3" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.45%)</title><rect x="208.0" y="851.0" width="5.3" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="211.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.45%)</title><rect x="208.0" y="835.0" width="5.3" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="211.0" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.45%)</title><rect x="208.0" y="819.0" width="5.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="211.0" y="830.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.45%)</title><rect x="208.0" y="803.0" width="5.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="211.0" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.45%)</title><rect x="208.0" y="787.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="211.0" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="208.0" y="771.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="211.0" y="782.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (2 samples, 0.45%)</title><rect x="208.0" y="755.0" width="5.3" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="211.0" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (2 samples, 0.45%)</title><rect x="208.0" y="739.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="211.0" y="750.0"></text>
</g>
<g>
<title>ep_poll (2 samples, 0.45%)</title><rect x="208.0" y="723.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="211.0" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (2 samples, 0.45%)</title><rect x="208.0" y="707.0" width="5.3" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="211.0" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (2 samples, 0.45%)</title><rect x="208.0" y="691.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="211.0" y="702.0"></text>
</g>
<g>
<title>schedule (2 samples, 0.45%)</title><rect x="208.0" y="675.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="211.0" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (2 samples, 0.45%)</title><rect x="208.0" y="659.0" width="5.3" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="211.0" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (2 samples, 0.45%)</title><rect x="208.0" y="643.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="211.0" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (9 samples, 2.01%)</title><rect x="213.3" y="851.0" width="23.7" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="216.3" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (8 samples, 1.79%)</title><rect x="213.3" y="835.0" width="21.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.3" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (4 samples, 0.89%)</title><rect x="213.3" y="819.0" width="10.5" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="216.3" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.67%)</title><rect x="213.3" y="803.0" width="7.9" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="216.3" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.67%)</title><rect x="213.3" y="787.0" width="7.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="216.3" y="798.0"></text>
</g>
<g>
<title>RequestHandler3_putValueByKey.handleRequest (2 samples, 0.45%)</title><rect x="213.3" y="771.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.3" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.putValueByKey (2 samples, 0.45%)</title><rect x="213.3" y="755.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="216.3" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (2 samples, 0.45%)</title><rect x="213.3" y="739.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="216.3" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (2 samples, 0.45%)</title><rect x="213.3" y="723.0" width="5.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="216.3" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.45%)</title><rect x="213.3" y="707.0" width="5.2" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="216.3" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.45%)</title><rect x="213.3" y="691.0" width="5.2" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="216.3" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.45%)</title><rect x="213.3" y="675.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="216.3" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.45%)</title><rect x="213.3" y="659.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="216.3" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.45%)</title><rect x="213.3" y="643.0" width="5.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="216.3" y="654.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.45%)</title><rect x="213.3" y="627.0" width="5.2" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="216.3" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.45%)</title><rect x="213.3" y="611.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="216.3" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="213.3" y="595.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="216.3" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.45%)</title><rect x="213.3" y="579.0" width="5.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="216.3" y="590.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.45%)</title><rect x="213.3" y="563.0" width="5.2" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="216.3" y="574.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.45%)</title><rect x="213.3" y="547.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="216.3" y="558.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.45%)</title><rect x="213.3" y="531.0" width="5.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="216.3" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.45%)</title><rect x="213.3" y="515.0" width="5.2" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="216.3" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.45%)</title><rect x="213.3" y="499.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="216.3" y="510.0"></text>
</g>
<g>
<title>one/nio/http/Request.getPath (1 samples, 0.22%)</title><rect x="218.5" y="771.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="221.5" y="782.0"></text>
</g>
<g>
<title>java/lang/String.substring (1 samples, 0.22%)</title><rect x="218.5" y="755.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="221.5" y="766.0"></text>
</g>
<g>
<title>java/lang/StringLatin1.newString (1 samples, 0.22%)</title><rect x="218.5" y="739.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="221.5" y="750.0"></text>
</g>
<g>
<title>java/util/Arrays.copyOfRange (1 samples, 0.22%)</title><rect x="218.5" y="723.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="221.5" y="734.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (1 samples, 0.22%)</title><rect x="221.2" y="803.0" width="2.6" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="224.2" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.22%)</title><rect x="221.2" y="787.0" width="2.6" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="224.2" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (1 samples, 0.22%)</title><rect x="221.2" y="771.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="224.2" y="782.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (4 samples, 0.89%)</title><rect x="223.8" y="819.0" width="10.6" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="226.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (4 samples, 0.89%)</title><rect x="223.8" y="803.0" width="10.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="226.8" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (1 samples, 0.22%)</title><rect x="226.5" y="787.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="229.5" y="798.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.22%)</title><rect x="226.5" y="771.0" width="2.6" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="229.5" y="782.0"></text>
</g>
<g>
<title>__recv (2 samples, 0.45%)</title><rect x="229.1" y="787.0" width="5.3" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="232.1" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.45%)</title><rect x="229.1" y="771.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="232.1" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="229.1" y="755.0" width="5.3" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="232.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (2 samples, 0.45%)</title><rect x="229.1" y="739.0" width="5.3" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="232.1" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (2 samples, 0.45%)</title><rect x="229.1" y="723.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="232.1" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (2 samples, 0.45%)</title><rect x="229.1" y="707.0" width="5.3" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="232.1" y="718.0"></text>
</g>
<g>
<title>inet6_recvmsg (1 samples, 0.22%)</title><rect x="229.1" y="691.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="232.1" y="702.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.22%)</title><rect x="231.7" y="691.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="234.7" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.22%)</title><rect x="231.7" y="675.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="234.7" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.22%)</title><rect x="231.7" y="659.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="234.7" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.22%)</title><rect x="231.7" y="643.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="234.7" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.22%)</title><rect x="231.7" y="627.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="234.7" y="638.0"></text>
</g>
<g>
<title>aa_label_next_confined (1 samples, 0.22%)</title><rect x="231.7" y="611.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="234.7" y="622.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.22%)</title><rect x="234.4" y="835.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="237.4" y="846.0"></text>
</g>
<g>
<title>[NIO Selector #3 tid=5651] (12 samples, 2.68%)</title><rect x="237.0" y="883.0" width="31.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="240.0" y="894.0">[N..</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (12 samples, 2.68%)</title><rect x="237.0" y="867.0" width="31.7" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="240.0" y="878.0">on..</text>
</g>
<g>
<title>I2C/C2I adapters (1 samples, 0.22%)</title><rect x="237.0" y="851.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="240.0" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (2 samples, 0.45%)</title><rect x="239.7" y="851.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.7" y="862.0"></text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (2 samples, 0.45%)</title><rect x="239.7" y="835.0" width="5.2" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="242.7" y="846.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.45%)</title><rect x="239.7" y="819.0" width="5.2" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="242.7" y="830.0"></text>
</g>
<g>
<title>epoll_wait (2 samples, 0.45%)</title><rect x="239.7" y="803.0" width="5.2" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="242.7" y="814.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.45%)</title><rect x="239.7" y="787.0" width="5.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="242.7" y="798.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="239.7" y="771.0" width="5.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="242.7" y="782.0"></text>
</g>
<g>
<title>__x64_sys_epoll_wait (1 samples, 0.22%)</title><rect x="242.3" y="755.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="245.3" y="766.0"></text>
</g>
<g>
<title>do_epoll_wait (1 samples, 0.22%)</title><rect x="242.3" y="739.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="245.3" y="750.0"></text>
</g>
<g>
<title>ep_poll (1 samples, 0.22%)</title><rect x="242.3" y="723.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="245.3" y="734.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range (1 samples, 0.22%)</title><rect x="242.3" y="707.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="245.3" y="718.0"></text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (1 samples, 0.22%)</title><rect x="242.3" y="691.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="245.3" y="702.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.22%)</title><rect x="242.3" y="675.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="245.3" y="686.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.22%)</title><rect x="242.3" y="659.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="245.3" y="670.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.22%)</title><rect x="242.3" y="643.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="245.3" y="654.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (9 samples, 2.01%)</title><rect x="244.9" y="851.0" width="23.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.9" y="862.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (9 samples, 2.01%)</title><rect x="244.9" y="835.0" width="23.8" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.9" y="846.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (6 samples, 1.34%)</title><rect x="244.9" y="819.0" width="15.9" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.9" y="830.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (3 samples, 0.67%)</title><rect x="244.9" y="803.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.9" y="814.0"></text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (3 samples, 0.67%)</title><rect x="244.9" y="787.0" width="8.0" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="247.9" y="798.0"></text>
</g>
<g>
<title>RequestHandler3_putValueByKey.handleRequest (3 samples, 0.67%)</title><rect x="244.9" y="771.0" width="8.0" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="247.9" y="782.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.putValueByKey (3 samples, 0.67%)</title><rect x="244.9" y="755.0" width="8.0" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="247.9" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.execute (3 samples, 0.67%)</title><rect x="244.9" y="739.0" width="8.0" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="247.9" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.offer (3 samples, 0.67%)</title><rect x="244.9" y="723.0" width="8.0" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="247.9" y="734.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (3 samples, 0.67%)</title><rect x="244.9" y="707.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.9" y="718.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (3 samples, 0.67%)</title><rect x="244.9" y="691.0" width="8.0" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="247.9" y="702.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (3 samples, 0.67%)</title><rect x="244.9" y="675.0" width="8.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="247.9" y="686.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (3 samples, 0.67%)</title><rect x="244.9" y="659.0" width="8.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="247.9" y="670.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (3 samples, 0.67%)</title><rect x="244.9" y="643.0" width="8.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="247.9" y="654.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.22%)</title><rect x="244.9" y="627.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="247.9" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.22%)</title><rect x="244.9" y="611.0" width="2.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="247.9" y="622.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="244.9" y="595.0" width="2.7" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="247.9" y="606.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="244.9" y="579.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="247.9" y="590.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="244.9" y="563.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="247.9" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.45%)</title><rect x="247.6" y="627.0" width="5.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="250.6" y="638.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.45%)</title><rect x="247.6" y="611.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="250.6" y="622.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="247.6" y="595.0" width="5.3" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="250.6" y="606.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.45%)</title><rect x="247.6" y="579.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="250.6" y="590.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.45%)</title><rect x="247.6" y="563.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="250.6" y="574.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.22%)</title><rect x="247.6" y="547.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="250.6" y="558.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.22%)</title><rect x="247.6" y="531.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="250.6" y="542.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.22%)</title><rect x="247.6" y="515.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="250.6" y="526.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="247.6" y="499.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="250.6" y="510.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.22%)</title><rect x="250.2" y="547.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="253.2" y="558.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.parseRequest (2 samples, 0.45%)</title><rect x="252.9" y="803.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="255.9" y="814.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.45%)</title><rect x="252.9" y="787.0" width="5.2" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="255.9" y="798.0"></text>
</g>
<g>
<title>one/nio/util/Utf8.read (2 samples, 0.45%)</title><rect x="252.9" y="771.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="255.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.startParsingRequestBody (1 samples, 0.22%)</title><rect x="258.1" y="803.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="261.1" y="814.0"></text>
</g>
<g>
<title>java/lang/Integer.parseInt (1 samples, 0.22%)</title><rect x="258.1" y="787.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="261.1" y="798.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (3 samples, 0.67%)</title><rect x="260.8" y="819.0" width="7.9" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="263.8" y="830.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (3 samples, 0.67%)</title><rect x="260.8" y="803.0" width="7.9" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="263.8" y="814.0"></text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (2 samples, 0.45%)</title><rect x="260.8" y="787.0" width="5.3" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="263.8" y="798.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.22%)</title><rect x="260.8" y="771.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="263.8" y="782.0"></text>
</g>
<g>
<title>__memcpy_avx_unaligned (1 samples, 0.22%)</title><rect x="263.4" y="771.0" width="2.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="266.4" y="782.0"></text>
</g>
<g>
<title>__recv (1 samples, 0.22%)</title><rect x="266.1" y="787.0" width="2.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="269.1" y="798.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="266.1" y="771.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="269.1" y="782.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="266.1" y="755.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="269.1" y="766.0"></text>
</g>
<g>
<title>__x64_sys_recvfrom (1 samples, 0.22%)</title><rect x="266.1" y="739.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="269.1" y="750.0"></text>
</g>
<g>
<title>__sys_recvfrom (1 samples, 0.22%)</title><rect x="266.1" y="723.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="269.1" y="734.0"></text>
</g>
<g>
<title>sock_recvmsg (1 samples, 0.22%)</title><rect x="266.1" y="707.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="269.1" y="718.0"></text>
</g>
<g>
<title>security_socket_recvmsg (1 samples, 0.22%)</title><rect x="266.1" y="691.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="269.1" y="702.0"></text>
</g>
<g>
<title>apparmor_socket_recvmsg (1 samples, 0.22%)</title><rect x="266.1" y="675.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="269.1" y="686.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.22%)</title><rect x="266.1" y="659.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="269.1" y="670.0"></text>
</g>
<g>
<title>aa_sk_perm (1 samples, 0.22%)</title><rect x="266.1" y="643.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="269.1" y="654.0"></text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (1 samples, 0.22%)</title><rect x="266.1" y="627.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="269.1" y="638.0"></text>
</g>
<g>
<title>aa_profile_af_perm (1 samples, 0.22%)</title><rect x="266.1" y="611.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="269.1" y="622.0"></text>
</g>
<g>
<title>[worker-0 tid=5669] (84 samples, 18.79%)</title><rect x="268.7" y="883.0" width="221.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="271.7" y="894.0">[worker-0 tid=5669]</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.22%)</title><rect x="268.7" y="867.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="271.7" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.22%)</title><rect x="268.7" y="851.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="271.7" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.22%)</title><rect x="268.7" y="835.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="271.7" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="268.7" y="819.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="271.7" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="268.7" y="803.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="271.7" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="268.7" y="787.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="271.7" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.22%)</title><rect x="268.7" y="771.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="271.7" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.22%)</title><rect x="268.7" y="755.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="271.7" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.22%)</title><rect x="268.7" y="739.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="271.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.22%)</title><rect x="268.7" y="723.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="271.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.22%)</title><rect x="268.7" y="707.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="271.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="268.7" y="691.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="271.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.22%)</title><rect x="268.7" y="675.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="271.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.22%)</title><rect x="268.7" y="659.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="271.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.22%)</title><rect x="268.7" y="643.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="271.7" y="654.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.22%)</title><rect x="268.7" y="627.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="271.7" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.22%)</title><rect x="268.7" y="611.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="271.7" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.22%)</title><rect x="268.7" y="595.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="271.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="268.7" y="579.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="271.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="268.7" y="563.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="271.7" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="268.7" y="547.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="271.7" y="558.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.22%)</title><rect x="268.7" y="531.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="271.7" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="268.7" y="515.0" width="2.6" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="271.7" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="268.7" y="499.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="271.7" y="510.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.22%)</title><rect x="268.7" y="483.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="271.7" y="494.0"></text>
</g>
<g>
<title>[unknown_Java] (5 samples, 1.12%)</title><rect x="271.3" y="867.0" width="13.2" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="274.3" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.22%)</title><rect x="271.3" y="851.0" width="2.7" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="274.3" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.22%)</title><rect x="271.3" y="835.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="274.3" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="271.3" y="819.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="274.3" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="271.3" y="803.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="274.3" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="271.3" y="787.0" width="2.7" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="274.3" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.22%)</title><rect x="271.3" y="771.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="274.3" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.22%)</title><rect x="271.3" y="755.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="274.3" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.22%)</title><rect x="271.3" y="739.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="274.3" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.22%)</title><rect x="271.3" y="723.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="274.3" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.22%)</title><rect x="271.3" y="707.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="274.3" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="271.3" y="691.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="274.3" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.22%)</title><rect x="271.3" y="675.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="274.3" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.22%)</title><rect x="271.3" y="659.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="274.3" y="670.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.22%)</title><rect x="271.3" y="643.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="274.3" y="654.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.22%)</title><rect x="271.3" y="627.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="274.3" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.22%)</title><rect x="271.3" y="611.0" width="2.7" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="274.3" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.22%)</title><rect x="271.3" y="595.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="274.3" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="271.3" y="579.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="274.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="271.3" y="563.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="274.3" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="271.3" y="547.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="274.3" y="558.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.22%)</title><rect x="271.3" y="531.0" width="2.7" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="274.3" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="271.3" y="515.0" width="2.7" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="274.3" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="271.3" y="499.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="274.3" y="510.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.22%)</title><rect x="271.3" y="483.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="274.3" y="494.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.45%)</title><rect x="274.0" y="851.0" width="5.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="277.0" y="862.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.45%)</title><rect x="274.0" y="835.0" width="5.3" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="277.0" y="846.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="274.0" y="819.0" width="5.3" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="277.0" y="830.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.45%)</title><rect x="274.0" y="803.0" width="5.3" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="277.0" y="814.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.45%)</title><rect x="274.0" y="787.0" width="5.3" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="277.0" y="798.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.45%)</title><rect x="274.0" y="771.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="277.0" y="782.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.22%)</title><rect x="274.0" y="755.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="277.0" y="766.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.22%)</title><rect x="276.6" y="755.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="279.6" y="766.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.22%)</title><rect x="276.6" y="739.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="279.6" y="750.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="276.6" y="723.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="279.6" y="734.0"></text>
</g>
<g>
<title>call_stub (2 samples, 0.45%)</title><rect x="279.3" y="851.0" width="5.2" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="282.3" y="862.0"></text>
</g>
<g>
<title>java/lang/Thread.run (78 samples, 17.45%)</title><rect x="284.5" y="867.0" width="205.9" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="287.5" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (78 samples, 17.45%)</title><rect x="284.5" y="851.0" width="205.9" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="287.5" y="862.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (78 samples, 17.45%)</title><rect x="284.5" y="835.0" width="205.9" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="287.5" y="846.0">java/util/concurrent/Thread..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (4 samples, 0.89%)</title><rect x="287.2" y="819.0" width="10.5" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="290.2" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (4 samples, 0.89%)</title><rect x="287.2" y="803.0" width="10.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="290.2" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (3 samples, 0.67%)</title><rect x="287.2" y="787.0" width="7.9" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="290.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.67%)</title><rect x="287.2" y="771.0" width="7.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="290.2" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.67%)</title><rect x="287.2" y="755.0" width="7.9" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="290.2" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (2 samples, 0.45%)</title><rect x="287.2" y="739.0" width="5.3" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="290.2" y="750.0"></text>
</g>
<g>
<title>Parker::park(bool, long) (1 samples, 0.22%)</title><rect x="287.2" y="723.0" width="2.6" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="290.2" y="734.0"></text>
</g>
<g>
<title>os::is_interrupted(Thread*, bool) (1 samples, 0.22%)</title><rect x="289.8" y="723.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="292.8" y="734.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.22%)</title><rect x="292.5" y="739.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="295.5" y="750.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.22%)</title><rect x="292.5" y="723.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="295.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="292.5" y="707.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="295.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="292.5" y="691.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="295.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.22%)</title><rect x="292.5" y="675.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="295.5" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.22%)</title><rect x="292.5" y="659.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="295.5" y="670.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.22%)</title><rect x="292.5" y="643.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="295.5" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.22%)</title><rect x="292.5" y="627.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="295.5" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.22%)</title><rect x="292.5" y="611.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="295.5" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.22%)</title><rect x="292.5" y="595.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="295.5" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.22%)</title><rect x="292.5" y="579.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="295.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.22%)</title><rect x="295.1" y="787.0" width="2.6" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="298.1" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.22%)</title><rect x="295.1" y="771.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="298.1" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.22%)</title><rect x="295.1" y="755.0" width="2.6" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="298.1" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.22%)</title><rect x="295.1" y="739.0" width="2.6" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="298.1" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.22%)</title><rect x="295.1" y="723.0" width="2.6" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="298.1" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.22%)</title><rect x="295.1" y="707.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="298.1" y="718.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="295.1" y="691.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="298.1" y="702.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="295.1" y="675.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="298.1" y="686.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="295.1" y="659.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="298.1" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl$$Lambda$66/712804772.run (73 samples, 16.33%)</title><rect x="297.7" y="819.0" width="192.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="300.7" y="830.0">ru/mail/polis/service/bas..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.lambda$putValueByKey$2 (73 samples, 16.33%)</title><rect x="297.7" y="803.0" width="192.7" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="300.7" y="814.0">ru/mail/polis/service/bas..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 1.79%)</title><rect x="297.7" y="787.0" width="21.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.7" y="798.0">o..</text>
</g>
<g>
<title>java/lang/String.equalsIgnoreCase (1 samples, 0.22%)</title><rect x="297.7" y="771.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="300.7" y="782.0"></text>
</g>
<g>
<title>java/lang/String.regionMatches (1 samples, 0.22%)</title><rect x="297.7" y="755.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="300.7" y="766.0"></text>
</g>
<g>
<title>jbyte_disjoint_arraycopy (1 samples, 0.22%)</title><rect x="297.7" y="739.0" width="2.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="300.7" y="750.0"></text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (7 samples, 1.57%)</title><rect x="300.4" y="771.0" width="18.5" height="15" fill="#5eef5e" rx="2" ry="2"/>
<text x="303.4" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.22%)</title><rect x="300.4" y="755.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="303.4" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 1.34%)</title><rect x="303.0" y="755.0" width="15.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="306.0" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (6 samples, 1.34%)</title><rect x="303.0" y="739.0" width="15.9" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="306.0" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (6 samples, 1.34%)</title><rect x="303.0" y="723.0" width="15.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="306.0" y="734.0"></text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (6 samples, 1.34%)</title><rect x="303.0" y="707.0" width="15.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="306.0" y="718.0"></text>
</g>
<g>
<title>__send (6 samples, 1.34%)</title><rect x="303.0" y="691.0" width="15.9" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="306.0" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.34%)</title><rect x="303.0" y="675.0" width="15.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="306.0" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.34%)</title><rect x="303.0" y="659.0" width="15.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="306.0" y="670.0"></text>
</g>
<g>
<title>__x64_sys_sendto (6 samples, 1.34%)</title><rect x="303.0" y="643.0" width="15.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="306.0" y="654.0"></text>
</g>
<g>
<title>__sys_sendto (6 samples, 1.34%)</title><rect x="303.0" y="627.0" width="15.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="306.0" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (6 samples, 1.34%)</title><rect x="303.0" y="611.0" width="15.9" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="306.0" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (6 samples, 1.34%)</title><rect x="303.0" y="595.0" width="15.9" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="306.0" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 1.34%)</title><rect x="303.0" y="579.0" width="15.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="306.0" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (6 samples, 1.34%)</title><rect x="303.0" y="563.0" width="15.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="306.0" y="574.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 1.34%)</title><rect x="303.0" y="547.0" width="15.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="306.0" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 1.34%)</title><rect x="303.0" y="531.0" width="15.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="306.0" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (6 samples, 1.34%)</title><rect x="303.0" y="515.0" width="15.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="306.0" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 1.34%)</title><rect x="303.0" y="499.0" width="15.9" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="306.0" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 1.34%)</title><rect x="303.0" y="483.0" width="15.9" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="306.0" y="494.0"></text>
</g>
<g>
<title>__ip_queue_xmit (6 samples, 1.34%)</title><rect x="303.0" y="467.0" width="15.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="306.0" y="478.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 1.34%)</title><rect x="303.0" y="451.0" width="15.9" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="306.0" y="462.0"></text>
</g>
<g>
<title>ip_output (6 samples, 1.34%)</title><rect x="303.0" y="435.0" width="15.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="306.0" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 1.34%)</title><rect x="303.0" y="419.0" width="15.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="306.0" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (6 samples, 1.34%)</title><rect x="303.0" y="403.0" width="15.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="306.0" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 1.34%)</title><rect x="303.0" y="387.0" width="15.9" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="306.0" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 1.34%)</title><rect x="303.0" y="371.0" width="15.9" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="306.0" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.20 (6 samples, 1.34%)</title><rect x="303.0" y="355.0" width="15.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="306.0" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (6 samples, 1.34%)</title><rect x="303.0" y="339.0" width="15.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="306.0" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (6 samples, 1.34%)</title><rect x="303.0" y="323.0" width="15.9" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="306.0" y="334.0"></text>
</g>
<g>
<title>net_rx_action (6 samples, 1.34%)</title><rect x="303.0" y="307.0" width="15.9" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="306.0" y="318.0"></text>
</g>
<g>
<title>process_backlog (6 samples, 1.34%)</title><rect x="303.0" y="291.0" width="15.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="306.0" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb (6 samples, 1.34%)</title><rect x="303.0" y="275.0" width="15.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="306.0" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (6 samples, 1.34%)</title><rect x="303.0" y="259.0" width="15.9" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="306.0" y="270.0"></text>
</g>
<g>
<title>ip_rcv (6 samples, 1.34%)</title><rect x="303.0" y="243.0" width="15.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="306.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (6 samples, 1.34%)</title><rect x="303.0" y="227.0" width="15.9" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="306.0" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (6 samples, 1.34%)</title><rect x="303.0" y="211.0" width="15.9" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="306.0" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (6 samples, 1.34%)</title><rect x="303.0" y="195.0" width="15.9" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="306.0" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (6 samples, 1.34%)</title><rect x="303.0" y="179.0" width="15.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="306.0" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (6 samples, 1.34%)</title><rect x="303.0" y="163.0" width="15.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="306.0" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 1.12%)</title><rect x="305.7" y="147.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="308.7" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 1.12%)</title><rect x="305.7" y="131.0" width="13.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="308.7" y="142.0"></text>
</g>
<g>
<title>tcp_data_ready (5 samples, 1.12%)</title><rect x="305.7" y="115.0" width="13.2" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="308.7" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (5 samples, 1.12%)</title><rect x="305.7" y="99.0" width="13.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="308.7" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (5 samples, 1.12%)</title><rect x="305.7" y="83.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="308.7" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (5 samples, 1.12%)</title><rect x="305.7" y="67.0" width="13.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="308.7" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.12%)</title><rect x="305.7" y="51.0" width="13.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="308.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.upsert (63 samples, 14.09%)</title><rect x="318.9" y="787.0" width="166.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="321.9" y="798.0">ru/mail/polis/dao/bas..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (63 samples, 14.09%)</title><rect x="318.9" y="771.0" width="166.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="321.9" y="782.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (63 samples, 14.09%)</title><rect x="318.9" y="755.0" width="166.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="321.9" y="766.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (43 samples, 9.62%)</title><rect x="321.5" y="739.0" width="113.5" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="324.5" y="750.0">Java_org_rocks..</text>
</g>
<g>
<title>__libc_free (1 samples, 0.22%)</title><rect x="324.1" y="723.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="327.1" y="734.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (41 samples, 9.17%)</title><rect x="326.8" y="723.0" width="108.2" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="329.8" y="734.0">rocksdb_put_h..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (41 samples, 9.17%)</title><rect x="326.8" y="707.0" width="108.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="329.8" y="718.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (41 samples, 9.17%)</title><rect x="326.8" y="691.0" width="108.2" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="329.8" y="702.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (41 samples, 9.17%)</title><rect x="326.8" y="675.0" width="108.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="329.8" y="686.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (40 samples, 8.95%)</title><rect x="326.8" y="659.0" width="105.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="329.8" y="670.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (40 samples, 8.95%)</title><rect x="326.8" y="643.0" width="105.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="329.8" y="654.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (6 samples, 1.34%)</title><rect x="326.8" y="627.0" width="15.8" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="329.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 1.34%)</title><rect x="326.8" y="611.0" width="15.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="329.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 1.34%)</title><rect x="326.8" y="595.0" width="15.8" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="329.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 1.34%)</title><rect x="326.8" y="579.0" width="15.8" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="329.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 1.34%)</title><rect x="326.8" y="563.0" width="15.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="329.8" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (6 samples, 1.34%)</title><rect x="326.8" y="547.0" width="15.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="329.8" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (6 samples, 1.34%)</title><rect x="326.8" y="531.0" width="15.8" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="329.8" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (6 samples, 1.34%)</title><rect x="326.8" y="515.0" width="15.8" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="329.8" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (4 samples, 0.89%)</title><rect x="326.8" y="499.0" width="10.5" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="329.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (4 samples, 0.89%)</title><rect x="326.8" y="483.0" width="10.5" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="329.8" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (4 samples, 0.89%)</title><rect x="326.8" y="467.0" width="10.5" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="329.8" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="326.8" y="451.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="329.8" y="462.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.22%)</title><rect x="326.8" y="435.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="329.8" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="326.8" y="419.0" width="2.6" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="329.8" y="430.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.67%)</title><rect x="329.4" y="451.0" width="7.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="332.4" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (3 samples, 0.67%)</title><rect x="329.4" y="435.0" width="7.9" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="332.4" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.45%)</title><rect x="332.1" y="419.0" width="5.2" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="335.1" y="430.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.22%)</title><rect x="337.3" y="499.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="340.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="340.0" y="499.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="343.0" y="510.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="340.0" y="483.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="343.0" y="494.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="340.0" y="467.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="343.0" y="478.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.22%)</title><rect x="340.0" y="451.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="343.0" y="462.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.22%)</title><rect x="340.0" y="435.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="343.0" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (25 samples, 5.59%)</title><rect x="342.6" y="627.0" width="66.0" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="345.6" y="638.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (25 samples, 5.59%)</title><rect x="342.6" y="611.0" width="66.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="345.6" y="622.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (25 samples, 5.59%)</title><rect x="342.6" y="595.0" width="66.0" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="345.6" y="606.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (25 samples, 5.59%)</title><rect x="342.6" y="579.0" width="66.0" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="345.6" y="590.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (25 samples, 5.59%)</title><rect x="342.6" y="563.0" width="66.0" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="345.6" y="574.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (25 samples, 5.59%)</title><rect x="342.6" y="547.0" width="66.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="345.6" y="558.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (25 samples, 5.59%)</title><rect x="342.6" y="531.0" width="66.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="345.6" y="542.0">rocksdb..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (25 samples, 5.59%)</title><rect x="342.6" y="515.0" width="66.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="345.6" y="526.0">bool ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (23 samples, 5.15%)</title><rect x="342.6" y="499.0" width="60.7" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="345.6" y="510.0">/tmp/l..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (20 samples, 4.47%)</title><rect x="350.5" y="483.0" width="52.8" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="353.5" y="494.0">/tmp/..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="350.5" y="467.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="353.5" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (19 samples, 4.25%)</title><rect x="353.2" y="467.0" width="50.1" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="356.2" y="478.0">rocks..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="353.2" y="451.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="356.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (18 samples, 4.03%)</title><rect x="355.8" y="451.0" width="47.5" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="358.8" y="462.0">rock..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.89%)</title><rect x="358.5" y="435.0" width="10.5" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="361.5" y="446.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (4 samples, 0.89%)</title><rect x="358.5" y="419.0" width="10.5" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="361.5" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 0.89%)</title><rect x="358.5" y="403.0" width="10.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="361.5" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="366.4" y="387.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="369.4" y="398.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (5 samples, 1.12%)</title><rect x="369.0" y="435.0" width="13.2" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="372.0" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (5 samples, 1.12%)</title><rect x="369.0" y="419.0" width="13.2" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="372.0" y="430.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.22%)</title><rect x="369.0" y="403.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="372.0" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (4 samples, 0.89%)</title><rect x="371.7" y="403.0" width="10.5" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="374.7" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.45%)</title><rect x="374.3" y="387.0" width="5.3" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="377.3" y="398.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.22%)</title><rect x="374.3" y="371.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="377.3" y="382.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.22%)</title><rect x="376.9" y="371.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="379.9" y="382.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.22%)</title><rect x="379.6" y="387.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="382.6" y="398.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 1.12%)</title><rect x="382.2" y="435.0" width="13.2" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="385.2" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.12%)</title><rect x="382.2" y="419.0" width="13.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="385.2" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.12%)</title><rect x="382.2" y="403.0" width="13.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="385.2" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.12%)</title><rect x="382.2" y="387.0" width="13.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="385.2" y="398.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.12%)</title><rect x="382.2" y="371.0" width="13.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="385.2" y="382.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 1.12%)</title><rect x="382.2" y="355.0" width="13.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="385.2" y="366.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 1.12%)</title><rect x="382.2" y="339.0" width="13.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="385.2" y="350.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 1.12%)</title><rect x="382.2" y="323.0" width="13.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="385.2" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.12%)</title><rect x="382.2" y="307.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="385.2" y="318.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.22%)</title><rect x="395.4" y="435.0" width="2.7" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="398.4" y="446.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.45%)</title><rect x="398.1" y="435.0" width="5.2" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="401.1" y="446.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.22%)</title><rect x="400.7" y="419.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="403.7" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.45%)</title><rect x="403.3" y="499.0" width="5.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="406.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="403.3" y="483.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="406.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.22%)</title><rect x="406.0" y="483.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="409.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 1.12%)</title><rect x="408.6" y="627.0" width="13.2" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="411.6" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="419.2" y="611.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="422.2" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="419.2" y="595.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="422.2" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="419.2" y="579.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="422.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (3 samples, 0.67%)</title><rect x="421.8" y="627.0" width="7.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="424.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (3 samples, 0.67%)</title><rect x="421.8" y="611.0" width="7.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="424.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.22%)</title><rect x="429.7" y="627.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="432.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Put(rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="432.4" y="659.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="435.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::EncodeVarint32(char*, unsigned int) [clone .plt] (1 samples, 0.22%)</title><rect x="432.4" y="643.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="435.4" y="654.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.67%)</title><rect x="435.0" y="739.0" width="7.9" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="438.0" y="750.0"></text>
</g>
<g>
<title>__libc_write (1 samples, 0.22%)</title><rect x="435.0" y="723.0" width="2.7" height="15" fill="#f77878" rx="2" ry="2"/>
<text x="438.0" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="435.0" y="707.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="438.0" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="435.0" y="691.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="438.0" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (1 samples, 0.22%)</title><rect x="435.0" y="675.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.0" y="686.0"></text>
</g>
<g>
<title>ksys_write (1 samples, 0.22%)</title><rect x="435.0" y="659.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="438.0" y="670.0"></text>
</g>
<g>
<title>vfs_write (1 samples, 0.22%)</title><rect x="435.0" y="643.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="438.0" y="654.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.22%)</title><rect x="435.0" y="627.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="438.0" y="638.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.22%)</title><rect x="435.0" y="611.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="438.0" y="622.0"></text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.22%)</title><rect x="435.0" y="595.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.0" y="606.0"></text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.22%)</title><rect x="435.0" y="579.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="438.0" y="590.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.22%)</title><rect x="435.0" y="563.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="438.0" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.22%)</title><rect x="435.0" y="547.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="438.0" y="558.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.22%)</title><rect x="435.0" y="531.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="438.0" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.22%)</title><rect x="435.0" y="515.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="438.0" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.22%)</title><rect x="435.0" y="499.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="438.0" y="510.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.22%)</title><rect x="435.0" y="483.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="438.0" y="494.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.22%)</title><rect x="435.0" y="467.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="438.0" y="478.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.22%)</title><rect x="435.0" y="451.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="438.0" y="462.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.22%)</title><rect x="435.0" y="435.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="438.0" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (1 samples, 0.22%)</title><rect x="435.0" y="419.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="438.0" y="430.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.22%)</title><rect x="435.0" y="403.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="438.0" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.22%)</title><rect x="435.0" y="387.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="438.0" y="398.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (2 samples, 0.45%)</title><rect x="437.7" y="723.0" width="5.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="440.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.45%)</title><rect x="437.7" y="707.0" width="5.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="440.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="437.7" y="691.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="440.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.45%)</title><rect x="437.7" y="675.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="440.7" y="686.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.45%)</title><rect x="437.7" y="659.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="440.7" y="670.0"></text>
</g>
<g>
<title>futex_wait (2 samples, 0.45%)</title><rect x="437.7" y="643.0" width="5.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="440.7" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (2 samples, 0.45%)</title><rect x="437.7" y="627.0" width="5.2" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="440.7" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.22%)</title><rect x="440.3" y="611.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="443.3" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.22%)</title><rect x="440.3" y="595.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="443.3" y="606.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (1 samples, 0.22%)</title><rect x="442.9" y="739.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="445.9" y="750.0"></text>
</g>
<g>
<title>__pthread_cond_signal (4 samples, 0.89%)</title><rect x="445.6" y="739.0" width="10.5" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="448.6" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.89%)</title><rect x="445.6" y="723.0" width="10.5" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="448.6" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.89%)</title><rect x="445.6" y="707.0" width="10.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="448.6" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.89%)</title><rect x="445.6" y="691.0" width="10.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="448.6" y="702.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.89%)</title><rect x="445.6" y="675.0" width="10.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="448.6" y="686.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.89%)</title><rect x="445.6" y="659.0" width="10.5" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="448.6" y="670.0"></text>
</g>
<g>
<title>__raw_callee_save___pv_queued_spin_unlock (1 samples, 0.22%)</title><rect x="445.6" y="643.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="448.6" y="654.0"></text>
</g>
<g>
<title>wake_up_q (3 samples, 0.67%)</title><rect x="448.2" y="643.0" width="7.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="451.2" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (3 samples, 0.67%)</title><rect x="448.2" y="627.0" width="7.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="451.2" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.67%)</title><rect x="448.2" y="611.0" width="7.9" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="451.2" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.22%)</title><rect x="456.1" y="739.0" width="2.7" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="459.1" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (10 samples, 2.24%)</title><rect x="458.8" y="739.0" width="26.4" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="461.8" y="750.0">r..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (10 samples, 2.24%)</title><rect x="458.8" y="723.0" width="26.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="461.8" y="734.0">r..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (10 samples, 2.24%)</title><rect x="458.8" y="707.0" width="26.4" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="461.8" y="718.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (10 samples, 2.24%)</title><rect x="458.8" y="691.0" width="26.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="461.8" y="702.0">o..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (10 samples, 2.24%)</title><rect x="458.8" y="675.0" width="26.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="461.8" y="686.0">o..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (10 samples, 2.24%)</title><rect x="458.8" y="659.0" width="26.4" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="461.8" y="670.0">J..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.22%)</title><rect x="458.8" y="643.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="461.8" y="654.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.22%)</title><rect x="461.4" y="643.0" width="2.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="464.4" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.22%)</title><rect x="461.4" y="627.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="464.4" y="638.0"></text>
</g>
<g>
<title>jni_NewByteArray (5 samples, 1.12%)</title><rect x="464.0" y="643.0" width="13.2" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="467.0" y="654.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (2 samples, 0.45%)</title><rect x="464.0" y="627.0" width="5.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="467.0" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.22%)</title><rect x="469.3" y="627.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="472.3" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.22%)</title><rect x="472.0" y="627.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="475.0" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="472.0" y="611.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="475.0" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="472.0" y="595.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="475.0" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="472.0" y="579.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="475.0" y="590.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (1 samples, 0.22%)</title><rect x="474.6" y="627.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="477.6" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.22%)</title><rect x="474.6" y="611.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="477.6" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (1 samples, 0.22%)</title><rect x="474.6" y="595.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="477.6" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.67%)</title><rect x="477.2" y="643.0" width="8.0" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="480.2" y="654.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (2 samples, 0.45%)</title><rect x="479.9" y="627.0" width="5.3" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="482.9" y="638.0"></text>
</g>
<g>
<title>ResourceMark::reset_to_mark() (1 samples, 0.22%)</title><rect x="482.5" y="611.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="485.5" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/Utils.getByteBufferFromByteArray (2 samples, 0.45%)</title><rect x="485.2" y="787.0" width="5.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="488.2" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.45%)</title><rect x="485.2" y="771.0" width="5.2" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="488.2" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (2 samples, 0.45%)</title><rect x="485.2" y="755.0" width="5.2" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="488.2" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (2 samples, 0.45%)</title><rect x="485.2" y="739.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.2" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (2 samples, 0.45%)</title><rect x="485.2" y="723.0" width="5.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="488.2" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (2 samples, 0.45%)</title><rect x="485.2" y="707.0" width="5.2" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="488.2" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.22%)</title><rect x="487.8" y="691.0" width="2.6" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="490.8" y="702.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.22%)</title><rect x="487.8" y="675.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="490.8" y="686.0"></text>
</g>
<g>
<title>[worker-1 tid=5670] (88 samples, 19.69%)</title><rect x="490.4" y="883.0" width="232.4" height="15" fill="#f06f6f" rx="2" ry="2"/>
<text x="493.4" y="894.0">[worker-1 tid=5670]</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.22%)</title><rect x="490.4" y="867.0" width="2.7" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="493.4" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.22%)</title><rect x="490.4" y="851.0" width="2.7" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="493.4" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.22%)</title><rect x="490.4" y="835.0" width="2.7" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="493.4" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="490.4" y="819.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="493.4" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="490.4" y="803.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="493.4" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="490.4" y="787.0" width="2.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="493.4" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.22%)</title><rect x="490.4" y="771.0" width="2.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="493.4" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.22%)</title><rect x="490.4" y="755.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="493.4" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (1 samples, 0.22%)</title><rect x="490.4" y="739.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="493.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.22%)</title><rect x="490.4" y="723.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="493.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.22%)</title><rect x="490.4" y="707.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="493.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="490.4" y="691.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="493.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.22%)</title><rect x="490.4" y="675.0" width="2.7" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="493.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.22%)</title><rect x="490.4" y="659.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="493.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (1 samples, 0.22%)</title><rect x="490.4" y="643.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="493.4" y="654.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.22%)</title><rect x="490.4" y="627.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="493.4" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.22%)</title><rect x="490.4" y="611.0" width="2.7" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="493.4" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.22%)</title><rect x="490.4" y="595.0" width="2.7" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="493.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="490.4" y="579.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="493.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="490.4" y="563.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="493.4" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="490.4" y="547.0" width="2.7" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="493.4" y="558.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.22%)</title><rect x="490.4" y="531.0" width="2.7" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="493.4" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="490.4" y="515.0" width="2.7" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="493.4" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="490.4" y="499.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="493.4" y="510.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.22%)</title><rect x="490.4" y="483.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="493.4" y="494.0"></text>
</g>
<g>
<title>[unknown_Java] (1 samples, 0.22%)</title><rect x="493.1" y="867.0" width="2.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="496.1" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (1 samples, 0.22%)</title><rect x="493.1" y="851.0" width="2.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="496.1" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (1 samples, 0.22%)</title><rect x="493.1" y="835.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="496.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="493.1" y="819.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="496.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="493.1" y="803.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="496.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="493.1" y="787.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="496.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (1 samples, 0.22%)</title><rect x="493.1" y="771.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="496.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (1 samples, 0.22%)</title><rect x="493.1" y="755.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="496.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.22%)</title><rect x="493.1" y="739.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="496.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.22%)</title><rect x="493.1" y="723.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="496.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.22%)</title><rect x="493.1" y="707.0" width="2.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="496.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="493.1" y="691.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="496.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.22%)</title><rect x="493.1" y="675.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="496.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.22%)</title><rect x="493.1" y="659.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="496.1" y="670.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.22%)</title><rect x="493.1" y="643.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="496.1" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.22%)</title><rect x="493.1" y="627.0" width="2.6" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="496.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="493.1" y="611.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="496.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="493.1" y="595.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="496.1" y="606.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="493.1" y="579.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="496.1" y="590.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.22%)</title><rect x="493.1" y="563.0" width="2.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="496.1" y="574.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="493.1" y="547.0" width="2.6" height="15" fill="#fd7f7f" rx="2" ry="2"/>
<text x="496.1" y="558.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="493.1" y="531.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="496.1" y="542.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.22%)</title><rect x="493.1" y="515.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="496.1" y="526.0"></text>
</g>
<g>
<title>java/lang/Thread.run (86 samples, 19.24%)</title><rect x="495.7" y="867.0" width="227.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="498.7" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (86 samples, 19.24%)</title><rect x="495.7" y="851.0" width="227.1" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="498.7" y="862.0">java/util/concurrent/ThreadPoo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (86 samples, 19.24%)</title><rect x="495.7" y="835.0" width="227.1" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="498.7" y="846.0">java/util/concurrent/ThreadPoo..</text>
</g>
<g>
<title>I2C/C2I adapters (2 samples, 0.45%)</title><rect x="495.7" y="819.0" width="5.3" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="498.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (6 samples, 1.34%)</title><rect x="501.0" y="819.0" width="15.8" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="504.0" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (6 samples, 1.34%)</title><rect x="501.0" y="803.0" width="15.8" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="504.0" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.89%)</title><rect x="501.0" y="787.0" width="10.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="504.0" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.addConditionWaiter (1 samples, 0.22%)</title><rect x="501.0" y="771.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="504.0" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.67%)</title><rect x="503.6" y="771.0" width="8.0" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="506.6" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.67%)</title><rect x="503.6" y="755.0" width="8.0" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="506.6" y="766.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.67%)</title><rect x="503.6" y="739.0" width="8.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="506.6" y="750.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (3 samples, 0.67%)</title><rect x="503.6" y="723.0" width="8.0" height="15" fill="#eb6767" rx="2" ry="2"/>
<text x="506.6" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (3 samples, 0.67%)</title><rect x="503.6" y="707.0" width="8.0" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="506.6" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (3 samples, 0.67%)</title><rect x="503.6" y="691.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="506.6" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (3 samples, 0.67%)</title><rect x="503.6" y="675.0" width="8.0" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="506.6" y="686.0"></text>
</g>
<g>
<title>do_futex (3 samples, 0.67%)</title><rect x="503.6" y="659.0" width="8.0" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="506.6" y="670.0"></text>
</g>
<g>
<title>futex_wait (3 samples, 0.67%)</title><rect x="503.6" y="643.0" width="8.0" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="506.6" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (3 samples, 0.67%)</title><rect x="503.6" y="627.0" width="8.0" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="506.6" y="638.0"></text>
</g>
<g>
<title>schedule (3 samples, 0.67%)</title><rect x="503.6" y="611.0" width="8.0" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="506.6" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (3 samples, 0.67%)</title><rect x="503.6" y="595.0" width="8.0" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="506.6" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (3 samples, 0.67%)</title><rect x="503.6" y="579.0" width="8.0" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="506.6" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (2 samples, 0.45%)</title><rect x="511.6" y="787.0" width="5.2" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="514.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (2 samples, 0.45%)</title><rect x="511.6" y="771.0" width="5.2" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="514.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (2 samples, 0.45%)</title><rect x="511.6" y="755.0" width="5.2" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="514.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (2 samples, 0.45%)</title><rect x="511.6" y="739.0" width="5.2" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="514.6" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (2 samples, 0.45%)</title><rect x="511.6" y="723.0" width="5.2" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="514.6" y="734.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.45%)</title><rect x="511.6" y="707.0" width="5.2" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="514.6" y="718.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.45%)</title><rect x="511.6" y="691.0" width="5.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="514.6" y="702.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="511.6" y="675.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="514.6" y="686.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.45%)</title><rect x="511.6" y="659.0" width="5.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="514.6" y="670.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.45%)</title><rect x="511.6" y="643.0" width="5.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="514.6" y="654.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.45%)</title><rect x="511.6" y="627.0" width="5.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="514.6" y="638.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.45%)</title><rect x="511.6" y="611.0" width="5.2" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="514.6" y="622.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.45%)</title><rect x="511.6" y="595.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="514.6" y="606.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.45%)</title><rect x="511.6" y="579.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="514.6" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl$$Lambda$66/712804772.run (78 samples, 17.45%)</title><rect x="516.8" y="819.0" width="206.0" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="519.8" y="830.0">ru/mail/polis/service/basta..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.lambda$putValueByKey$2 (78 samples, 17.45%)</title><rect x="516.8" y="803.0" width="206.0" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="519.8" y="814.0">ru/mail/polis/service/basta..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 2.01%)</title><rect x="516.8" y="787.0" width="23.8" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="519.8" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 2.01%)</title><rect x="516.8" y="771.0" width="23.8" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="519.8" y="782.0">o..</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 0.22%)</title><rect x="516.8" y="755.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="519.8" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 1.79%)</title><rect x="519.5" y="755.0" width="21.1" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="522.5" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 1.79%)</title><rect x="519.5" y="739.0" width="21.1" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="522.5" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 1.79%)</title><rect x="519.5" y="723.0" width="21.1" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="522.5" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 1.79%)</title><rect x="519.5" y="707.0" width="21.1" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="522.5" y="718.0">o..</text>
</g>
<g>
<title>__send (8 samples, 1.79%)</title><rect x="519.5" y="691.0" width="21.1" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="522.5" y="702.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.57%)</title><rect x="522.1" y="675.0" width="18.5" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="525.1" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.57%)</title><rect x="522.1" y="659.0" width="18.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="525.1" y="670.0"></text>
</g>
<g>
<title>__x64_sys_sendto (7 samples, 1.57%)</title><rect x="522.1" y="643.0" width="18.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="525.1" y="654.0"></text>
</g>
<g>
<title>__sys_sendto (7 samples, 1.57%)</title><rect x="522.1" y="627.0" width="18.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="525.1" y="638.0"></text>
</g>
<g>
<title>sock_sendmsg (6 samples, 1.34%)</title><rect x="524.8" y="611.0" width="15.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="527.8" y="622.0"></text>
</g>
<g>
<title>inet6_sendmsg (6 samples, 1.34%)</title><rect x="524.8" y="595.0" width="15.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="527.8" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (6 samples, 1.34%)</title><rect x="524.8" y="579.0" width="15.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="527.8" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (6 samples, 1.34%)</title><rect x="524.8" y="563.0" width="15.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="527.8" y="574.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 1.34%)</title><rect x="524.8" y="547.0" width="15.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="527.8" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 1.34%)</title><rect x="524.8" y="531.0" width="15.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="527.8" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (6 samples, 1.34%)</title><rect x="524.8" y="515.0" width="15.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="527.8" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 1.34%)</title><rect x="524.8" y="499.0" width="15.8" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="527.8" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 1.34%)</title><rect x="524.8" y="483.0" width="15.8" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="527.8" y="494.0"></text>
</g>
<g>
<title>__ip_queue_xmit (6 samples, 1.34%)</title><rect x="524.8" y="467.0" width="15.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="527.8" y="478.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 1.34%)</title><rect x="524.8" y="451.0" width="15.8" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="527.8" y="462.0"></text>
</g>
<g>
<title>ip_output (6 samples, 1.34%)</title><rect x="524.8" y="435.0" width="15.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="527.8" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 1.34%)</title><rect x="524.8" y="419.0" width="15.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="527.8" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (6 samples, 1.34%)</title><rect x="524.8" y="403.0" width="15.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="527.8" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 1.34%)</title><rect x="524.8" y="387.0" width="15.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="527.8" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (5 samples, 1.12%)</title><rect x="527.4" y="371.0" width="13.2" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="530.4" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.20 (5 samples, 1.12%)</title><rect x="527.4" y="355.0" width="13.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="530.4" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 1.12%)</title><rect x="527.4" y="339.0" width="13.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="530.4" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 1.12%)</title><rect x="527.4" y="323.0" width="13.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="530.4" y="334.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 1.12%)</title><rect x="527.4" y="307.0" width="13.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="530.4" y="318.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 1.12%)</title><rect x="527.4" y="291.0" width="13.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="530.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 1.12%)</title><rect x="527.4" y="275.0" width="13.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="530.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 1.12%)</title><rect x="527.4" y="259.0" width="13.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="530.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv (5 samples, 1.12%)</title><rect x="527.4" y="243.0" width="13.2" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="530.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (5 samples, 1.12%)</title><rect x="527.4" y="227.0" width="13.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="530.4" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (5 samples, 1.12%)</title><rect x="527.4" y="211.0" width="13.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="530.4" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (5 samples, 1.12%)</title><rect x="527.4" y="195.0" width="13.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="530.4" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (5 samples, 1.12%)</title><rect x="527.4" y="179.0" width="13.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="530.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (5 samples, 1.12%)</title><rect x="527.4" y="163.0" width="13.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="530.4" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (5 samples, 1.12%)</title><rect x="527.4" y="147.0" width="13.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="530.4" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (5 samples, 1.12%)</title><rect x="527.4" y="131.0" width="13.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="530.4" y="142.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.22%)</title><rect x="527.4" y="115.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="530.4" y="126.0"></text>
</g>
<g>
<title>tcp_ack (1 samples, 0.22%)</title><rect x="530.0" y="115.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="533.0" y="126.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 0.22%)</title><rect x="530.0" y="99.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="533.0" y="110.0"></text>
</g>
<g>
<title>__kfree_skb (1 samples, 0.22%)</title><rect x="530.0" y="83.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="533.0" y="94.0"></text>
</g>
<g>
<title>skb_release_all (1 samples, 0.22%)</title><rect x="530.0" y="67.0" width="2.7" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="533.0" y="78.0"></text>
</g>
<g>
<title>skb_release_data (1 samples, 0.22%)</title><rect x="530.0" y="51.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="533.0" y="62.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.67%)</title><rect x="532.7" y="115.0" width="7.9" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="535.7" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.67%)</title><rect x="532.7" y="99.0" width="7.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="535.7" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.67%)</title><rect x="532.7" y="83.0" width="7.9" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="535.7" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.67%)</title><rect x="532.7" y="67.0" width="7.9" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="535.7" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.67%)</title><rect x="532.7" y="51.0" width="7.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="535.7" y="62.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.upsert (69 samples, 15.44%)</title><rect x="540.6" y="787.0" width="182.2" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="543.6" y="798.0">ru/mail/polis/dao/basta1..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (68 samples, 15.21%)</title><rect x="540.6" y="771.0" width="179.5" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="543.6" y="782.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (68 samples, 15.21%)</title><rect x="540.6" y="755.0" width="179.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="543.6" y="766.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (41 samples, 9.17%)</title><rect x="540.6" y="739.0" width="108.2" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="543.6" y="750.0">Java_org_rock..</text>
</g>
<g>
<title>malloc@plt (1 samples, 0.22%)</title><rect x="540.6" y="723.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="543.6" y="734.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="540.6" y="707.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="543.6" y="718.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="540.6" y="691.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="543.6" y="702.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="540.6" y="675.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="543.6" y="686.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (40 samples, 8.95%)</title><rect x="543.2" y="723.0" width="105.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="546.2" y="734.0">rocksdb_put_h..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (40 samples, 8.95%)</title><rect x="543.2" y="707.0" width="105.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="546.2" y="718.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (40 samples, 8.95%)</title><rect x="543.2" y="691.0" width="105.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="546.2" y="702.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (40 samples, 8.95%)</title><rect x="543.2" y="675.0" width="105.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="546.2" y="686.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (39 samples, 8.72%)</title><rect x="543.2" y="659.0" width="103.0" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="546.2" y="670.0">rocksdb::DBI..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (39 samples, 8.72%)</title><rect x="543.2" y="643.0" width="103.0" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="546.2" y="654.0">rocksdb::DBI..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.22%)</title><rect x="543.2" y="627.0" width="2.7" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="546.2" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (1 samples, 0.22%)</title><rect x="545.9" y="627.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="548.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (1 samples, 0.22%)</title><rect x="545.9" y="611.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="548.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="545.9" y="595.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="548.9" y="606.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (3 samples, 0.67%)</title><rect x="548.5" y="627.0" width="7.9" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="551.5" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.67%)</title><rect x="548.5" y="611.0" width="7.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="551.5" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.67%)</title><rect x="548.5" y="595.0" width="7.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="551.5" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.67%)</title><rect x="548.5" y="579.0" width="7.9" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="551.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.67%)</title><rect x="548.5" y="563.0" width="7.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="551.5" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.67%)</title><rect x="548.5" y="547.0" width="7.9" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="551.5" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.67%)</title><rect x="548.5" y="531.0" width="7.9" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="551.5" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (3 samples, 0.67%)</title><rect x="548.5" y="515.0" width="7.9" height="15" fill="#f37373" rx="2" ry="2"/>
<text x="551.5" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (2 samples, 0.45%)</title><rect x="548.5" y="499.0" width="5.3" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="551.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="548.5" y="483.0" width="5.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="551.5" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="548.5" y="467.0" width="5.3" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="551.5" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="548.5" y="451.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="551.5" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.22%)</title><rect x="548.5" y="435.0" width="2.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="551.5" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="548.5" y="419.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="551.5" y="430.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="548.5" y="403.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="551.5" y="414.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.22%)</title><rect x="548.5" y="387.0" width="2.7" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="551.5" y="398.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.22%)</title><rect x="548.5" y="371.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="551.5" y="382.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.22%)</title><rect x="551.2" y="451.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="554.2" y="462.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.22%)</title><rect x="551.2" y="435.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="554.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="553.8" y="499.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="556.8" y="510.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="553.8" y="483.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="556.8" y="494.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="553.8" y="467.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="556.8" y="478.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.22%)</title><rect x="553.8" y="451.0" width="2.6" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="556.8" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="553.8" y="435.0" width="2.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="556.8" y="446.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="553.8" y="419.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="556.8" y="430.0"></text>
</g>
<g>
<title>JavaThread::can_call_java() const (1 samples, 0.22%)</title><rect x="553.8" y="403.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="556.8" y="414.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (26 samples, 5.82%)</title><rect x="556.4" y="627.0" width="68.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="559.4" y="638.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (26 samples, 5.82%)</title><rect x="556.4" y="611.0" width="68.7" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="559.4" y="622.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (26 samples, 5.82%)</title><rect x="556.4" y="595.0" width="68.7" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="559.4" y="606.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (26 samples, 5.82%)</title><rect x="556.4" y="579.0" width="68.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="559.4" y="590.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (26 samples, 5.82%)</title><rect x="556.4" y="563.0" width="68.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="559.4" y="574.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.22%)</title><rect x="559.1" y="547.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="562.1" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (24 samples, 5.37%)</title><rect x="561.7" y="547.0" width="63.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="564.7" y="558.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (24 samples, 5.37%)</title><rect x="561.7" y="531.0" width="63.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="564.7" y="542.0">rocksdb..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (24 samples, 5.37%)</title><rect x="561.7" y="515.0" width="63.4" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="564.7" y="526.0">bool ro..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (23 samples, 5.15%)</title><rect x="561.7" y="499.0" width="60.7" height="15" fill="#e96464" rx="2" ry="2"/>
<text x="564.7" y="510.0">/tmp/l..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (23 samples, 5.15%)</title><rect x="561.7" y="483.0" width="60.7" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="564.7" y="494.0">/tmp/l..</text>
</g>
<g>
<title>non-virtual thunk to rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="561.7" y="467.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="564.7" y="478.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (22 samples, 4.92%)</title><rect x="564.4" y="467.0" width="58.0" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="567.4" y="478.0">rocksd..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="564.4" y="451.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="567.4" y="462.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="567.0" y="451.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="570.0" y="462.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (20 samples, 4.47%)</title><rect x="569.6" y="451.0" width="52.8" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="572.6" y="462.0">rocks..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.67%)</title><rect x="574.9" y="435.0" width="7.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="577.9" y="446.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (3 samples, 0.67%)</title><rect x="574.9" y="419.0" width="7.9" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="577.9" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.67%)</title><rect x="574.9" y="403.0" width="7.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="577.9" y="414.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (2 samples, 0.45%)</title><rect x="577.6" y="387.0" width="5.2" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="580.6" y="398.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (4 samples, 0.89%)</title><rect x="582.8" y="435.0" width="10.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="585.8" y="446.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (4 samples, 0.89%)</title><rect x="582.8" y="419.0" width="10.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="585.8" y="430.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.22%)</title><rect x="582.8" y="403.0" width="2.7" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="585.8" y="414.0"></text>
</g>
<g>
<title>Fingerprinter::fingerprint() (1 samples, 0.22%)</title><rect x="585.5" y="403.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="588.5" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.45%)</title><rect x="588.1" y="403.0" width="5.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="591.1" y="414.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.45%)</title><rect x="588.1" y="387.0" width="5.3" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="591.1" y="398.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.22%)</title><rect x="588.1" y="371.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="591.1" y="382.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.22%)</title><rect x="588.1" y="355.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="591.1" y="366.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.22%)</title><rect x="590.8" y="371.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="593.8" y="382.0"></text>
</g>
<g>
<title>__lll_unlock_wake (7 samples, 1.57%)</title><rect x="593.4" y="435.0" width="18.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="596.4" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (7 samples, 1.57%)</title><rect x="593.4" y="419.0" width="18.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="596.4" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (7 samples, 1.57%)</title><rect x="593.4" y="403.0" width="18.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="596.4" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (7 samples, 1.57%)</title><rect x="593.4" y="387.0" width="18.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="596.4" y="398.0"></text>
</g>
<g>
<title>do_futex (7 samples, 1.57%)</title><rect x="593.4" y="371.0" width="18.5" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="596.4" y="382.0"></text>
</g>
<g>
<title>futex_wake (7 samples, 1.57%)</title><rect x="593.4" y="355.0" width="18.5" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="596.4" y="366.0"></text>
</g>
<g>
<title>wake_up_q (7 samples, 1.57%)</title><rect x="593.4" y="339.0" width="18.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="596.4" y="350.0"></text>
</g>
<g>
<title>try_to_wake_up (7 samples, 1.57%)</title><rect x="593.4" y="323.0" width="18.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="596.4" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (7 samples, 1.57%)</title><rect x="593.4" y="307.0" width="18.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="596.4" y="318.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.22%)</title><rect x="611.9" y="435.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="614.9" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.22%)</title><rect x="611.9" y="419.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="614.9" y="430.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.22%)</title><rect x="614.5" y="435.0" width="2.7" height="15" fill="#fd8080" rx="2" ry="2"/>
<text x="617.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (2 samples, 0.45%)</title><rect x="617.2" y="435.0" width="5.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="620.2" y="446.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.22%)</title><rect x="617.2" y="419.0" width="2.6" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="620.2" y="430.0"></text>
</g>
<g>
<title>jni_GetEnv (1 samples, 0.22%)</title><rect x="619.8" y="419.0" width="2.6" height="15" fill="#fa7c7c" rx="2" ry="2"/>
<text x="622.8" y="430.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.22%)</title><rect x="622.4" y="499.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="625.4" y="510.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="622.4" y="483.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="625.4" y="494.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.22%)</title><rect x="622.4" y="467.0" width="2.7" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="625.4" y="478.0"></text>
</g>
<g>
<title>rocksdb::WriteController::IsStopped() const (1 samples, 0.22%)</title><rect x="625.1" y="627.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="628.1" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (5 samples, 1.12%)</title><rect x="627.7" y="627.0" width="13.2" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="630.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::ExitAsBatchGroupFollower(rocksdb::WriteThread::Writer*) (1 samples, 0.22%)</title><rect x="640.9" y="627.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="643.9" y="638.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.22%)</title><rect x="640.9" y="611.0" width="2.7" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="643.9" y="622.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="640.9" y="595.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="643.9" y="606.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="640.9" y="579.0" width="2.7" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="643.9" y="590.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.22%)</title><rect x="640.9" y="563.0" width="2.7" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="643.9" y="574.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.22%)</title><rect x="640.9" y="547.0" width="2.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="643.9" y="558.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.22%)</title><rect x="640.9" y="531.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="643.9" y="542.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.22%)</title><rect x="640.9" y="515.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="643.9" y="526.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.22%)</title><rect x="640.9" y="499.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="643.9" y="510.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="640.9" y="483.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="643.9" y="494.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.22%)</title><rect x="643.6" y="627.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="646.6" y="638.0"></text>
</g>
<g>
<title>std::string::reserve(unsigned long) (1 samples, 0.22%)</title><rect x="646.2" y="659.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="649.2" y="670.0"></text>
</g>
<g>
<title>[unknown] (4 samples, 0.89%)</title><rect x="648.8" y="739.0" width="10.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="651.8" y="750.0"></text>
</g>
<g>
<title>__libc_write (4 samples, 0.89%)</title><rect x="648.8" y="723.0" width="10.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="651.8" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.89%)</title><rect x="648.8" y="707.0" width="10.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="651.8" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.89%)</title><rect x="648.8" y="691.0" width="10.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="651.8" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (4 samples, 0.89%)</title><rect x="648.8" y="675.0" width="10.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="651.8" y="686.0"></text>
</g>
<g>
<title>ksys_write (4 samples, 0.89%)</title><rect x="648.8" y="659.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="651.8" y="670.0"></text>
</g>
<g>
<title>vfs_write (4 samples, 0.89%)</title><rect x="648.8" y="643.0" width="10.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="651.8" y="654.0"></text>
</g>
<g>
<title>__sb_start_write (1 samples, 0.22%)</title><rect x="651.5" y="627.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="654.5" y="638.0"></text>
</g>
<g>
<title>__vfs_write (1 samples, 0.22%)</title><rect x="654.1" y="627.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="657.1" y="638.0"></text>
</g>
<g>
<title>new_sync_write (1 samples, 0.22%)</title><rect x="654.1" y="611.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="657.1" y="622.0"></text>
</g>
<g>
<title>ext4_file_write_iter (1 samples, 0.22%)</title><rect x="654.1" y="595.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="657.1" y="606.0"></text>
</g>
<g>
<title>__generic_file_write_iter (1 samples, 0.22%)</title><rect x="654.1" y="579.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="657.1" y="590.0"></text>
</g>
<g>
<title>ext4_da_write_begin (1 samples, 0.22%)</title><rect x="654.1" y="563.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="657.1" y="574.0"></text>
</g>
<g>
<title>rw_verify_area (1 samples, 0.22%)</title><rect x="656.8" y="627.0" width="2.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="659.8" y="638.0"></text>
</g>
<g>
<title>security_file_permission (1 samples, 0.22%)</title><rect x="656.8" y="611.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="659.8" y="622.0"></text>
</g>
<g>
<title>apparmor_file_permission (1 samples, 0.22%)</title><rect x="656.8" y="595.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="659.8" y="606.0"></text>
</g>
<g>
<title>common_file_perm (1 samples, 0.22%)</title><rect x="656.8" y="579.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="659.8" y="590.0"></text>
</g>
<g>
<title>aa_file_perm (1 samples, 0.22%)</title><rect x="656.8" y="563.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="659.8" y="574.0"></text>
</g>
<g>
<title>__pthread_cond_signal (6 samples, 1.34%)</title><rect x="659.4" y="739.0" width="15.8" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="662.4" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.34%)</title><rect x="659.4" y="723.0" width="15.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="662.4" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.34%)</title><rect x="659.4" y="707.0" width="15.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="662.4" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (6 samples, 1.34%)</title><rect x="659.4" y="691.0" width="15.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="662.4" y="702.0"></text>
</g>
<g>
<title>do_futex (6 samples, 1.34%)</title><rect x="659.4" y="675.0" width="15.8" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="662.4" y="686.0"></text>
</g>
<g>
<title>futex_wake (6 samples, 1.34%)</title><rect x="659.4" y="659.0" width="15.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="662.4" y="670.0"></text>
</g>
<g>
<title>wake_up_q (6 samples, 1.34%)</title><rect x="659.4" y="643.0" width="15.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="662.4" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (6 samples, 1.34%)</title><rect x="659.4" y="627.0" width="15.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="662.4" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (6 samples, 1.34%)</title><rect x="659.4" y="611.0" width="15.8" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="662.4" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (3 samples, 0.67%)</title><rect x="675.2" y="739.0" width="8.0" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="678.2" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (14 samples, 3.13%)</title><rect x="683.2" y="739.0" width="36.9" height="15" fill="#67f867" rx="2" ry="2"/>
<text x="686.2" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (14 samples, 3.13%)</title><rect x="683.2" y="723.0" width="36.9" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="686.2" y="734.0">ru/..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (14 samples, 3.13%)</title><rect x="683.2" y="707.0" width="36.9" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="686.2" y="718.0">org..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (2 samples, 0.45%)</title><rect x="683.2" y="691.0" width="5.2" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="686.2" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (12 samples, 2.68%)</title><rect x="688.4" y="691.0" width="31.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="691.4" y="702.0">or..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (11 samples, 2.46%)</title><rect x="691.1" y="675.0" width="29.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="694.1" y="686.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (10 samples, 2.24%)</title><rect x="691.1" y="659.0" width="26.4" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="694.1" y="670.0">J..</text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.45%)</title><rect x="691.1" y="643.0" width="5.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="694.1" y="654.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.22%)</title><rect x="691.1" y="627.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="694.1" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="691.1" y="611.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="694.1" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="691.1" y="595.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="694.1" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="691.1" y="579.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="694.1" y="590.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.22%)</title><rect x="693.7" y="627.0" width="2.7" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="696.7" y="638.0"></text>
</g>
<g>
<title>jni_NewByteArray (7 samples, 1.57%)</title><rect x="696.4" y="643.0" width="18.4" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="699.4" y="654.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (1 samples, 0.22%)</title><rect x="696.4" y="627.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="699.4" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.22%)</title><rect x="699.0" y="627.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="702.0" y="638.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.22%)</title><rect x="701.6" y="627.0" width="2.7" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="704.6" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.89%)</title><rect x="704.3" y="627.0" width="10.5" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="707.3" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.89%)</title><rect x="704.3" y="611.0" width="10.5" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="707.3" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.67%)</title><rect x="704.3" y="595.0" width="7.9" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="707.3" y="606.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.22%)</title><rect x="706.9" y="579.0" width="2.7" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="709.9" y="590.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="706.9" y="563.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.9" y="574.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="706.9" y="547.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="709.9" y="558.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="706.9" y="531.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="709.9" y="542.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.22%)</title><rect x="709.6" y="579.0" width="2.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="712.6" y="590.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.22%)</title><rect x="709.6" y="563.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="712.6" y="574.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.22%)</title><rect x="709.6" y="547.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="712.6" y="558.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.22%)</title><rect x="709.6" y="531.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="712.6" y="542.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.22%)</title><rect x="709.6" y="515.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="712.6" y="526.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.22%)</title><rect x="709.6" y="499.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="712.6" y="510.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.22%)</title><rect x="712.2" y="595.0" width="2.6" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="715.2" y="606.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 0.22%)</title><rect x="714.8" y="643.0" width="2.7" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="717.8" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.22%)</title><rect x="714.8" y="627.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="717.8" y="638.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.22%)</title><rect x="717.5" y="659.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="720.5" y="670.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/Utils.getByteArrayFromByteBuffer (1 samples, 0.22%)</title><rect x="720.1" y="771.0" width="2.7" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="723.1" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.get (1 samples, 0.22%)</title><rect x="720.1" y="755.0" width="2.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="723.1" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.get (1 samples, 0.22%)</title><rect x="720.1" y="739.0" width="2.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="723.1" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.22%)</title><rect x="720.1" y="723.0" width="2.7" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="723.1" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.position (1 samples, 0.22%)</title><rect x="720.1" y="707.0" width="2.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="723.1" y="718.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.22%)</title><rect x="720.1" y="691.0" width="2.7" height="15" fill="#e35c5c" rx="2" ry="2"/>
<text x="723.1" y="702.0"></text>
</g>
<g>
<title>os::javaTimeMillis() (1 samples, 0.22%)</title><rect x="720.1" y="675.0" width="2.7" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="723.1" y="686.0"></text>
</g>
<g>
<title>[worker-2 tid=5671] (87 samples, 19.46%)</title><rect x="722.8" y="883.0" width="229.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="725.8" y="894.0">[worker-2 tid=5671]</text>
</g>
<g>
<title>[unknown_Java] (3 samples, 0.67%)</title><rect x="722.8" y="867.0" width="7.9" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="725.8" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (3 samples, 0.67%)</title><rect x="722.8" y="851.0" width="7.9" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="725.8" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (3 samples, 0.67%)</title><rect x="722.8" y="835.0" width="7.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="725.8" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.67%)</title><rect x="722.8" y="819.0" width="7.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="725.8" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.67%)</title><rect x="722.8" y="803.0" width="7.9" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="725.8" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.67%)</title><rect x="722.8" y="787.0" width="7.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="725.8" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (3 samples, 0.67%)</title><rect x="722.8" y="771.0" width="7.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="725.8" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (3 samples, 0.67%)</title><rect x="722.8" y="755.0" width="7.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="725.8" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.22%)</title><rect x="722.8" y="739.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="725.8" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.22%)</title><rect x="722.8" y="723.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="725.8" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.22%)</title><rect x="722.8" y="707.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="725.8" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="722.8" y="691.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="725.8" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.22%)</title><rect x="722.8" y="675.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="725.8" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.22%)</title><rect x="722.8" y="659.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="725.8" y="670.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.22%)</title><rect x="722.8" y="643.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="725.8" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.22%)</title><rect x="722.8" y="627.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="725.8" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.22%)</title><rect x="722.8" y="611.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="725.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="722.8" y="595.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="725.8" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="722.8" y="579.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="725.8" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="722.8" y="563.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="725.8" y="574.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.22%)</title><rect x="722.8" y="547.0" width="2.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="725.8" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="722.8" y="531.0" width="2.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="725.8" y="542.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.22%)</title><rect x="722.8" y="515.0" width="2.6" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="725.8" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (2 samples, 0.45%)</title><rect x="725.4" y="739.0" width="5.3" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="728.4" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (2 samples, 0.45%)</title><rect x="725.4" y="723.0" width="5.3" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="728.4" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (2 samples, 0.45%)</title><rect x="725.4" y="707.0" width="5.3" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="728.4" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (2 samples, 0.45%)</title><rect x="725.4" y="691.0" width="5.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="728.4" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (2 samples, 0.45%)</title><rect x="725.4" y="675.0" width="5.3" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="728.4" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (2 samples, 0.45%)</title><rect x="725.4" y="659.0" width="5.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="728.4" y="670.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (2 samples, 0.45%)</title><rect x="725.4" y="643.0" width="5.3" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="728.4" y="654.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (2 samples, 0.45%)</title><rect x="725.4" y="627.0" width="5.3" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="728.4" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (2 samples, 0.45%)</title><rect x="725.4" y="611.0" width="5.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="728.4" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (2 samples, 0.45%)</title><rect x="725.4" y="595.0" width="5.3" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="728.4" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="725.4" y="579.0" width="5.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="728.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="725.4" y="563.0" width="5.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="728.4" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="725.4" y="547.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="728.4" y="558.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.22%)</title><rect x="725.4" y="531.0" width="2.6" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="728.4" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="725.4" y="515.0" width="2.6" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="728.4" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="725.4" y="499.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="728.4" y="510.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.22%)</title><rect x="725.4" y="483.0" width="2.6" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="728.4" y="494.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="728.0" y="547.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="731.0" y="558.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.22%)</title><rect x="728.0" y="531.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="731.0" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="728.0" y="515.0" width="2.7" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="731.0" y="526.0"></text>
</g>
<g>
<title>HandleMark::initialize(Thread*) (1 samples, 0.22%)</title><rect x="728.0" y="499.0" width="2.7" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="731.0" y="510.0"></text>
</g>
<g>
<title>java/lang/Thread.run (84 samples, 18.79%)</title><rect x="730.7" y="867.0" width="221.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.7" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (84 samples, 18.79%)</title><rect x="730.7" y="851.0" width="221.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="733.7" y="862.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (84 samples, 18.79%)</title><rect x="730.7" y="835.0" width="221.7" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="733.7" y="846.0">java/util/concurrent/ThreadPo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (1 samples, 0.22%)</title><rect x="730.7" y="819.0" width="2.6" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="733.7" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (1 samples, 0.22%)</title><rect x="730.7" y="803.0" width="2.6" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="733.7" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (1 samples, 0.22%)</title><rect x="730.7" y="787.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="733.7" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (1 samples, 0.22%)</title><rect x="730.7" y="771.0" width="2.6" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="733.7" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (1 samples, 0.22%)</title><rect x="730.7" y="755.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="733.7" y="766.0"></text>
</g>
<g>
<title>[unknown] (1 samples, 0.22%)</title><rect x="730.7" y="739.0" width="2.6" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="733.7" y="750.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.22%)</title><rect x="730.7" y="723.0" width="2.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="733.7" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="730.7" y="707.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="733.7" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="730.7" y="691.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="733.7" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.22%)</title><rect x="730.7" y="675.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="733.7" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.22%)</title><rect x="730.7" y="659.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="733.7" y="670.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.22%)</title><rect x="730.7" y="643.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="733.7" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.22%)</title><rect x="730.7" y="627.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="733.7" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.22%)</title><rect x="730.7" y="611.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="733.7" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.22%)</title><rect x="730.7" y="595.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="733.7" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.22%)</title><rect x="730.7" y="579.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="733.7" y="590.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl$$Lambda$66/712804772.run (82 samples, 18.34%)</title><rect x="733.3" y="819.0" width="216.5" height="15" fill="#69fa69" rx="2" ry="2"/>
<text x="736.3" y="830.0">ru/mail/polis/service/basta1..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.lambda$putValueByKey$2 (82 samples, 18.34%)</title><rect x="733.3" y="803.0" width="216.5" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="736.3" y="814.0">ru/mail/polis/service/basta1..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (8 samples, 1.79%)</title><rect x="733.3" y="787.0" width="21.1" height="15" fill="#5bec5b" rx="2" ry="2"/>
<text x="736.3" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (8 samples, 1.79%)</title><rect x="733.3" y="771.0" width="21.1" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="736.3" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 1.79%)</title><rect x="733.3" y="755.0" width="21.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.3" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (8 samples, 1.79%)</title><rect x="733.3" y="739.0" width="21.1" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="736.3" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (8 samples, 1.79%)</title><rect x="733.3" y="723.0" width="21.1" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="736.3" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (8 samples, 1.79%)</title><rect x="733.3" y="707.0" width="21.1" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="736.3" y="718.0">o..</text>
</g>
<g>
<title>__send (8 samples, 1.79%)</title><rect x="733.3" y="691.0" width="21.1" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="736.3" y="702.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 1.79%)</title><rect x="733.3" y="675.0" width="21.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="736.3" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (8 samples, 1.79%)</title><rect x="733.3" y="659.0" width="21.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="736.3" y="670.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (8 samples, 1.79%)</title><rect x="733.3" y="643.0" width="21.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="736.3" y="654.0">_..</text>
</g>
<g>
<title>__sys_sendto (8 samples, 1.79%)</title><rect x="733.3" y="627.0" width="21.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="736.3" y="638.0">_..</text>
</g>
<g>
<title>sock_sendmsg (8 samples, 1.79%)</title><rect x="733.3" y="611.0" width="21.1" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="736.3" y="622.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (8 samples, 1.79%)</title><rect x="733.3" y="595.0" width="21.1" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="736.3" y="606.0">i..</text>
</g>
<g>
<title>tcp_sendmsg (8 samples, 1.79%)</title><rect x="733.3" y="579.0" width="21.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="736.3" y="590.0">t..</text>
</g>
<g>
<title>tcp_sendmsg_locked (8 samples, 1.79%)</title><rect x="733.3" y="563.0" width="21.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="736.3" y="574.0">t..</text>
</g>
<g>
<title>tcp_push (8 samples, 1.79%)</title><rect x="733.3" y="547.0" width="21.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="736.3" y="558.0">t..</text>
</g>
<g>
<title>__tcp_push_pending_frames (8 samples, 1.79%)</title><rect x="733.3" y="531.0" width="21.1" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="736.3" y="542.0">_..</text>
</g>
<g>
<title>tcp_write_xmit (8 samples, 1.79%)</title><rect x="733.3" y="515.0" width="21.1" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="736.3" y="526.0">t..</text>
</g>
<g>
<title>__tcp_transmit_skb (6 samples, 1.34%)</title><rect x="733.3" y="499.0" width="15.8" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="736.3" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (6 samples, 1.34%)</title><rect x="733.3" y="483.0" width="15.8" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="736.3" y="494.0"></text>
</g>
<g>
<title>__ip_queue_xmit (6 samples, 1.34%)</title><rect x="733.3" y="467.0" width="15.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="736.3" y="478.0"></text>
</g>
<g>
<title>ip_local_out (6 samples, 1.34%)</title><rect x="733.3" y="451.0" width="15.8" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="736.3" y="462.0"></text>
</g>
<g>
<title>ip_output (6 samples, 1.34%)</title><rect x="733.3" y="435.0" width="15.8" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="736.3" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (6 samples, 1.34%)</title><rect x="733.3" y="419.0" width="15.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="736.3" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (6 samples, 1.34%)</title><rect x="733.3" y="403.0" width="15.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="736.3" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (6 samples, 1.34%)</title><rect x="733.3" y="387.0" width="15.8" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="736.3" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (6 samples, 1.34%)</title><rect x="733.3" y="371.0" width="15.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="736.3" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.20 (6 samples, 1.34%)</title><rect x="733.3" y="355.0" width="15.8" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="736.3" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (5 samples, 1.12%)</title><rect x="736.0" y="339.0" width="13.1" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="739.0" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (5 samples, 1.12%)</title><rect x="736.0" y="323.0" width="13.1" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="739.0" y="334.0"></text>
</g>
<g>
<title>net_rx_action (5 samples, 1.12%)</title><rect x="736.0" y="307.0" width="13.1" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="739.0" y="318.0"></text>
</g>
<g>
<title>process_backlog (5 samples, 1.12%)</title><rect x="736.0" y="291.0" width="13.1" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="739.0" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb (5 samples, 1.12%)</title><rect x="736.0" y="275.0" width="13.1" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="739.0" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (5 samples, 1.12%)</title><rect x="736.0" y="259.0" width="13.1" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="739.0" y="270.0"></text>
</g>
<g>
<title>__netif_receive_skb_core (1 samples, 0.22%)</title><rect x="736.0" y="243.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="739.0" y="254.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.89%)</title><rect x="738.6" y="243.0" width="10.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="741.6" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.89%)</title><rect x="738.6" y="227.0" width="10.5" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="741.6" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.89%)</title><rect x="738.6" y="211.0" width="10.5" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="741.6" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.89%)</title><rect x="738.6" y="195.0" width="10.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="741.6" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.89%)</title><rect x="738.6" y="179.0" width="10.5" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="741.6" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.89%)</title><rect x="738.6" y="163.0" width="10.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="741.6" y="174.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (4 samples, 0.89%)</title><rect x="738.6" y="147.0" width="10.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="741.6" y="158.0"></text>
</g>
<g>
<title>tcp_rcv_established (4 samples, 0.89%)</title><rect x="738.6" y="131.0" width="10.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="741.6" y="142.0"></text>
</g>
<g>
<title>__tcp_ack_snd_check (1 samples, 0.22%)</title><rect x="738.6" y="115.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="741.6" y="126.0"></text>
</g>
<g>
<title>tcp_send_delayed_ack (1 samples, 0.22%)</title><rect x="738.6" y="99.0" width="2.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="741.6" y="110.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.22%)</title><rect x="738.6" y="83.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="741.6" y="94.0"></text>
</g>
<g>
<title>mod_timer (1 samples, 0.22%)</title><rect x="738.6" y="67.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="741.6" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="738.6" y="51.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="741.6" y="62.0"></text>
</g>
<g>
<title>tcp_data_ready (3 samples, 0.67%)</title><rect x="741.2" y="115.0" width="7.9" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="744.2" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (3 samples, 0.67%)</title><rect x="741.2" y="99.0" width="7.9" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="744.2" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (3 samples, 0.67%)</title><rect x="741.2" y="83.0" width="7.9" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="744.2" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (3 samples, 0.67%)</title><rect x="741.2" y="67.0" width="7.9" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="744.2" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (3 samples, 0.67%)</title><rect x="741.2" y="51.0" width="7.9" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="744.2" y="62.0"></text>
</g>
<g>
<title>skb_clone (1 samples, 0.22%)</title><rect x="749.1" y="499.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="752.1" y="510.0"></text>
</g>
<g>
<title>tcp_schedule_loss_probe (1 samples, 0.22%)</title><rect x="751.8" y="499.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="754.8" y="510.0"></text>
</g>
<g>
<title>__usecs_to_jiffies (1 samples, 0.22%)</title><rect x="751.8" y="483.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="754.8" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.upsert (74 samples, 16.55%)</title><rect x="754.4" y="787.0" width="195.4" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="757.4" y="798.0">ru/mail/polis/dao/basta12..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (74 samples, 16.55%)</title><rect x="754.4" y="771.0" width="195.4" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="757.4" y="782.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (74 samples, 16.55%)</title><rect x="754.4" y="755.0" width="195.4" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="757.4" y="766.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (42 samples, 9.40%)</title><rect x="754.4" y="739.0" width="110.9" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="757.4" y="750.0">Java_org_rock..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (42 samples, 9.40%)</title><rect x="754.4" y="723.0" width="110.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="757.4" y="734.0">rocksdb_put_h..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (42 samples, 9.40%)</title><rect x="754.4" y="707.0" width="110.9" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="757.4" y="718.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (42 samples, 9.40%)</title><rect x="754.4" y="691.0" width="110.9" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="757.4" y="702.0">rocksdb::DBIm..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (42 samples, 9.40%)</title><rect x="754.4" y="675.0" width="110.9" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="757.4" y="686.0">rocksdb::DB::..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (42 samples, 9.40%)</title><rect x="754.4" y="659.0" width="110.9" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="757.4" y="670.0">rocksdb::DBIm..</text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (2 samples, 0.45%)</title><rect x="754.4" y="643.0" width="5.3" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="757.4" y="654.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context [clone .plt] (1 samples, 0.22%)</title><rect x="759.7" y="643.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="762.7" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="759.7" y="627.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="762.7" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="759.7" y="611.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="762.7" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="759.7" y="595.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="762.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (39 samples, 8.72%)</title><rect x="762.3" y="643.0" width="103.0" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="765.3" y="654.0">rocksdb::DBI..</text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.22%)</title><rect x="762.3" y="627.0" width="2.7" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="765.3" y="638.0"></text>
</g>
<g>
<title>rocksdb::InstrumentedMutex::Lock() (1 samples, 0.22%)</title><rect x="765.0" y="627.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="768.0" y="638.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.22%)</title><rect x="765.0" y="611.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="768.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (9 samples, 2.01%)</title><rect x="767.6" y="627.0" width="23.8" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="770.6" y="638.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (9 samples, 2.01%)</title><rect x="767.6" y="611.0" width="23.8" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="770.6" y="622.0">r..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (9 samples, 2.01%)</title><rect x="767.6" y="595.0" width="23.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="770.6" y="606.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (9 samples, 2.01%)</title><rect x="767.6" y="579.0" width="23.8" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="770.6" y="590.0">r..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (9 samples, 2.01%)</title><rect x="767.6" y="563.0" width="23.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="770.6" y="574.0">r..</text>
</g>
<g>
<title>rocksdb::ColumnFamilySet::GetDefault() const (1 samples, 0.22%)</title><rect x="767.6" y="547.0" width="2.7" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="770.6" y="558.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (8 samples, 1.79%)</title><rect x="770.3" y="547.0" width="21.1" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="773.3" y="558.0">r..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (8 samples, 1.79%)</title><rect x="770.3" y="531.0" width="21.1" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="773.3" y="542.0">b..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (7 samples, 1.57%)</title><rect x="770.3" y="515.0" width="18.4" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="773.3" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (5 samples, 1.12%)</title><rect x="770.3" y="499.0" width="13.2" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="773.3" y="510.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (5 samples, 1.12%)</title><rect x="770.3" y="483.0" width="13.2" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="773.3" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (5 samples, 1.12%)</title><rect x="770.3" y="467.0" width="13.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="773.3" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.67%)</title><rect x="770.3" y="451.0" width="7.9" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="773.3" y="462.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (3 samples, 0.67%)</title><rect x="770.3" y="435.0" width="7.9" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="773.3" y="446.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.22%)</title><rect x="772.9" y="419.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="775.9" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="775.5" y="419.0" width="2.7" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="778.5" y="430.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.22%)</title><rect x="775.5" y="403.0" width="2.7" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="778.5" y="414.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="778.2" y="451.0" width="2.6" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="781.2" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.22%)</title><rect x="778.2" y="435.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="781.2" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="778.2" y="419.0" width="2.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="781.2" y="430.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.22%)</title><rect x="778.2" y="403.0" width="2.6" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="781.2" y="414.0"></text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.22%)</title><rect x="780.8" y="451.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="783.8" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="783.5" y="499.0" width="5.2" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="786.5" y="510.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="783.5" y="483.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="786.5" y="494.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="783.5" y="467.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="786.5" y="478.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.22%)</title><rect x="783.5" y="451.0" width="2.6" height="15" fill="#e66060" rx="2" ry="2"/>
<text x="786.5" y="462.0"></text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.22%)</title><rect x="783.5" y="435.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="786.5" y="446.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="783.5" y="419.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="786.5" y="430.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="783.5" y="403.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="786.5" y="414.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="783.5" y="387.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="786.5" y="398.0"></text>
</g>
<g>
<title>rocksdb::port::Mutex::Lock() (1 samples, 0.22%)</title><rect x="786.1" y="483.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="789.1" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (1 samples, 0.22%)</title><rect x="788.7" y="515.0" width="2.7" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="791.7" y="526.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="788.7" y="499.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="791.7" y="510.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="788.7" y="483.0" width="2.7" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="791.7" y="494.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.22%)</title><rect x="788.7" y="467.0" width="2.7" height="15" fill="#f67777" rx="2" ry="2"/>
<text x="791.7" y="478.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="788.7" y="451.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="791.7" y="462.0"></text>
</g>
<g>
<title>methodHandle::operator=(methodHandle const&amp;) (1 samples, 0.22%)</title><rect x="788.7" y="435.0" width="2.7" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="791.7" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (21 samples, 4.70%)</title><rect x="791.4" y="627.0" width="55.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="794.4" y="638.0">rocks..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (21 samples, 4.70%)</title><rect x="791.4" y="611.0" width="55.4" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="794.4" y="622.0">rocks..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (21 samples, 4.70%)</title><rect x="791.4" y="595.0" width="55.4" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="794.4" y="606.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (21 samples, 4.70%)</title><rect x="791.4" y="579.0" width="55.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="794.4" y="590.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (21 samples, 4.70%)</title><rect x="791.4" y="563.0" width="55.4" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="794.4" y="574.0">rocks..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (21 samples, 4.70%)</title><rect x="791.4" y="547.0" width="55.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="794.4" y="558.0">rocks..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (21 samples, 4.70%)</title><rect x="791.4" y="531.0" width="55.4" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="794.4" y="542.0">rocks..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (21 samples, 4.70%)</title><rect x="791.4" y="515.0" width="55.4" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="794.4" y="526.0">bool ..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (21 samples, 4.70%)</title><rect x="791.4" y="499.0" width="55.4" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="794.4" y="510.0">/tmp/..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (21 samples, 4.70%)</title><rect x="791.4" y="483.0" width="55.4" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="794.4" y="494.0">/tmp/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (21 samples, 4.70%)</title><rect x="791.4" y="467.0" width="55.4" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="794.4" y="478.0">rocks..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (21 samples, 4.70%)</title><rect x="791.4" y="451.0" width="55.4" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="794.4" y="462.0">rocks..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (3 samples, 0.67%)</title><rect x="791.4" y="435.0" width="7.9" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="794.4" y="446.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (3 samples, 0.67%)</title><rect x="791.4" y="419.0" width="7.9" height="15" fill="#fb7c7c" rx="2" ry="2"/>
<text x="794.4" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (3 samples, 0.67%)</title><rect x="791.4" y="403.0" width="7.9" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="794.4" y="414.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.22%)</title><rect x="794.0" y="387.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="797.0" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="796.7" y="387.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="799.7" y="398.0"></text>
</g>
<g>
<title>os::stack_shadow_pages_available(Thread*, methodHandle const&amp;, unsigned char*) (1 samples, 0.22%)</title><rect x="796.7" y="371.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="799.7" y="382.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (9 samples, 2.01%)</title><rect x="799.3" y="435.0" width="23.8" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="802.3" y="446.0">J..</text>
</g>
<g>
<title>jni_CallVoidMethodV (8 samples, 1.79%)</title><rect x="801.9" y="419.0" width="21.2" height="15" fill="#f17070" rx="2" ry="2"/>
<text x="804.9" y="430.0">j..</text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (5 samples, 1.12%)</title><rect x="809.9" y="403.0" width="13.2" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="812.9" y="414.0"></text>
</g>
<g>
<title>Handle::Handle(Thread*, oopDesc*) (1 samples, 0.22%)</title><rect x="809.9" y="387.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="812.9" y="398.0"></text>
</g>
<g>
<title>JNIHandleBlock::release_block(JNIHandleBlock*, Thread*) (1 samples, 0.22%)</title><rect x="812.5" y="387.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="815.5" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="815.1" y="387.0" width="2.7" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="818.1" y="398.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (2 samples, 0.45%)</title><rect x="817.8" y="387.0" width="5.3" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="820.8" y="398.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.22%)</title><rect x="823.1" y="435.0" width="2.6" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="826.1" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="823.1" y="419.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="826.1" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="823.1" y="403.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="826.1" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.22%)</title><rect x="823.1" y="387.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="826.1" y="398.0"></text>
</g>
<g>
<title>__lll_unlock_wake (4 samples, 0.89%)</title><rect x="825.7" y="435.0" width="10.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="828.7" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 0.89%)</title><rect x="825.7" y="419.0" width="10.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="828.7" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (4 samples, 0.89%)</title><rect x="825.7" y="403.0" width="10.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="828.7" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (4 samples, 0.89%)</title><rect x="825.7" y="387.0" width="10.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="828.7" y="398.0"></text>
</g>
<g>
<title>do_futex (4 samples, 0.89%)</title><rect x="825.7" y="371.0" width="10.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="828.7" y="382.0"></text>
</g>
<g>
<title>futex_wake (4 samples, 0.89%)</title><rect x="825.7" y="355.0" width="10.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="828.7" y="366.0"></text>
</g>
<g>
<title>wake_up_q (4 samples, 0.89%)</title><rect x="825.7" y="339.0" width="10.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="828.7" y="350.0"></text>
</g>
<g>
<title>try_to_wake_up (4 samples, 0.89%)</title><rect x="825.7" y="323.0" width="10.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="828.7" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (4 samples, 0.89%)</title><rect x="825.7" y="307.0" width="10.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="828.7" y="318.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.45%)</title><rect x="836.3" y="435.0" width="5.2" height="15" fill="#ef6c6c" rx="2" ry="2"/>
<text x="839.3" y="446.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.22%)</title><rect x="836.3" y="419.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="839.3" y="430.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.22%)</title><rect x="838.9" y="419.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="841.9" y="430.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.22%)</title><rect x="841.5" y="435.0" width="2.7" height="15" fill="#ea6767" rx="2" ry="2"/>
<text x="844.5" y="446.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.22%)</title><rect x="844.2" y="435.0" width="2.6" height="15" fill="#e5e545" rx="2" ry="2"/>
<text x="847.2" y="446.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (6 samples, 1.34%)</title><rect x="846.8" y="627.0" width="15.9" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="849.8" y="638.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.22%)</title><rect x="857.4" y="611.0" width="2.6" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="860.4" y="622.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.22%)</title><rect x="860.0" y="611.0" width="2.7" height="15" fill="#e45f5f" rx="2" ry="2"/>
<text x="863.0" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::SetState(rocksdb::WriteThread::Writer*, unsigned char) (1 samples, 0.22%)</title><rect x="862.7" y="627.0" width="2.6" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="865.7" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="862.7" y="611.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="865.7" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="862.7" y="595.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="865.7" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="862.7" y="579.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="865.7" y="590.0"></text>
</g>
<g>
<title>[unknown] (7 samples, 1.57%)</title><rect x="865.3" y="739.0" width="18.5" height="15" fill="#e55f5f" rx="2" ry="2"/>
<text x="868.3" y="750.0"></text>
</g>
<g>
<title>__libc_write (6 samples, 1.34%)</title><rect x="865.3" y="723.0" width="15.8" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="868.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (6 samples, 1.34%)</title><rect x="865.3" y="707.0" width="15.8" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="868.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (6 samples, 1.34%)</title><rect x="865.3" y="691.0" width="15.8" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="868.3" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (6 samples, 1.34%)</title><rect x="865.3" y="675.0" width="15.8" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="868.3" y="686.0"></text>
</g>
<g>
<title>ksys_write (6 samples, 1.34%)</title><rect x="865.3" y="659.0" width="15.8" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="868.3" y="670.0"></text>
</g>
<g>
<title>vfs_write (6 samples, 1.34%)</title><rect x="865.3" y="643.0" width="15.8" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="868.3" y="654.0"></text>
</g>
<g>
<title>__vfs_write (6 samples, 1.34%)</title><rect x="865.3" y="627.0" width="15.8" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="868.3" y="638.0"></text>
</g>
<g>
<title>new_sync_write (6 samples, 1.34%)</title><rect x="865.3" y="611.0" width="15.8" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="868.3" y="622.0"></text>
</g>
<g>
<title>ext4_file_write_iter (6 samples, 1.34%)</title><rect x="865.3" y="595.0" width="15.8" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="868.3" y="606.0"></text>
</g>
<g>
<title>__generic_file_write_iter (6 samples, 1.34%)</title><rect x="865.3" y="579.0" width="15.8" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="868.3" y="590.0"></text>
</g>
<g>
<title>file_update_time (1 samples, 0.22%)</title><rect x="865.3" y="563.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="868.3" y="574.0"></text>
</g>
<g>
<title>generic_update_time (1 samples, 0.22%)</title><rect x="865.3" y="547.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="868.3" y="558.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.22%)</title><rect x="865.3" y="531.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="868.3" y="542.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.22%)</title><rect x="865.3" y="515.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="868.3" y="526.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.22%)</title><rect x="865.3" y="499.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="868.3" y="510.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.22%)</title><rect x="865.3" y="483.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="868.3" y="494.0"></text>
</g>
<g>
<title>ext4_inode_table (1 samples, 0.22%)</title><rect x="865.3" y="467.0" width="2.6" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="868.3" y="478.0"></text>
</g>
<g>
<title>generic_perform_write (5 samples, 1.12%)</title><rect x="867.9" y="563.0" width="13.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="870.9" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_begin (3 samples, 0.67%)</title><rect x="867.9" y="547.0" width="8.0" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="870.9" y="558.0"></text>
</g>
<g>
<title>__ext4_journal_start_sb (1 samples, 0.22%)</title><rect x="870.6" y="531.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="873.6" y="542.0"></text>
</g>
<g>
<title>jbd2__journal_start (1 samples, 0.22%)</title><rect x="870.6" y="515.0" width="2.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="873.6" y="526.0"></text>
</g>
<g>
<title>kmem_cache_alloc (1 samples, 0.22%)</title><rect x="870.6" y="499.0" width="2.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="873.6" y="510.0"></text>
</g>
<g>
<title>grab_cache_page_write_begin (1 samples, 0.22%)</title><rect x="873.2" y="531.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="876.2" y="542.0"></text>
</g>
<g>
<title>pagecache_get_page (1 samples, 0.22%)</title><rect x="873.2" y="515.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="876.2" y="526.0"></text>
</g>
<g>
<title>xas_load (1 samples, 0.22%)</title><rect x="873.2" y="499.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="876.2" y="510.0"></text>
</g>
<g>
<title>ext4_da_write_end (2 samples, 0.45%)</title><rect x="875.9" y="547.0" width="5.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="878.9" y="558.0"></text>
</g>
<g>
<title>generic_write_end (2 samples, 0.45%)</title><rect x="875.9" y="531.0" width="5.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="878.9" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.22%)</title><rect x="875.9" y="515.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="878.9" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.22%)</title><rect x="875.9" y="499.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="878.9" y="510.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.22%)</title><rect x="875.9" y="483.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="878.9" y="494.0"></text>
</g>
<g>
<title>ext4_mark_iloc_dirty (1 samples, 0.22%)</title><rect x="875.9" y="467.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="878.9" y="478.0"></text>
</g>
<g>
<title>ext4_do_update_inode (1 samples, 0.22%)</title><rect x="875.9" y="451.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="878.9" y="462.0"></text>
</g>
<g>
<title>ext4_inode_csum_set (1 samples, 0.22%)</title><rect x="875.9" y="435.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="878.9" y="446.0"></text>
</g>
<g>
<title>ext4_inode_csum.isra.62 (1 samples, 0.22%)</title><rect x="875.9" y="419.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="878.9" y="430.0"></text>
</g>
<g>
<title>crypto_shash_update (1 samples, 0.22%)</title><rect x="875.9" y="403.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="878.9" y="414.0"></text>
</g>
<g>
<title>crc32c_pcl_intel_update (1 samples, 0.22%)</title><rect x="875.9" y="387.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="878.9" y="398.0"></text>
</g>
<g>
<title>block_write_end (1 samples, 0.22%)</title><rect x="878.5" y="515.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="881.5" y="526.0"></text>
</g>
<g>
<title>__block_commit_write.isra.41 (1 samples, 0.22%)</title><rect x="878.5" y="499.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="881.5" y="510.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.22%)</title><rect x="881.1" y="723.0" width="2.7" height="15" fill="#f57474" rx="2" ry="2"/>
<text x="884.1" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="881.1" y="707.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="884.1" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="881.1" y="691.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="884.1" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.22%)</title><rect x="881.1" y="675.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="884.1" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.22%)</title><rect x="881.1" y="659.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="884.1" y="670.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.22%)</title><rect x="881.1" y="643.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="884.1" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.22%)</title><rect x="881.1" y="627.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="884.1" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.22%)</title><rect x="881.1" y="611.0" width="2.7" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="884.1" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.22%)</title><rect x="881.1" y="595.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="884.1" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.22%)</title><rect x="881.1" y="579.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="884.1" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (5 samples, 1.12%)</title><rect x="883.8" y="739.0" width="13.2" height="15" fill="#ec6868" rx="2" ry="2"/>
<text x="886.8" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.12%)</title><rect x="883.8" y="723.0" width="13.2" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="886.8" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.12%)</title><rect x="883.8" y="707.0" width="13.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="886.8" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.12%)</title><rect x="883.8" y="691.0" width="13.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="886.8" y="702.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.12%)</title><rect x="883.8" y="675.0" width="13.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="886.8" y="686.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 1.12%)</title><rect x="883.8" y="659.0" width="13.2" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="886.8" y="670.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 1.12%)</title><rect x="883.8" y="643.0" width="13.2" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="886.8" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 1.12%)</title><rect x="883.8" y="627.0" width="13.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="886.8" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.12%)</title><rect x="883.8" y="611.0" width="13.2" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="886.8" y="622.0"></text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.setNativeHandle (1 samples, 0.22%)</title><rect x="897.0" y="739.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="900.0" y="750.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (19 samples, 4.25%)</title><rect x="899.6" y="739.0" width="50.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="902.6" y="750.0">ru/ma..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (18 samples, 4.03%)</title><rect x="902.3" y="723.0" width="47.5" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="905.3" y="734.0">ru/m..</text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (18 samples, 4.03%)</title><rect x="902.3" y="707.0" width="47.5" height="15" fill="#55e655" rx="2" ry="2"/>
<text x="905.3" y="718.0">org/..</text>
</g>
<g>
<title>org/rocksdb/RocksMutableObject.getNativeHandle (1 samples, 0.22%)</title><rect x="902.3" y="691.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="905.3" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (17 samples, 3.80%)</title><rect x="904.9" y="691.0" width="44.9" height="15" fill="#63f463" rx="2" ry="2"/>
<text x="907.9" y="702.0">org/..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (16 samples, 3.58%)</title><rect x="907.5" y="675.0" width="42.3" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="910.5" y="686.0">org/..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (15 samples, 3.36%)</title><rect x="910.2" y="659.0" width="39.6" height="15" fill="#eb6868" rx="2" ry="2"/>
<text x="913.2" y="670.0">Jav..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.22%)</title><rect x="910.2" y="643.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="913.2" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.22%)</title><rect x="912.8" y="643.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="915.8" y="654.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="912.8" y="627.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="915.8" y="638.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="912.8" y="611.0" width="2.7" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="915.8" y="622.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="912.8" y="595.0" width="2.7" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="915.8" y="606.0"></text>
</g>
<g>
<title>__memmove_avx_unaligned_erms (3 samples, 0.67%)</title><rect x="915.5" y="643.0" width="7.9" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="918.5" y="654.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (2 samples, 0.45%)</title><rect x="923.4" y="643.0" width="5.3" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="926.4" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (2 samples, 0.45%)</title><rect x="923.4" y="627.0" width="5.3" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="926.4" y="638.0"></text>
</g>
<g>
<title>jni_NewByteArray (6 samples, 1.34%)</title><rect x="928.7" y="643.0" width="15.8" height="15" fill="#f16f6f" rx="2" ry="2"/>
<text x="931.7" y="654.0"></text>
</g>
<g>
<title>JNIHandles::make_local(JNIEnv_*, oopDesc*) (2 samples, 0.45%)</title><rect x="928.7" y="627.0" width="5.2" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="931.7" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (4 samples, 0.89%)</title><rect x="933.9" y="627.0" width="10.6" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="936.9" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (4 samples, 0.89%)</title><rect x="933.9" y="611.0" width="10.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="936.9" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (3 samples, 0.67%)</title><rect x="933.9" y="595.0" width="8.0" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="936.9" y="606.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (1 samples, 0.22%)</title><rect x="933.9" y="579.0" width="2.7" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="936.9" y="590.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.22%)</title><rect x="933.9" y="563.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="936.9" y="574.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.22%)</title><rect x="933.9" y="547.0" width="2.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="936.9" y="558.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.22%)</title><rect x="933.9" y="531.0" width="2.7" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="936.9" y="542.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.22%)</title><rect x="933.9" y="515.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="936.9" y="526.0"></text>
</g>
<g>
<title>__handle_mm_fault (1 samples, 0.22%)</title><rect x="933.9" y="499.0" width="2.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="936.9" y="510.0"></text>
</g>
<g>
<title>alloc_pages_vma (1 samples, 0.22%)</title><rect x="933.9" y="483.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="936.9" y="494.0"></text>
</g>
<g>
<title>__alloc_pages_nodemask (1 samples, 0.22%)</title><rect x="933.9" y="467.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="936.9" y="478.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (2 samples, 0.45%)</title><rect x="936.6" y="579.0" width="5.3" height="15" fill="#ee6b6b" rx="2" ry="2"/>
<text x="939.6" y="590.0"></text>
</g>
<g>
<title>__tls_get_addr (1 samples, 0.22%)</title><rect x="941.9" y="595.0" width="2.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="944.9" y="606.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="941.9" y="579.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="944.9" y="590.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="941.9" y="563.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="944.9" y="574.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="941.9" y="547.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="944.9" y="558.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 0.45%)</title><rect x="944.5" y="643.0" width="5.3" height="15" fill="#f77777" rx="2" ry="2"/>
<text x="947.5" y="654.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.22%)</title><rect x="947.1" y="627.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="950.1" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="949.8" y="819.0" width="2.6" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="952.8" y="830.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="949.8" y="803.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="952.8" y="814.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="949.8" y="787.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="952.8" y="798.0"></text>
</g>
<g>
<title>[worker-3 tid=5672] (90 samples, 20.13%)</title><rect x="952.4" y="883.0" width="237.6" height="15" fill="#ec6969" rx="2" ry="2"/>
<text x="955.4" y="894.0">[worker-3 tid=5672]</text>
</g>
<g>
<title>[not_walkable_Java] (1 samples, 0.22%)</title><rect x="952.4" y="867.0" width="2.7" height="15" fill="#f27070" rx="2" ry="2"/>
<text x="955.4" y="878.0"></text>
</g>
<g>
<title>call_stub (1 samples, 0.22%)</title><rect x="952.4" y="851.0" width="2.7" height="15" fill="#e25c5c" rx="2" ry="2"/>
<text x="955.4" y="862.0"></text>
</g>
<g>
<title>[unknown_Java] (4 samples, 0.89%)</title><rect x="955.1" y="867.0" width="10.5" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="958.1" y="878.0"></text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (4 samples, 0.89%)</title><rect x="955.1" y="851.0" width="10.5" height="15" fill="#f87878" rx="2" ry="2"/>
<text x="958.1" y="862.0"></text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (4 samples, 0.89%)</title><rect x="955.1" y="835.0" width="10.5" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="958.1" y="846.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.89%)</title><rect x="955.1" y="819.0" width="10.5" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="958.1" y="830.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.89%)</title><rect x="955.1" y="803.0" width="10.5" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="958.1" y="814.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (4 samples, 0.89%)</title><rect x="955.1" y="787.0" width="10.5" height="15" fill="#d1d13f" rx="2" ry="2"/>
<text x="958.1" y="798.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (4 samples, 0.89%)</title><rect x="955.1" y="771.0" width="10.5" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="958.1" y="782.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (4 samples, 0.89%)</title><rect x="955.1" y="755.0" width="10.5" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="958.1" y="766.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (1 samples, 0.22%)</title><rect x="955.1" y="739.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="958.1" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (1 samples, 0.22%)</title><rect x="955.1" y="723.0" width="2.6" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="958.1" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (1 samples, 0.22%)</title><rect x="955.1" y="707.0" width="2.6" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="958.1" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (1 samples, 0.22%)</title><rect x="955.1" y="691.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="958.1" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (1 samples, 0.22%)</title><rect x="955.1" y="675.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="958.1" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (1 samples, 0.22%)</title><rect x="955.1" y="659.0" width="2.6" height="15" fill="#dddd43" rx="2" ry="2"/>
<text x="958.1" y="670.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (1 samples, 0.22%)</title><rect x="955.1" y="643.0" width="2.6" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="958.1" y="654.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.22%)</title><rect x="955.1" y="627.0" width="2.6" height="15" fill="#f47474" rx="2" ry="2"/>
<text x="958.1" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.22%)</title><rect x="955.1" y="611.0" width="2.6" height="15" fill="#f67676" rx="2" ry="2"/>
<text x="958.1" y="622.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="955.1" y="595.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="958.1" y="606.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (1 samples, 0.22%)</title><rect x="955.1" y="579.0" width="2.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="958.1" y="590.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="955.1" y="563.0" width="2.6" height="15" fill="#d4d440" rx="2" ry="2"/>
<text x="958.1" y="574.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.22%)</title><rect x="955.1" y="547.0" width="2.6" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="958.1" y="558.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="955.1" y="531.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="958.1" y="542.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="955.1" y="515.0" width="2.6" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="958.1" y="526.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.22%)</title><rect x="955.1" y="499.0" width="2.6" height="15" fill="#cfcf3e" rx="2" ry="2"/>
<text x="958.1" y="510.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (3 samples, 0.67%)</title><rect x="957.7" y="739.0" width="7.9" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="960.7" y="750.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (3 samples, 0.67%)</title><rect x="957.7" y="723.0" width="7.9" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="960.7" y="734.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (3 samples, 0.67%)</title><rect x="957.7" y="707.0" width="7.9" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="960.7" y="718.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (3 samples, 0.67%)</title><rect x="957.7" y="691.0" width="7.9" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="960.7" y="702.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (3 samples, 0.67%)</title><rect x="957.7" y="675.0" width="7.9" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="960.7" y="686.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (3 samples, 0.67%)</title><rect x="957.7" y="659.0" width="7.9" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="960.7" y="670.0"></text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (3 samples, 0.67%)</title><rect x="957.7" y="643.0" width="7.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="960.7" y="654.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (3 samples, 0.67%)</title><rect x="957.7" y="627.0" width="7.9" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="960.7" y="638.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (3 samples, 0.67%)</title><rect x="957.7" y="611.0" width="7.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="960.7" y="622.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (3 samples, 0.67%)</title><rect x="957.7" y="595.0" width="7.9" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="960.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (3 samples, 0.67%)</title><rect x="957.7" y="579.0" width="7.9" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="960.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (3 samples, 0.67%)</title><rect x="957.7" y="563.0" width="7.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="960.7" y="574.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.45%)</title><rect x="957.7" y="547.0" width="5.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="960.7" y="558.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.45%)</title><rect x="957.7" y="531.0" width="5.3" height="15" fill="#fe8080" rx="2" ry="2"/>
<text x="960.7" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.45%)</title><rect x="957.7" y="515.0" width="5.3" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="960.7" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.45%)</title><rect x="957.7" y="499.0" width="5.3" height="15" fill="#d2d23f" rx="2" ry="2"/>
<text x="960.7" y="510.0"></text>
</g>
<g>
<title>JavaCallArguments::parameters() (1 samples, 0.22%)</title><rect x="960.3" y="483.0" width="2.7" height="15" fill="#d8d841" rx="2" ry="2"/>
<text x="963.3" y="494.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="963.0" y="547.0" width="2.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="966.0" y="558.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.22%)</title><rect x="963.0" y="531.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="966.0" y="542.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="963.0" y="515.0" width="2.6" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="966.0" y="526.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="963.0" y="499.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="966.0" y="510.0"></text>
</g>
<g>
<title>HandleMark::~HandleMark() (1 samples, 0.22%)</title><rect x="963.0" y="483.0" width="2.6" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="966.0" y="494.0"></text>
</g>
<g>
<title>java/lang/Thread.run (85 samples, 19.02%)</title><rect x="965.6" y="867.0" width="224.4" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="968.6" y="878.0">java/lang/Thread.run</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor$Worker.run (85 samples, 19.02%)</title><rect x="965.6" y="851.0" width="224.4" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="968.6" y="862.0">java/util/concurrent/ThreadPoo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.runWorker (85 samples, 19.02%)</title><rect x="965.6" y="835.0" width="224.4" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="968.6" y="846.0">java/util/concurrent/ThreadPoo..</text>
</g>
<g>
<title>java/util/concurrent/ThreadPoolExecutor.getTask (5 samples, 1.12%)</title><rect x="965.6" y="819.0" width="13.2" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="968.6" y="830.0"></text>
</g>
<g>
<title>java/util/concurrent/ArrayBlockingQueue.take (5 samples, 1.12%)</title><rect x="965.6" y="803.0" width="13.2" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="968.6" y="814.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer$ConditionObject.await (4 samples, 0.89%)</title><rect x="965.6" y="787.0" width="10.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="968.6" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.fullyRelease (1 samples, 0.22%)</title><rect x="965.6" y="771.0" width="2.7" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="968.6" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.22%)</title><rect x="965.6" y="755.0" width="2.7" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="968.6" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.22%)</title><rect x="965.6" y="739.0" width="2.7" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="968.6" y="750.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.22%)</title><rect x="965.6" y="723.0" width="2.7" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="968.6" y="734.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.22%)</title><rect x="965.6" y="707.0" width="2.7" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="968.6" y="718.0"></text>
</g>
<g>
<title>__pthread_cond_signal (1 samples, 0.22%)</title><rect x="965.6" y="691.0" width="2.7" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="968.6" y="702.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="965.6" y="675.0" width="2.7" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="968.6" y="686.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="965.6" y="659.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="968.6" y="670.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.22%)</title><rect x="965.6" y="643.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="968.6" y="654.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.22%)</title><rect x="965.6" y="627.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="968.6" y="638.0"></text>
</g>
<g>
<title>futex_wake (1 samples, 0.22%)</title><rect x="965.6" y="611.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="968.6" y="622.0"></text>
</g>
<g>
<title>wake_up_q (1 samples, 0.22%)</title><rect x="965.6" y="595.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="968.6" y="606.0"></text>
</g>
<g>
<title>try_to_wake_up (1 samples, 0.22%)</title><rect x="965.6" y="579.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="968.6" y="590.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="965.6" y="563.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="968.6" y="574.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.park (3 samples, 0.67%)</title><rect x="968.3" y="771.0" width="7.9" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="971.3" y="782.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.park (3 samples, 0.67%)</title><rect x="968.3" y="755.0" width="7.9" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="971.3" y="766.0"></text>
</g>
<g>
<title>Unsafe_Park (1 samples, 0.22%)</title><rect x="968.3" y="739.0" width="2.6" height="15" fill="#e15a5a" rx="2" ry="2"/>
<text x="971.3" y="750.0"></text>
</g>
<g>
<title>__lll_unlock_wake (1 samples, 0.22%)</title><rect x="968.3" y="723.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="971.3" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="968.3" y="707.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="971.3" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="968.3" y="691.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="971.3" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.22%)</title><rect x="968.3" y="675.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="971.3" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.22%)</title><rect x="968.3" y="659.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="971.3" y="670.0"></text>
</g>
<g>
<title>get_futex_key (1 samples, 0.22%)</title><rect x="968.3" y="643.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="971.3" y="654.0"></text>
</g>
<g>
<title>[unknown] (2 samples, 0.45%)</title><rect x="970.9" y="739.0" width="5.3" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="973.9" y="750.0"></text>
</g>
<g>
<title>__GI___pthread_mutex_trylock (1 samples, 0.22%)</title><rect x="970.9" y="723.0" width="2.6" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="973.9" y="734.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.22%)</title><rect x="973.5" y="723.0" width="2.7" height="15" fill="#f87979" rx="2" ry="2"/>
<text x="976.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="973.5" y="707.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="976.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="973.5" y="691.0" width="2.7" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="976.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.22%)</title><rect x="973.5" y="675.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="976.5" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.22%)</title><rect x="973.5" y="659.0" width="2.7" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="976.5" y="670.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.22%)</title><rect x="973.5" y="643.0" width="2.7" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="976.5" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.22%)</title><rect x="973.5" y="627.0" width="2.7" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="976.5" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.22%)</title><rect x="973.5" y="611.0" width="2.7" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="976.5" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.22%)</title><rect x="973.5" y="595.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="976.5" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.22%)</title><rect x="973.5" y="579.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="976.5" y="590.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/ReentrantLock.unlock (1 samples, 0.22%)</title><rect x="976.2" y="787.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.2" y="798.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.release (1 samples, 0.22%)</title><rect x="976.2" y="771.0" width="2.6" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="979.2" y="782.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/AbstractQueuedSynchronizer.unparkSuccessor (1 samples, 0.22%)</title><rect x="976.2" y="755.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="979.2" y="766.0"></text>
</g>
<g>
<title>java/util/concurrent/locks/LockSupport.unpark (1 samples, 0.22%)</title><rect x="976.2" y="739.0" width="2.6" height="15" fill="#6dfe6d" rx="2" ry="2"/>
<text x="979.2" y="750.0"></text>
</g>
<g>
<title>jdk/internal/misc/Unsafe.unpark (1 samples, 0.22%)</title><rect x="976.2" y="723.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="979.2" y="734.0"></text>
</g>
<g>
<title>Unsafe_Unpark (1 samples, 0.22%)</title><rect x="976.2" y="707.0" width="2.6" height="15" fill="#f27171" rx="2" ry="2"/>
<text x="979.2" y="718.0"></text>
</g>
<g>
<title>pthread_mutex_lock (1 samples, 0.22%)</title><rect x="976.2" y="691.0" width="2.6" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="979.2" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl$$Lambda$66/712804772.run (80 samples, 17.90%)</title><rect x="978.8" y="819.0" width="211.2" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="981.8" y="830.0">ru/mail/polis/service/basta1..</text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyAsyncHttpServerImpl.lambda$putValueByKey$2 (80 samples, 17.90%)</title><rect x="978.8" y="803.0" width="211.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="981.8" y="814.0">ru/mail/polis/service/basta1..</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (9 samples, 2.01%)</title><rect x="981.5" y="787.0" width="23.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.5" y="798.0">o..</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (9 samples, 2.01%)</title><rect x="981.5" y="771.0" width="23.7" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="984.5" y="782.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 2.01%)</title><rect x="981.5" y="755.0" width="23.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="984.5" y="766.0">o..</text>
</g>
<g>
<title>one/nio/net/Session.write (9 samples, 2.01%)</title><rect x="981.5" y="739.0" width="23.7" height="15" fill="#60f160" rx="2" ry="2"/>
<text x="984.5" y="750.0">o..</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (9 samples, 2.01%)</title><rect x="981.5" y="723.0" width="23.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="984.5" y="734.0">o..</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (9 samples, 2.01%)</title><rect x="981.5" y="707.0" width="23.7" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="984.5" y="718.0">o..</text>
</g>
<g>
<title>__send (9 samples, 2.01%)</title><rect x="981.5" y="691.0" width="23.7" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="984.5" y="702.0">_..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (8 samples, 1.79%)</title><rect x="984.1" y="675.0" width="21.1" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="987.1" y="686.0">e..</text>
</g>
<g>
<title>do_syscall_64 (8 samples, 1.79%)</title><rect x="984.1" y="659.0" width="21.1" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="987.1" y="670.0">d..</text>
</g>
<g>
<title>__x64_sys_sendto (8 samples, 1.79%)</title><rect x="984.1" y="643.0" width="21.1" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="987.1" y="654.0">_..</text>
</g>
<g>
<title>__sys_sendto (8 samples, 1.79%)</title><rect x="984.1" y="627.0" width="21.1" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="987.1" y="638.0">_..</text>
</g>
<g>
<title>sock_sendmsg (8 samples, 1.79%)</title><rect x="984.1" y="611.0" width="21.1" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="987.1" y="622.0">s..</text>
</g>
<g>
<title>inet6_sendmsg (7 samples, 1.57%)</title><rect x="984.1" y="595.0" width="18.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="987.1" y="606.0"></text>
</g>
<g>
<title>tcp_sendmsg (7 samples, 1.57%)</title><rect x="984.1" y="579.0" width="18.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="987.1" y="590.0"></text>
</g>
<g>
<title>tcp_sendmsg_locked (7 samples, 1.57%)</title><rect x="984.1" y="563.0" width="18.5" height="15" fill="#f69200" rx="2" ry="2"/>
<text x="987.1" y="574.0"></text>
</g>
<g>
<title>sk_stream_alloc_skb (1 samples, 0.22%)</title><rect x="984.1" y="547.0" width="2.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="987.1" y="558.0"></text>
</g>
<g>
<title>__alloc_skb (1 samples, 0.22%)</title><rect x="984.1" y="531.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="987.1" y="542.0"></text>
</g>
<g>
<title>__ksize (1 samples, 0.22%)</title><rect x="984.1" y="515.0" width="2.6" height="15" fill="#f18d00" rx="2" ry="2"/>
<text x="987.1" y="526.0"></text>
</g>
<g>
<title>tcp_push (6 samples, 1.34%)</title><rect x="986.7" y="547.0" width="15.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="989.7" y="558.0"></text>
</g>
<g>
<title>__tcp_push_pending_frames (6 samples, 1.34%)</title><rect x="986.7" y="531.0" width="15.9" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="989.7" y="542.0"></text>
</g>
<g>
<title>tcp_write_xmit (6 samples, 1.34%)</title><rect x="986.7" y="515.0" width="15.9" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="989.7" y="526.0"></text>
</g>
<g>
<title>__tcp_transmit_skb (5 samples, 1.12%)</title><rect x="986.7" y="499.0" width="13.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="989.7" y="510.0"></text>
</g>
<g>
<title>ip_queue_xmit (5 samples, 1.12%)</title><rect x="986.7" y="483.0" width="13.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="989.7" y="494.0"></text>
</g>
<g>
<title>__ip_queue_xmit (5 samples, 1.12%)</title><rect x="986.7" y="467.0" width="13.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="989.7" y="478.0"></text>
</g>
<g>
<title>ip_local_out (5 samples, 1.12%)</title><rect x="986.7" y="451.0" width="13.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="989.7" y="462.0"></text>
</g>
<g>
<title>ip_output (5 samples, 1.12%)</title><rect x="986.7" y="435.0" width="13.2" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="989.7" y="446.0"></text>
</g>
<g>
<title>ip_finish_output (5 samples, 1.12%)</title><rect x="986.7" y="419.0" width="13.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="989.7" y="430.0"></text>
</g>
<g>
<title>__ip_finish_output (5 samples, 1.12%)</title><rect x="986.7" y="403.0" width="13.2" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="989.7" y="414.0"></text>
</g>
<g>
<title>ip_finish_output2 (5 samples, 1.12%)</title><rect x="986.7" y="387.0" width="13.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="989.7" y="398.0"></text>
</g>
<g>
<title>__local_bh_enable_ip (4 samples, 0.89%)</title><rect x="989.4" y="371.0" width="10.5" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="992.4" y="382.0"></text>
</g>
<g>
<title>do_softirq.part.20 (4 samples, 0.89%)</title><rect x="989.4" y="355.0" width="10.5" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="992.4" y="366.0"></text>
</g>
<g>
<title>do_softirq_own_stack (4 samples, 0.89%)</title><rect x="989.4" y="339.0" width="10.5" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="992.4" y="350.0"></text>
</g>
<g>
<title>__softirqentry_text_start (4 samples, 0.89%)</title><rect x="989.4" y="323.0" width="10.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="992.4" y="334.0"></text>
</g>
<g>
<title>net_rx_action (4 samples, 0.89%)</title><rect x="989.4" y="307.0" width="10.5" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="992.4" y="318.0"></text>
</g>
<g>
<title>process_backlog (4 samples, 0.89%)</title><rect x="989.4" y="291.0" width="10.5" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="992.4" y="302.0"></text>
</g>
<g>
<title>__netif_receive_skb (4 samples, 0.89%)</title><rect x="989.4" y="275.0" width="10.5" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="992.4" y="286.0"></text>
</g>
<g>
<title>__netif_receive_skb_one_core (4 samples, 0.89%)</title><rect x="989.4" y="259.0" width="10.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="992.4" y="270.0"></text>
</g>
<g>
<title>ip_rcv (4 samples, 0.89%)</title><rect x="989.4" y="243.0" width="10.5" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="992.4" y="254.0"></text>
</g>
<g>
<title>ip_rcv_finish (4 samples, 0.89%)</title><rect x="989.4" y="227.0" width="10.5" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="992.4" y="238.0"></text>
</g>
<g>
<title>ip_local_deliver (4 samples, 0.89%)</title><rect x="989.4" y="211.0" width="10.5" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="992.4" y="222.0"></text>
</g>
<g>
<title>ip_local_deliver_finish (4 samples, 0.89%)</title><rect x="989.4" y="195.0" width="10.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="992.4" y="206.0"></text>
</g>
<g>
<title>ip_protocol_deliver_rcu (4 samples, 0.89%)</title><rect x="989.4" y="179.0" width="10.5" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="992.4" y="190.0"></text>
</g>
<g>
<title>tcp_v4_rcv (4 samples, 0.89%)</title><rect x="989.4" y="163.0" width="10.5" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="992.4" y="174.0"></text>
</g>
<g>
<title>security_sock_rcv_skb (1 samples, 0.22%)</title><rect x="989.4" y="147.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="992.4" y="158.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (3 samples, 0.67%)</title><rect x="992.0" y="147.0" width="7.9" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="995.0" y="158.0"></text>
</g>
<g>
<title>ktime_get_seconds (1 samples, 0.22%)</title><rect x="992.0" y="131.0" width="2.7" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="995.0" y="142.0"></text>
</g>
<g>
<title>tcp_rcv_established (2 samples, 0.45%)</title><rect x="994.7" y="131.0" width="5.2" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="997.7" y="142.0"></text>
</g>
<g>
<title>tcp_data_queue (1 samples, 0.22%)</title><rect x="994.7" y="115.0" width="2.6" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="997.7" y="126.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.22%)</title><rect x="994.7" y="99.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="997.7" y="110.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.22%)</title><rect x="994.7" y="83.0" width="2.6" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="997.7" y="94.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.22%)</title><rect x="994.7" y="67.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="997.7" y="78.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.22%)</title><rect x="994.7" y="51.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="997.7" y="62.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="994.7" y="35.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="997.7" y="46.0"></text>
</g>
<g>
<title>tcp_data_ready (1 samples, 0.22%)</title><rect x="997.3" y="115.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1000.3" y="126.0"></text>
</g>
<g>
<title>sock_def_readable (1 samples, 0.22%)</title><rect x="997.3" y="99.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1000.3" y="110.0"></text>
</g>
<g>
<title>__wake_up_sync_key (1 samples, 0.22%)</title><rect x="997.3" y="83.0" width="2.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="1000.3" y="94.0"></text>
</g>
<g>
<title>__wake_up_common_lock (1 samples, 0.22%)</title><rect x="997.3" y="67.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1000.3" y="78.0"></text>
</g>
<g>
<title>__lock_text_start (1 samples, 0.22%)</title><rect x="997.3" y="51.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1000.3" y="62.0"></text>
</g>
<g>
<title>sk_reset_timer (1 samples, 0.22%)</title><rect x="999.9" y="499.0" width="2.7" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1002.9" y="510.0"></text>
</g>
<g>
<title>security_socket_sendmsg (1 samples, 0.22%)</title><rect x="1002.6" y="595.0" width="2.6" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1005.6" y="606.0"></text>
</g>
<g>
<title>apparmor_socket_sendmsg (1 samples, 0.22%)</title><rect x="1002.6" y="579.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1005.6" y="590.0"></text>
</g>
<g>
<title>aa_sock_msg_perm (1 samples, 0.22%)</title><rect x="1002.6" y="563.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1005.6" y="574.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyDAORocksDB.upsert (69 samples, 15.44%)</title><rect x="1005.2" y="787.0" width="182.2" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="1008.2" y="798.0">ru/mail/polis/dao/basta1..</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (69 samples, 15.44%)</title><rect x="1005.2" y="771.0" width="182.2" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="1008.2" y="782.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>org/rocksdb/RocksDB.put (69 samples, 15.44%)</title><rect x="1005.2" y="755.0" width="182.2" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="1008.2" y="766.0">org/rocksdb/RocksDB.put</text>
</g>
<g>
<title>Java_org_rocksdb_RocksDB_put__J_3BII_3BII (50 samples, 11.19%)</title><rect x="1005.2" y="739.0" width="132.0" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1008.2" y="750.0">Java_org_rocksdb..</text>
</g>
<g>
<title>rocksdb_put_helper(JNIEnv_*, rocksdb::DB*, rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, _jbyteArray*, int, int, _jbyteArray*, int, int) (49 samples, 10.96%)</title><rect x="1007.9" y="723.0" width="129.3" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1010.9" y="734.0">rocksdb_put_help..</text>
</g>
<g>
<title>JavaThread::check_and_handle_async_exceptions(bool) (1 samples, 0.22%)</title><rect x="1007.9" y="707.0" width="2.6" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1010.9" y="718.0"></text>
</g>
<g>
<title>jni_GetByteArrayRegion (1 samples, 0.22%)</title><rect x="1010.5" y="707.0" width="2.6" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1013.5" y="718.0"></text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (47 samples, 10.51%)</title><rect x="1013.1" y="707.0" width="124.1" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1016.1" y="718.0">rocksdb::DB::Pu..</text>
</g>
<g>
<title>rocksdb::DBImpl::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (47 samples, 10.51%)</title><rect x="1013.1" y="691.0" width="124.1" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1016.1" y="702.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DB::Put(rocksdb::WriteOptions const&amp;, rocksdb::ColumnFamilyHandle*, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (47 samples, 10.51%)</title><rect x="1013.1" y="675.0" width="124.1" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1016.1" y="686.0">rocksdb::DB::Pu..</text>
</g>
<g>
<title>rocksdb::DBImpl::Write(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*) (47 samples, 10.51%)</title><rect x="1013.1" y="659.0" width="124.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1016.1" y="670.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteImpl(rocksdb::WriteOptions const&amp;, rocksdb::WriteBatch*, rocksdb::WriteCallback*, unsigned long*, unsigned long, bool, unsigned long*, unsigned long, rocksdb::PreReleaseCallback*) (47 samples, 10.51%)</title><rect x="1013.1" y="643.0" width="124.1" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1016.1" y="654.0">rocksdb::DBImpl..</text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteThread::WriteGroup const&amp;, rocksdb::log::Writer*, unsigned long*, bool, bool, unsigned long) (3 samples, 0.67%)</title><rect x="1015.8" y="627.0" width="7.9" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1018.8" y="638.0"></text>
</g>
<g>
<title>rocksdb::DBImpl::WriteToWAL(rocksdb::WriteBatch const&amp;, rocksdb::log::Writer*, unsigned long*, unsigned long*) (3 samples, 0.67%)</title><rect x="1015.8" y="611.0" width="7.9" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1018.8" y="622.0"></text>
</g>
<g>
<title>rocksdb::log::Writer::AddRecord(rocksdb::Slice const&amp;) (3 samples, 0.67%)</title><rect x="1015.8" y="595.0" width="7.9" height="15" fill="#cdcd3d" rx="2" ry="2"/>
<text x="1018.8" y="606.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (1 samples, 0.22%)</title><rect x="1015.8" y="579.0" width="2.6" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1018.8" y="590.0"></text>
</g>
<g>
<title>rocksdb::WritableFileWriter::Flush() (2 samples, 0.45%)</title><rect x="1018.4" y="579.0" width="5.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1021.4" y="590.0"></text>
</g>
<g>
<title>rocksdb::PosixWritableFile::GetFileSize() (1 samples, 0.22%)</title><rect x="1021.1" y="563.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1024.1" y="574.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="1021.1" y="547.0" width="2.6" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1024.1" y="558.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="1021.1" y="531.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1024.1" y="542.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="1021.1" y="515.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1024.1" y="526.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::WriteGroup&amp;, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, bool) (7 samples, 1.57%)</title><rect x="1023.7" y="627.0" width="18.5" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1026.7" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (6 samples, 1.34%)</title><rect x="1023.7" y="611.0" width="15.8" height="15" fill="#e4e445" rx="2" ry="2"/>
<text x="1026.7" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (6 samples, 1.34%)</title><rect x="1023.7" y="595.0" width="15.8" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1026.7" y="606.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (6 samples, 1.34%)</title><rect x="1023.7" y="579.0" width="15.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1026.7" y="590.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (6 samples, 1.34%)</title><rect x="1023.7" y="563.0" width="15.8" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1026.7" y="574.0"></text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (5 samples, 1.12%)</title><rect x="1026.3" y="547.0" width="13.2" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1029.3" y="558.0"></text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;false&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (4 samples, 0.89%)</title><rect x="1029.0" y="531.0" width="10.5" height="15" fill="#cbcb3d" rx="2" ry="2"/>
<text x="1032.0" y="542.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (4 samples, 0.89%)</title><rect x="1029.0" y="515.0" width="10.5" height="15" fill="#ef6d6d" rx="2" ry="2"/>
<text x="1032.0" y="526.0"></text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (3 samples, 0.67%)</title><rect x="1029.0" y="499.0" width="7.9" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1032.0" y="510.0"></text>
</g>
<g>
<title>TLS init function for rocksdb::perf_context (1 samples, 0.22%)</title><rect x="1029.0" y="483.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1032.0" y="494.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="1031.6" y="483.0" width="5.3" height="15" fill="#cece3e" rx="2" ry="2"/>
<text x="1034.6" y="494.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="1031.6" y="467.0" width="5.3" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1034.6" y="478.0"></text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="1031.6" y="451.0" width="2.7" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1034.6" y="462.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (1 samples, 0.22%)</title><rect x="1031.6" y="435.0" width="2.7" height="15" fill="#ea6666" rx="2" ry="2"/>
<text x="1034.6" y="446.0"></text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;1097844ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)2, 1097844ul&gt;::oop_access_barrier(void*) (1 samples, 0.22%)</title><rect x="1031.6" y="419.0" width="2.7" height="15" fill="#dede43" rx="2" ry="2"/>
<text x="1034.6" y="430.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="1034.3" y="451.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1037.3" y="462.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.22%)</title><rect x="1034.3" y="435.0" width="2.6" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1037.3" y="446.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="1034.3" y="419.0" width="2.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1037.3" y="430.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="1034.3" y="403.0" width="2.6" height="15" fill="#c9c93c" rx="2" ry="2"/>
<text x="1037.3" y="414.0"></text>
</g>
<g>
<title>AbstractInterpreter::size_top_interpreter_activation(Method*) (1 samples, 0.22%)</title><rect x="1034.3" y="387.0" width="2.6" height="15" fill="#d7d741" rx="2" ry="2"/>
<text x="1037.3" y="398.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="1036.9" y="499.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1039.9" y="510.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="1036.9" y="483.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1039.9" y="494.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="1036.9" y="467.0" width="2.6" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1039.9" y="478.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="1039.5" y="611.0" width="2.7" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="1042.5" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="1039.5" y="595.0" width="2.7" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1042.5" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="1039.5" y="579.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1042.5" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::InsertInto(rocksdb::WriteThread::Writer*, unsigned long, rocksdb::ColumnFamilyMemTables*, rocksdb::FlushScheduler*, rocksdb::TrimHistoryScheduler*, bool, unsigned long, rocksdb::DB*, bool, bool, unsigned long, bool, bool) (26 samples, 5.82%)</title><rect x="1042.2" y="627.0" width="68.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1045.2" y="638.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::WriteBatch::Iterate(rocksdb::WriteBatch::Handler*) const (26 samples, 5.82%)</title><rect x="1042.2" y="611.0" width="68.6" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1045.2" y="622.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::WriteBatchInternal::Iterate(rocksdb::WriteBatch const*, rocksdb::WriteBatch::Handler*, unsigned long, unsigned long) (25 samples, 5.59%)</title><rect x="1044.8" y="595.0" width="66.0" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1047.8" y="606.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCF(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) (24 samples, 5.37%)</title><rect x="1044.8" y="579.0" width="63.4" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1047.8" y="590.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) (24 samples, 5.37%)</title><rect x="1044.8" y="563.0" width="63.4" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1047.8" y="574.0">rocksdb..</text>
</g>
<g>
<title>rocksdb::MemTable::Add(unsigned long, rocksdb::ValueType, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, bool, rocksdb::MemTablePostProcessInfo*, void**) (23 samples, 5.15%)</title><rect x="1047.4" y="547.0" width="60.8" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1050.4" y="558.0">rocksd..</text>
</g>
<g>
<title>rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::InsertConcurrently(char const*) (23 samples, 5.15%)</title><rect x="1047.4" y="531.0" width="60.8" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1050.4" y="542.0">rocksd..</text>
</g>
<g>
<title>bool rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Insert&lt;true&gt;(char const*, rocksdb::InlineSkipList&lt;rocksdb::MemTableRep::KeyComparator const&amp;&gt;::Splice*, bool) (23 samples, 5.15%)</title><rect x="1047.4" y="515.0" width="60.8" height="15" fill="#d3d33f" rx="2" ry="2"/>
<text x="1050.4" y="526.0">bool r..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (20 samples, 4.47%)</title><rect x="1050.1" y="499.0" width="52.8" height="15" fill="#f57575" rx="2" ry="2"/>
<text x="1053.1" y="510.0">/tmp/..</text>
</g>
<g>
<title>/tmp/librocksdbjni67181584128751767.so (19 samples, 4.25%)</title><rect x="1052.7" y="483.0" width="50.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1055.7" y="494.0">/tmp/..</text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, rocksdb::Slice const&amp;) const (19 samples, 4.25%)</title><rect x="1052.7" y="467.0" width="50.2" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1055.7" y="478.0">rocks..</text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (18 samples, 4.03%)</title><rect x="1052.7" y="451.0" width="47.5" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1055.7" y="462.0">rock..</text>
</g>
<g>
<title>JNIEnv_::CallIntMethod(_jobject*, _jmethodID*, ...) (2 samples, 0.45%)</title><rect x="1055.4" y="435.0" width="5.2" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1058.4" y="446.0"></text>
</g>
<g>
<title>jni_CallIntMethodV (2 samples, 0.45%)</title><rect x="1055.4" y="419.0" width="5.2" height="15" fill="#e76363" rx="2" ry="2"/>
<text x="1058.4" y="430.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (2 samples, 0.45%)</title><rect x="1055.4" y="403.0" width="5.2" height="15" fill="#f97a7a" rx="2" ry="2"/>
<text x="1058.4" y="414.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (1 samples, 0.22%)</title><rect x="1055.4" y="387.0" width="2.6" height="15" fill="#e2e244" rx="2" ry="2"/>
<text x="1058.4" y="398.0"></text>
</g>
<g>
<title>methodHandle::~methodHandle() (1 samples, 0.22%)</title><rect x="1058.0" y="387.0" width="2.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1061.0" y="398.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (9 samples, 2.01%)</title><rect x="1060.6" y="435.0" width="23.8" height="15" fill="#caca3c" rx="2" ry="2"/>
<text x="1063.6" y="446.0">J..</text>
</g>
<g>
<title>jni_CallVoidMethodV (9 samples, 2.01%)</title><rect x="1060.6" y="419.0" width="23.8" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="1063.6" y="430.0">j..</text>
</g>
<g>
<title>Klass::method_at_vtable(int) (1 samples, 0.22%)</title><rect x="1063.3" y="403.0" width="2.6" height="15" fill="#c8c83c" rx="2" ry="2"/>
<text x="1066.3" y="414.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (7 samples, 1.57%)</title><rect x="1065.9" y="403.0" width="18.5" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1068.9" y="414.0"></text>
</g>
<g>
<title>JNI_ArgumentPusherVaArg::iterate(unsigned long) (4 samples, 0.89%)</title><rect x="1068.6" y="387.0" width="10.5" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1071.6" y="398.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (2 samples, 0.45%)</title><rect x="1079.1" y="387.0" width="5.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1082.1" y="398.0"></text>
</g>
<g>
<title>JavaCallWrapper::JavaCallWrapper(methodHandle const&amp;, Handle, JavaValue*, Thread*) (1 samples, 0.22%)</title><rect x="1079.1" y="371.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1082.1" y="382.0"></text>
</g>
<g>
<title>JNIHandleBlock::allocate_block(Thread*) (1 samples, 0.22%)</title><rect x="1079.1" y="355.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1082.1" y="366.0"></text>
</g>
<g>
<title>JavaThread::is_Java_thread() const (1 samples, 0.22%)</title><rect x="1081.8" y="371.0" width="2.6" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1084.8" y="382.0"></text>
</g>
<g>
<title>__lll_lock_wait (1 samples, 0.22%)</title><rect x="1084.4" y="435.0" width="2.6" height="15" fill="#ed6b6b" rx="2" ry="2"/>
<text x="1087.4" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="1084.4" y="419.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1087.4" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="1084.4" y="403.0" width="2.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1087.4" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.22%)</title><rect x="1084.4" y="387.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1087.4" y="398.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.22%)</title><rect x="1084.4" y="371.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1087.4" y="382.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.22%)</title><rect x="1084.4" y="355.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1087.4" y="366.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.22%)</title><rect x="1084.4" y="339.0" width="2.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1087.4" y="350.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.22%)</title><rect x="1084.4" y="323.0" width="2.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1087.4" y="334.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.22%)</title><rect x="1084.4" y="307.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1087.4" y="318.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.22%)</title><rect x="1084.4" y="291.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1087.4" y="302.0"></text>
</g>
<g>
<title>__lll_unlock_wake (5 samples, 1.12%)</title><rect x="1087.0" y="435.0" width="13.2" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1090.0" y="446.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (5 samples, 1.12%)</title><rect x="1087.0" y="419.0" width="13.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1090.0" y="430.0"></text>
</g>
<g>
<title>do_syscall_64 (5 samples, 1.12%)</title><rect x="1087.0" y="403.0" width="13.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1090.0" y="414.0"></text>
</g>
<g>
<title>__x64_sys_futex (5 samples, 1.12%)</title><rect x="1087.0" y="387.0" width="13.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1090.0" y="398.0"></text>
</g>
<g>
<title>do_futex (5 samples, 1.12%)</title><rect x="1087.0" y="371.0" width="13.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1090.0" y="382.0"></text>
</g>
<g>
<title>futex_wake (5 samples, 1.12%)</title><rect x="1087.0" y="355.0" width="13.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1090.0" y="366.0"></text>
</g>
<g>
<title>wake_up_q (5 samples, 1.12%)</title><rect x="1087.0" y="339.0" width="13.2" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1090.0" y="350.0"></text>
</g>
<g>
<title>try_to_wake_up (5 samples, 1.12%)</title><rect x="1087.0" y="323.0" width="13.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1090.0" y="334.0"></text>
</g>
<g>
<title>__lock_text_start (5 samples, 1.12%)</title><rect x="1087.0" y="307.0" width="13.2" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1090.0" y="318.0"></text>
</g>
<g>
<title>rocksdb::JniCallback::getJniEnv(unsigned char*) const (1 samples, 0.22%)</title><rect x="1100.2" y="451.0" width="2.7" height="15" fill="#d6d640" rx="2" ry="2"/>
<text x="1103.2" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTable::KeyComparator::operator()(char const*, char const*) const (2 samples, 0.45%)</title><rect x="1102.9" y="499.0" width="5.3" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1105.9" y="510.0"></text>
</g>
<g>
<title>rocksdb::BaseComparatorJniCallback::Compare(rocksdb::Slice const&amp;, rocksdb::Slice const&amp;) const (2 samples, 0.45%)</title><rect x="1102.9" y="483.0" width="5.3" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1105.9" y="494.0"></text>
</g>
<g>
<title>JNIEnv_::CallVoidMethod(_jobject*, _jmethodID*, ...) (1 samples, 0.22%)</title><rect x="1102.9" y="467.0" width="2.6" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1105.9" y="478.0"></text>
</g>
<g>
<title>jni_CallVoidMethodV (1 samples, 0.22%)</title><rect x="1102.9" y="451.0" width="2.6" height="15" fill="#e25b5b" rx="2" ry="2"/>
<text x="1105.9" y="462.0"></text>
</g>
<g>
<title>jni_invoke_nonstatic(JNIEnv_*, JavaValue*, _jobject*, JNICallType, _jmethodID*, JNI_ArgumentPusher*, Thread*) [clone .constprop.218] (1 samples, 0.22%)</title><rect x="1102.9" y="435.0" width="2.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1105.9" y="446.0"></text>
</g>
<g>
<title>JavaCalls::call_helper(JavaValue*, methodHandle const&amp;, JavaCallArguments*, Thread*) (1 samples, 0.22%)</title><rect x="1102.9" y="419.0" width="2.6" height="15" fill="#dcdc42" rx="2" ry="2"/>
<text x="1105.9" y="430.0"></text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.22%)</title><rect x="1105.5" y="467.0" width="2.7" height="15" fill="#e66161" rx="2" ry="2"/>
<text x="1108.5" y="478.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.22%)</title><rect x="1105.5" y="451.0" width="2.7" height="15" fill="#e0e044" rx="2" ry="2"/>
<text x="1108.5" y="462.0"></text>
</g>
<g>
<title>rocksdb::MemTableInserter::PutCFImpl(unsigned int, rocksdb::Slice const&amp;, rocksdb::Slice const&amp;, rocksdb::ValueType) [clone .plt] (1 samples, 0.22%)</title><rect x="1108.2" y="579.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1111.2" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (8 samples, 1.79%)</title><rect x="1110.8" y="627.0" width="21.1" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1113.8" y="638.0">r..</text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="1129.3" y="611.0" width="2.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="1132.3" y="622.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="1129.3" y="595.0" width="2.6" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1132.3" y="606.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="1129.3" y="579.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1132.3" y="590.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CompleteParallelMemTableWriter(rocksdb::WriteThread::Writer*) (1 samples, 0.22%)</title><rect x="1131.9" y="627.0" width="2.7" height="15" fill="#dbdb42" rx="2" ry="2"/>
<text x="1134.9" y="638.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::AwaitState(rocksdb::WriteThread::Writer*, unsigned char, rocksdb::WriteThread::AdaptationContext*) (1 samples, 0.22%)</title><rect x="1131.9" y="611.0" width="2.7" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1134.9" y="622.0"></text>
</g>
<g>
<title>rocksdb::WriteThread::CreateMissingNewerLinks(rocksdb::WriteThread::Writer*) (1 samples, 0.22%)</title><rect x="1134.6" y="627.0" width="2.6" height="15" fill="#dfdf43" rx="2" ry="2"/>
<text x="1137.6" y="638.0"></text>
</g>
<g>
<title>[unknown] (3 samples, 0.67%)</title><rect x="1137.2" y="739.0" width="7.9" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1140.2" y="750.0"></text>
</g>
<g>
<title>__libc_write (2 samples, 0.45%)</title><rect x="1137.2" y="723.0" width="5.3" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1140.2" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.45%)</title><rect x="1137.2" y="707.0" width="5.3" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1140.2" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="1137.2" y="691.0" width="5.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1140.2" y="702.0"></text>
</g>
<g>
<title>__x64_sys_write (2 samples, 0.45%)</title><rect x="1137.2" y="675.0" width="5.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1140.2" y="686.0"></text>
</g>
<g>
<title>ksys_write (2 samples, 0.45%)</title><rect x="1137.2" y="659.0" width="5.3" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1140.2" y="670.0"></text>
</g>
<g>
<title>vfs_write (2 samples, 0.45%)</title><rect x="1137.2" y="643.0" width="5.3" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1140.2" y="654.0"></text>
</g>
<g>
<title>__vfs_write (2 samples, 0.45%)</title><rect x="1137.2" y="627.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1140.2" y="638.0"></text>
</g>
<g>
<title>new_sync_write (2 samples, 0.45%)</title><rect x="1137.2" y="611.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1140.2" y="622.0"></text>
</g>
<g>
<title>ext4_file_write_iter (2 samples, 0.45%)</title><rect x="1137.2" y="595.0" width="5.3" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1140.2" y="606.0"></text>
</g>
<g>
<title>__generic_file_write_iter (2 samples, 0.45%)</title><rect x="1137.2" y="579.0" width="5.3" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="1140.2" y="590.0"></text>
</g>
<g>
<title>current_time (1 samples, 0.22%)</title><rect x="1137.2" y="563.0" width="2.6" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="1140.2" y="574.0"></text>
</g>
<g>
<title>generic_perform_write (1 samples, 0.22%)</title><rect x="1139.8" y="563.0" width="2.7" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1142.8" y="574.0"></text>
</g>
<g>
<title>ext4_da_write_end (1 samples, 0.22%)</title><rect x="1139.8" y="547.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1142.8" y="558.0"></text>
</g>
<g>
<title>generic_write_end (1 samples, 0.22%)</title><rect x="1139.8" y="531.0" width="2.7" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="1142.8" y="542.0"></text>
</g>
<g>
<title>__mark_inode_dirty (1 samples, 0.22%)</title><rect x="1139.8" y="515.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1142.8" y="526.0"></text>
</g>
<g>
<title>ext4_dirty_inode (1 samples, 0.22%)</title><rect x="1139.8" y="499.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1142.8" y="510.0"></text>
</g>
<g>
<title>ext4_mark_inode_dirty (1 samples, 0.22%)</title><rect x="1139.8" y="483.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1142.8" y="494.0"></text>
</g>
<g>
<title>ext4_reserve_inode_write (1 samples, 0.22%)</title><rect x="1139.8" y="467.0" width="2.7" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1142.8" y="478.0"></text>
</g>
<g>
<title>__ext4_get_inode_loc (1 samples, 0.22%)</title><rect x="1139.8" y="451.0" width="2.7" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="1142.8" y="462.0"></text>
</g>
<g>
<title>ext4_get_group_desc (1 samples, 0.22%)</title><rect x="1139.8" y="435.0" width="2.7" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="1142.8" y="446.0"></text>
</g>
<g>
<title>pthread_cond_wait@@GLIBC_2.3.2 (1 samples, 0.22%)</title><rect x="1142.5" y="723.0" width="2.6" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1145.5" y="734.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (1 samples, 0.22%)</title><rect x="1142.5" y="707.0" width="2.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1145.5" y="718.0"></text>
</g>
<g>
<title>do_syscall_64 (1 samples, 0.22%)</title><rect x="1142.5" y="691.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1145.5" y="702.0"></text>
</g>
<g>
<title>__x64_sys_futex (1 samples, 0.22%)</title><rect x="1142.5" y="675.0" width="2.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1145.5" y="686.0"></text>
</g>
<g>
<title>do_futex (1 samples, 0.22%)</title><rect x="1142.5" y="659.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1145.5" y="670.0"></text>
</g>
<g>
<title>futex_wait (1 samples, 0.22%)</title><rect x="1142.5" y="643.0" width="2.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1145.5" y="654.0"></text>
</g>
<g>
<title>futex_wait_queue_me (1 samples, 0.22%)</title><rect x="1142.5" y="627.0" width="2.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1145.5" y="638.0"></text>
</g>
<g>
<title>schedule (1 samples, 0.22%)</title><rect x="1142.5" y="611.0" width="2.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1145.5" y="622.0"></text>
</g>
<g>
<title>__sched_text_start (1 samples, 0.22%)</title><rect x="1142.5" y="595.0" width="2.6" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1145.5" y="606.0"></text>
</g>
<g>
<title>finish_task_switch (1 samples, 0.22%)</title><rect x="1142.5" y="579.0" width="2.6" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="1145.5" y="590.0"></text>
</g>
<g>
<title>__pthread_cond_signal (2 samples, 0.45%)</title><rect x="1145.1" y="739.0" width="5.3" height="15" fill="#f06e6e" rx="2" ry="2"/>
<text x="1148.1" y="750.0"></text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.45%)</title><rect x="1145.1" y="723.0" width="5.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1148.1" y="734.0"></text>
</g>
<g>
<title>do_syscall_64 (2 samples, 0.45%)</title><rect x="1145.1" y="707.0" width="5.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1148.1" y="718.0"></text>
</g>
<g>
<title>__x64_sys_futex (2 samples, 0.45%)</title><rect x="1145.1" y="691.0" width="5.3" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1148.1" y="702.0"></text>
</g>
<g>
<title>do_futex (2 samples, 0.45%)</title><rect x="1145.1" y="675.0" width="5.3" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1148.1" y="686.0"></text>
</g>
<g>
<title>futex_wake (2 samples, 0.45%)</title><rect x="1145.1" y="659.0" width="5.3" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1148.1" y="670.0"></text>
</g>
<g>
<title>wake_up_q (2 samples, 0.45%)</title><rect x="1145.1" y="643.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1148.1" y="654.0"></text>
</g>
<g>
<title>try_to_wake_up (2 samples, 0.45%)</title><rect x="1145.1" y="627.0" width="5.3" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1148.1" y="638.0"></text>
</g>
<g>
<title>__lock_text_start (2 samples, 0.45%)</title><rect x="1145.1" y="611.0" width="5.3" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1148.1" y="622.0"></text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (14 samples, 3.13%)</title><rect x="1150.4" y="739.0" width="37.0" height="15" fill="#5ced5c" rx="2" ry="2"/>
<text x="1153.4" y="750.0">ru/..</text>
</g>
<g>
<title>ru/mail/polis/dao/basta123/MyComparator.compare (13 samples, 2.91%)</title><rect x="1150.4" y="723.0" width="34.3" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="1153.4" y="734.0">ru..</text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.22%)</title><rect x="1150.4" y="707.0" width="2.6" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="1153.4" y="718.0"></text>
</g>
<g>
<title>com/google/common/primitives/SignedBytes$LexicographicalComparator.compare (1 samples, 0.22%)</title><rect x="1150.4" y="691.0" width="2.6" height="15" fill="#5ff05f" rx="2" ry="2"/>
<text x="1153.4" y="702.0"></text>
</g>
<g>
<title>org/rocksdb/AbstractSlice.data (12 samples, 2.68%)</title><rect x="1153.0" y="707.0" width="31.7" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1156.0" y="718.0">or..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (12 samples, 2.68%)</title><rect x="1153.0" y="691.0" width="31.7" height="15" fill="#5aeb5a" rx="2" ry="2"/>
<text x="1156.0" y="702.0">or..</text>
</g>
<g>
<title>org/rocksdb/Slice.data0 (12 samples, 2.68%)</title><rect x="1153.0" y="675.0" width="31.7" height="15" fill="#5dee5d" rx="2" ry="2"/>
<text x="1156.0" y="686.0">or..</text>
</g>
<g>
<title>Java_org_rocksdb_Slice_data0 (12 samples, 2.68%)</title><rect x="1153.0" y="659.0" width="31.7" height="15" fill="#ee6c6c" rx="2" ry="2"/>
<text x="1156.0" y="670.0">Ja..</text>
</g>
<g>
<title>jni_ExceptionCheck (1 samples, 0.22%)</title><rect x="1153.0" y="643.0" width="2.7" height="15" fill="#e86363" rx="2" ry="2"/>
<text x="1156.0" y="654.0"></text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 0.22%)</title><rect x="1153.0" y="627.0" width="2.7" height="15" fill="#d5d540" rx="2" ry="2"/>
<text x="1156.0" y="638.0"></text>
</g>
<g>
<title>jni_NewByteArray (8 samples, 1.79%)</title><rect x="1155.7" y="643.0" width="21.1" height="15" fill="#f37272" rx="2" ry="2"/>
<text x="1158.7" y="654.0">j..</text>
</g>
<g>
<title>AccessInternal::PostRuntimeDispatch&lt;G1BarrierSet::AccessBarrier&lt;5292148ul, G1BarrierSet&gt;, (AccessInternal::BarrierType)0, 5292148ul&gt;::oop_access_barrier(void*, oopDesc*) (1 samples, 0.22%)</title><rect x="1161.0" y="627.0" width="2.6" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1164.0" y="638.0"></text>
</g>
<g>
<title>TypeArrayKlass::allocate_common(int, bool, Thread*) (5 samples, 1.12%)</title><rect x="1163.6" y="627.0" width="13.2" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1166.6" y="638.0"></text>
</g>
<g>
<title>CollectedHeap::array_allocate(Klass*, int, int, bool, Thread*) (5 samples, 1.12%)</title><rect x="1163.6" y="611.0" width="13.2" height="15" fill="#d9d941" rx="2" ry="2"/>
<text x="1166.6" y="622.0"></text>
</g>
<g>
<title>MemAllocator::allocate() const (5 samples, 1.12%)</title><rect x="1163.6" y="595.0" width="13.2" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1166.6" y="606.0"></text>
</g>
<g>
<title>ObjArrayAllocator::initialize(HeapWord*) const (2 samples, 0.45%)</title><rect x="1166.2" y="579.0" width="5.3" height="15" fill="#dada42" rx="2" ry="2"/>
<text x="1169.2" y="590.0"></text>
</g>
<g>
<title>page_fault (1 samples, 0.22%)</title><rect x="1168.9" y="563.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1171.9" y="574.0"></text>
</g>
<g>
<title>do_page_fault (1 samples, 0.22%)</title><rect x="1168.9" y="547.0" width="2.6" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1171.9" y="558.0"></text>
</g>
<g>
<title>__do_page_fault (1 samples, 0.22%)</title><rect x="1168.9" y="531.0" width="2.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1171.9" y="542.0"></text>
</g>
<g>
<title>handle_mm_fault (1 samples, 0.22%)</title><rect x="1168.9" y="515.0" width="2.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="1171.9" y="526.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned (1 samples, 0.22%)</title><rect x="1171.5" y="579.0" width="2.7" height="15" fill="#fc7f7f" rx="2" ry="2"/>
<text x="1174.5" y="590.0"></text>
</g>
<g>
<title>__memset_avx2_unaligned_erms (1 samples, 0.22%)</title><rect x="1174.2" y="579.0" width="2.6" height="15" fill="#e35d5d" rx="2" ry="2"/>
<text x="1177.2" y="590.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (3 samples, 0.67%)</title><rect x="1176.8" y="643.0" width="7.9" height="15" fill="#f47373" rx="2" ry="2"/>
<text x="1179.8" y="654.0"></text>
</g>
<g>
<title>HandleMark::pop_and_restore() (1 samples, 0.22%)</title><rect x="1176.8" y="627.0" width="2.6" height="15" fill="#e3e345" rx="2" ry="2"/>
<text x="1179.8" y="638.0"></text>
</g>
<g>
<title>ThreadInVMfromNative::~ThreadInVMfromNative() (1 samples, 0.22%)</title><rect x="1179.4" y="627.0" width="2.7" height="15" fill="#e1e144" rx="2" ry="2"/>
<text x="1182.4" y="638.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 0.22%)</title><rect x="1182.1" y="627.0" width="2.6" height="15" fill="#fe8181" rx="2" ry="2"/>
<text x="1185.1" y="638.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 0.22%)</title><rect x="1184.7" y="723.0" width="2.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="1187.7" y="734.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 0.22%)</title><rect x="1184.7" y="707.0" width="2.7" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1187.7" y="718.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 0.22%)</title><rect x="1184.7" y="691.0" width="2.7" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1187.7" y="702.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/Utils.getByteBufferFromByteArray (1 samples, 0.22%)</title><rect x="1187.4" y="787.0" width="2.6" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="1190.4" y="798.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.22%)</title><rect x="1187.4" y="771.0" width="2.6" height="15" fill="#52e352" rx="2" ry="2"/>
<text x="1190.4" y="782.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.wrap (1 samples, 0.22%)</title><rect x="1187.4" y="755.0" width="2.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1190.4" y="766.0"></text>
</g>
<g>
<title>java/nio/HeapByteBuffer.&lt;init&gt; (1 samples, 0.22%)</title><rect x="1187.4" y="739.0" width="2.6" height="15" fill="#51e251" rx="2" ry="2"/>
<text x="1190.4" y="750.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.&lt;init&gt; (1 samples, 0.22%)</title><rect x="1187.4" y="723.0" width="2.6" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="1190.4" y="734.0"></text>
</g>
<g>
<title>java/nio/Buffer.&lt;init&gt; (1 samples, 0.22%)</title><rect x="1187.4" y="707.0" width="2.6" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1190.4" y="718.0"></text>
</g>
<g>
<title>java/nio/ByteBuffer.position (1 samples, 0.22%)</title><rect x="1187.4" y="691.0" width="2.6" height="15" fill="#58e958" rx="2" ry="2"/>
<text x="1190.4" y="702.0"></text>
</g>
</g>
</svg>
