<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="950" onload="init(evt)" viewBox="0 0 1200 950" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
	}

	// search
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)", "");
			if (term != null) {
				search(term)
			}
		} else {
			reset_search();
			searching = 0;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		var re = new RegExp(term);
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0" y="0" width="100%" height="100%" fill="rgb(240,240,220)"/>
<text id="title" x="600" y="24">Flame Graph</text>
<text id="details" x="10" y="933"> </text>
<text id="unzoom" x="10" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090" y="24">Search</text>
<text id="matched" x="1090" y="933"> </text>
<g id="frames">
<g>
<title>all (67 samples, 100.00%)</title><rect x="10.0" y="899.0" width="1180.0" height="15" fill="#e76262" rx="2" ry="2"/>
<text x="13.0" y="910.0">all</text>
</g>
<g>
<title>one/nio/server/SelectorThread.run (67 samples, 100.00%)</title><rect x="10.0" y="883.0" width="1180.0" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="13.0" y="894.0">one/nio/server/SelectorThread.run</text>
</g>
<g>
<title>one/nio/net/NativeSelector.select (19 samples, 28.36%)</title><rect x="10.0" y="867.0" width="334.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="878.0">one/nio/net/NativeSelector.select</text>
</g>
<g>
<title>one/nio/net/NativeSelector.epollWait (19 samples, 28.36%)</title><rect x="10.0" y="851.0" width="334.6" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="13.0" y="862.0">one/nio/net/NativeSelector.epollWait</text>
</g>
<g>
<title>[unknown] (18 samples, 26.87%)</title><rect x="10.0" y="835.0" width="317.0" height="15" fill="#f97b7b" rx="2" ry="2"/>
<text x="13.0" y="846.0">[unknown]</text>
</g>
<g>
<title>epoll_wait (18 samples, 26.87%)</title><rect x="10.0" y="819.0" width="317.0" height="15" fill="#e86464" rx="2" ry="2"/>
<text x="13.0" y="830.0">epoll_wait</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (18 samples, 26.87%)</title><rect x="10.0" y="803.0" width="317.0" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="13.0" y="814.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (18 samples, 26.87%)</title><rect x="10.0" y="787.0" width="317.0" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="13.0" y="798.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_epoll_wait (17 samples, 25.37%)</title><rect x="27.6" y="771.0" width="299.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="30.6" y="782.0">__x64_sys_epoll_wait</text>
</g>
<g>
<title>do_epoll_wait (17 samples, 25.37%)</title><rect x="27.6" y="755.0" width="299.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="30.6" y="766.0">do_epoll_wait</text>
</g>
<g>
<title>ep_poll (17 samples, 25.37%)</title><rect x="27.6" y="739.0" width="299.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="30.6" y="750.0">ep_poll</text>
</g>
<g>
<title>schedule_hrtimeout_range (17 samples, 25.37%)</title><rect x="27.6" y="723.0" width="299.4" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="30.6" y="734.0">schedule_hrtimeout_range</text>
</g>
<g>
<title>schedule_hrtimeout_range_clock (17 samples, 25.37%)</title><rect x="27.6" y="707.0" width="299.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="30.6" y="718.0">schedule_hrtimeout_range_clock</text>
</g>
<g>
<title>schedule (17 samples, 25.37%)</title><rect x="27.6" y="691.0" width="299.4" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="30.6" y="702.0">schedule</text>
</g>
<g>
<title>__sched_text_start (17 samples, 25.37%)</title><rect x="27.6" y="675.0" width="299.4" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="30.6" y="686.0">__sched_text_start</text>
</g>
<g>
<title>finish_task_switch (16 samples, 23.88%)</title><rect x="45.2" y="659.0" width="281.8" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="48.2" y="670.0">finish_task_switch</text>
</g>
<g>
<title>clock_gettime@plt (1 samples, 1.49%)</title><rect x="327.0" y="835.0" width="17.6" height="15" fill="#e96565" rx="2" ry="2"/>
<text x="330.0" y="846.0"></text>
</g>
<g>
<title>one/nio/net/Session.process (48 samples, 71.64%)</title><rect x="344.6" y="867.0" width="845.4" height="15" fill="#6bfc6b" rx="2" ry="2"/>
<text x="347.6" y="878.0">one/nio/net/Session.process</text>
</g>
<g>
<title>one/nio/http/HttpSession.processRead (48 samples, 71.64%)</title><rect x="344.6" y="851.0" width="845.4" height="15" fill="#59ea59" rx="2" ry="2"/>
<text x="347.6" y="862.0">one/nio/http/HttpSession.processRead</text>
</g>
<g>
<title>one/nio/http/HttpSession.processHttpBuffer (39 samples, 58.21%)</title><rect x="344.6" y="835.0" width="686.9" height="15" fill="#6afb6a" rx="2" ry="2"/>
<text x="347.6" y="846.0">one/nio/http/HttpSession.processHttpBuffer</text>
</g>
<g>
<title>one/nio/http/HttpSession.handleParsedRequest (38 samples, 56.72%)</title><rect x="362.2" y="819.0" width="669.3" height="15" fill="#65f665" rx="2" ry="2"/>
<text x="365.2" y="830.0">one/nio/http/HttpSession.handleParsedRequest</text>
</g>
<g>
<title>one/nio/http/HttpServer.handleRequest (38 samples, 56.72%)</title><rect x="362.2" y="803.0" width="669.3" height="15" fill="#6cfd6c" rx="2" ry="2"/>
<text x="365.2" y="814.0">one/nio/http/HttpServer.handleRequest</text>
</g>
<g>
<title>RequestHandler0_statusCheckMethod.handleRequest (38 samples, 56.72%)</title><rect x="362.2" y="787.0" width="669.3" height="15" fill="#57e857" rx="2" ry="2"/>
<text x="365.2" y="798.0">RequestHandler0_statusCheckMethod.handleRequest</text>
</g>
<g>
<title>one/nio/http/HttpSession.sendResponse (37 samples, 55.22%)</title><rect x="362.2" y="771.0" width="651.7" height="15" fill="#53e453" rx="2" ry="2"/>
<text x="365.2" y="782.0">one/nio/http/HttpSession.sendResponse</text>
</g>
<g>
<title>one/nio/http/HttpSession.writeResponse (37 samples, 55.22%)</title><rect x="362.2" y="755.0" width="651.7" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="365.2" y="766.0">one/nio/http/HttpSession.writeResponse</text>
</g>
<g>
<title>one/nio/http/Response.toBytes (1 samples, 1.49%)</title><rect x="362.2" y="739.0" width="17.7" height="15" fill="#66f766" rx="2" ry="2"/>
<text x="365.2" y="750.0"></text>
</g>
<g>
<title>one/nio/net/Session.write (36 samples, 53.73%)</title><rect x="379.9" y="739.0" width="634.0" height="15" fill="#62f362" rx="2" ry="2"/>
<text x="382.9" y="750.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session.write (36 samples, 53.73%)</title><rect x="379.9" y="723.0" width="634.0" height="15" fill="#54e554" rx="2" ry="2"/>
<text x="382.9" y="734.0">one/nio/net/Session.write</text>
</g>
<g>
<title>one/nio/net/Session$ArrayQueueItem.write (36 samples, 53.73%)</title><rect x="379.9" y="707.0" width="634.0" height="15" fill="#50e150" rx="2" ry="2"/>
<text x="382.9" y="718.0">one/nio/net/Session$ArrayQueueItem.write</text>
</g>
<g>
<title>one/nio/net/NativeSocket.write (36 samples, 53.73%)</title><rect x="379.9" y="691.0" width="634.0" height="15" fill="#61f261" rx="2" ry="2"/>
<text x="382.9" y="702.0">one/nio/net/NativeSocket.write</text>
</g>
<g>
<title>__libc_send (36 samples, 53.73%)</title><rect x="379.9" y="675.0" width="634.0" height="15" fill="#fa7b7b" rx="2" ry="2"/>
<text x="382.9" y="686.0">__libc_send</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (35 samples, 52.24%)</title><rect x="397.5" y="659.0" width="616.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="400.5" y="670.0">entry_SYSCALL_64_after_hwframe</text>
</g>
<g>
<title>do_syscall_64 (35 samples, 52.24%)</title><rect x="397.5" y="643.0" width="616.4" height="15" fill="#f99500" rx="2" ry="2"/>
<text x="400.5" y="654.0">do_syscall_64</text>
</g>
<g>
<title>__x64_sys_sendto (35 samples, 52.24%)</title><rect x="397.5" y="627.0" width="616.4" height="15" fill="#f89400" rx="2" ry="2"/>
<text x="400.5" y="638.0">__x64_sys_sendto</text>
</g>
<g>
<title>__sys_sendto (35 samples, 52.24%)</title><rect x="397.5" y="611.0" width="616.4" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="400.5" y="622.0">__sys_sendto</text>
</g>
<g>
<title>sock_sendmsg (35 samples, 52.24%)</title><rect x="397.5" y="595.0" width="616.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="400.5" y="606.0">sock_sendmsg</text>
</g>
<g>
<title>inet6_sendmsg (35 samples, 52.24%)</title><rect x="397.5" y="579.0" width="616.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="400.5" y="590.0">inet6_sendmsg</text>
</g>
<g>
<title>tcp_sendmsg (35 samples, 52.24%)</title><rect x="397.5" y="563.0" width="616.4" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="400.5" y="574.0">tcp_sendmsg</text>
</g>
<g>
<title>tcp_push (2 samples, 2.99%)</title><rect x="397.5" y="547.0" width="35.2" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="400.5" y="558.0">tcp..</text>
</g>
<g>
<title>tcp_sendmsg_locked (33 samples, 49.25%)</title><rect x="432.7" y="547.0" width="581.2" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="435.7" y="558.0">tcp_sendmsg_locked</text>
</g>
<g>
<title>tcp_push (33 samples, 49.25%)</title><rect x="432.7" y="531.0" width="581.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="435.7" y="542.0">tcp_push</text>
</g>
<g>
<title>__tcp_push_pending_frames (33 samples, 49.25%)</title><rect x="432.7" y="515.0" width="581.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="435.7" y="526.0">__tcp_push_pending_frames</text>
</g>
<g>
<title>tcp_write_xmit (33 samples, 49.25%)</title><rect x="432.7" y="499.0" width="581.2" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="435.7" y="510.0">tcp_write_xmit</text>
</g>
<g>
<title>__tcp_transmit_skb (32 samples, 47.76%)</title><rect x="432.7" y="483.0" width="563.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="435.7" y="494.0">__tcp_transmit_skb</text>
</g>
<g>
<title>ip_queue_xmit (32 samples, 47.76%)</title><rect x="432.7" y="467.0" width="563.6" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="435.7" y="478.0">ip_queue_xmit</text>
</g>
<g>
<title>__ip_queue_xmit (32 samples, 47.76%)</title><rect x="432.7" y="451.0" width="563.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="435.7" y="462.0">__ip_queue_xmit</text>
</g>
<g>
<title>ip_local_out (32 samples, 47.76%)</title><rect x="432.7" y="435.0" width="563.6" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="435.7" y="446.0">ip_local_out</text>
</g>
<g>
<title>ip_output (32 samples, 47.76%)</title><rect x="432.7" y="419.0" width="563.6" height="15" fill="#e48000" rx="2" ry="2"/>
<text x="435.7" y="430.0">ip_output</text>
</g>
<g>
<title>ip_finish_output (32 samples, 47.76%)</title><rect x="432.7" y="403.0" width="563.6" height="15" fill="#ef8b00" rx="2" ry="2"/>
<text x="435.7" y="414.0">ip_finish_output</text>
</g>
<g>
<title>__ip_finish_output (32 samples, 47.76%)</title><rect x="432.7" y="387.0" width="563.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="435.7" y="398.0">__ip_finish_output</text>
</g>
<g>
<title>ip_finish_output2 (32 samples, 47.76%)</title><rect x="432.7" y="371.0" width="563.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="435.7" y="382.0">ip_finish_output2</text>
</g>
<g>
<title>__local_bh_enable_ip (30 samples, 44.78%)</title><rect x="467.9" y="355.0" width="528.4" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="470.9" y="366.0">__local_bh_enable_ip</text>
</g>
<g>
<title>do_softirq.part.20 (30 samples, 44.78%)</title><rect x="467.9" y="339.0" width="528.4" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="470.9" y="350.0">do_softirq.part.20</text>
</g>
<g>
<title>do_softirq_own_stack (30 samples, 44.78%)</title><rect x="467.9" y="323.0" width="528.4" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="470.9" y="334.0">do_softirq_own_stack</text>
</g>
<g>
<title>__softirqentry_text_start (30 samples, 44.78%)</title><rect x="467.9" y="307.0" width="528.4" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="470.9" y="318.0">__softirqentry_text_start</text>
</g>
<g>
<title>net_rx_action (29 samples, 43.28%)</title><rect x="485.5" y="291.0" width="510.8" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="488.5" y="302.0">net_rx_action</text>
</g>
<g>
<title>process_backlog (29 samples, 43.28%)</title><rect x="485.5" y="275.0" width="510.8" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="488.5" y="286.0">process_backlog</text>
</g>
<g>
<title>__netif_receive_skb (29 samples, 43.28%)</title><rect x="485.5" y="259.0" width="510.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="488.5" y="270.0">__netif_receive_skb</text>
</g>
<g>
<title>__netif_receive_skb_one_core (29 samples, 43.28%)</title><rect x="485.5" y="243.0" width="510.8" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="488.5" y="254.0">__netif_receive_skb_one_core</text>
</g>
<g>
<title>ip_rcv (29 samples, 43.28%)</title><rect x="485.5" y="227.0" width="510.8" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="488.5" y="238.0">ip_rcv</text>
</g>
<g>
<title>ip_rcv_core.isra.20 (1 samples, 1.49%)</title><rect x="485.5" y="211.0" width="17.6" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="488.5" y="222.0"></text>
</g>
<g>
<title>ip_rcv_finish (28 samples, 41.79%)</title><rect x="503.1" y="211.0" width="493.2" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="506.1" y="222.0">ip_rcv_finish</text>
</g>
<g>
<title>ip_local_deliver (28 samples, 41.79%)</title><rect x="503.1" y="195.0" width="493.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="506.1" y="206.0">ip_local_deliver</text>
</g>
<g>
<title>ip_local_deliver_finish (28 samples, 41.79%)</title><rect x="503.1" y="179.0" width="493.2" height="15" fill="#ea8600" rx="2" ry="2"/>
<text x="506.1" y="190.0">ip_local_deliver_finish</text>
</g>
<g>
<title>ip_protocol_deliver_rcu (28 samples, 41.79%)</title><rect x="503.1" y="163.0" width="493.2" height="15" fill="#f08c00" rx="2" ry="2"/>
<text x="506.1" y="174.0">ip_protocol_deliver_rcu</text>
</g>
<g>
<title>tcp_v4_rcv (28 samples, 41.79%)</title><rect x="503.1" y="147.0" width="493.2" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="506.1" y="158.0">tcp_v4_rcv</text>
</g>
<g>
<title>__inet_lookup_established (1 samples, 1.49%)</title><rect x="503.1" y="131.0" width="17.6" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="506.1" y="142.0"></text>
</g>
<g>
<title>tcp_v4_do_rcv (27 samples, 40.30%)</title><rect x="520.7" y="131.0" width="475.6" height="15" fill="#f28e00" rx="2" ry="2"/>
<text x="523.7" y="142.0">tcp_v4_do_rcv</text>
</g>
<g>
<title>tcp_rcv_established (27 samples, 40.30%)</title><rect x="520.7" y="115.0" width="475.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="523.7" y="126.0">tcp_rcv_established</text>
</g>
<g>
<title>tcp_ack (1 samples, 1.49%)</title><rect x="538.4" y="99.0" width="17.6" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="541.4" y="110.0"></text>
</g>
<g>
<title>tcp_clean_rtx_queue (1 samples, 1.49%)</title><rect x="538.4" y="83.0" width="17.6" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="541.4" y="94.0"></text>
</g>
<g>
<title>tcp_data_ready (24 samples, 35.82%)</title><rect x="556.0" y="99.0" width="422.7" height="15" fill="#fc9800" rx="2" ry="2"/>
<text x="559.0" y="110.0">tcp_data_ready</text>
</g>
<g>
<title>sock_def_readable (24 samples, 35.82%)</title><rect x="556.0" y="83.0" width="422.7" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="559.0" y="94.0">sock_def_readable</text>
</g>
<g>
<title>__wake_up_sync_key (24 samples, 35.82%)</title><rect x="556.0" y="67.0" width="422.7" height="15" fill="#f38f00" rx="2" ry="2"/>
<text x="559.0" y="78.0">__wake_up_sync_key</text>
</g>
<g>
<title>__wake_up_common_lock (24 samples, 35.82%)</title><rect x="556.0" y="51.0" width="422.7" height="15" fill="#ec8800" rx="2" ry="2"/>
<text x="559.0" y="62.0">__wake_up_common_lock</text>
</g>
<g>
<title>__lock_text_start (24 samples, 35.82%)</title><rect x="556.0" y="35.0" width="422.7" height="15" fill="#f59100" rx="2" ry="2"/>
<text x="559.0" y="46.0">__lock_text_start</text>
</g>
<g>
<title>tcp_queue_rcv (1 samples, 1.49%)</title><rect x="978.7" y="99.0" width="17.6" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="981.7" y="110.0"></text>
</g>
<g>
<title>tcp_rate_skb_sent (1 samples, 1.49%)</title><rect x="996.3" y="483.0" width="17.6" height="15" fill="#e58100" rx="2" ry="2"/>
<text x="999.3" y="494.0"></text>
</g>
<g>
<title>ru/mail/polis/service/basta123/MyHttpServerImpl.statusCheckMethod (1 samples, 1.49%)</title><rect x="1013.9" y="771.0" width="17.6" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1016.9" y="782.0"></text>
</g>
<g>
<title>one/nio/http/Response.&lt;init&gt; (1 samples, 1.49%)</title><rect x="1013.9" y="755.0" width="17.6" height="15" fill="#64f564" rx="2" ry="2"/>
<text x="1016.9" y="766.0"></text>
</g>
<g>
<title>one/nio/net/Session.read (9 samples, 13.43%)</title><rect x="1031.5" y="835.0" width="158.5" height="15" fill="#56e756" rx="2" ry="2"/>
<text x="1034.5" y="846.0">one/nio/net/Session...</text>
</g>
<g>
<title>one/nio/net/NativeSocket.read (9 samples, 13.43%)</title><rect x="1031.5" y="819.0" width="158.5" height="15" fill="#68f968" rx="2" ry="2"/>
<text x="1034.5" y="830.0">one/nio/net/NativeSo..</text>
</g>
<g>
<title>Java_one_nio_net_NativeSocket_read (4 samples, 5.97%)</title><rect x="1031.5" y="803.0" width="70.4" height="15" fill="#fb7d7d" rx="2" ry="2"/>
<text x="1034.5" y="814.0">Java_one..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 1.49%)</title><rect x="1049.1" y="787.0" width="17.6" height="15" fill="#d0d03e" rx="2" ry="2"/>
<text x="1052.1" y="798.0"></text>
</g>
<g>
<title>swapgs_restore_regs_and_return_to_usermode (1 samples, 1.49%)</title><rect x="1049.1" y="771.0" width="17.6" height="15" fill="#e37f00" rx="2" ry="2"/>
<text x="1052.1" y="782.0"></text>
</g>
<g>
<title>prepare_exit_to_usermode (1 samples, 1.49%)</title><rect x="1049.1" y="755.0" width="17.6" height="15" fill="#e78300" rx="2" ry="2"/>
<text x="1052.1" y="766.0"></text>
</g>
<g>
<title>exit_to_usermode_loop (1 samples, 1.49%)</title><rect x="1049.1" y="739.0" width="17.6" height="15" fill="#e17d00" rx="2" ry="2"/>
<text x="1052.1" y="750.0"></text>
</g>
<g>
<title>jni_SetByteArrayRegion (2 samples, 2.99%)</title><rect x="1066.7" y="787.0" width="35.2" height="15" fill="#e45e5e" rx="2" ry="2"/>
<text x="1069.7" y="798.0">jni..</text>
</g>
<g>
<title>ThreadStateTransition::transition_from_native(JavaThread*, JavaThreadState) [clone .constprop.222] (1 samples, 1.49%)</title><rect x="1066.7" y="771.0" width="17.6" height="15" fill="#cccc3d" rx="2" ry="2"/>
<text x="1069.7" y="782.0"></text>
</g>
<g>
<title>check_bounds(int, int, int, Thread*) (1 samples, 1.49%)</title><rect x="1084.3" y="771.0" width="17.6" height="15" fill="#fc7e7e" rx="2" ry="2"/>
<text x="1087.3" y="782.0"></text>
</g>
<g>
<title>__GI___recv (4 samples, 5.97%)</title><rect x="1101.9" y="803.0" width="70.5" height="15" fill="#e56060" rx="2" ry="2"/>
<text x="1104.9" y="814.0">__GI___r..</text>
</g>
<g>
<title>entry_SYSCALL_64_after_hwframe (4 samples, 5.97%)</title><rect x="1101.9" y="787.0" width="70.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1104.9" y="798.0">entry_SY..</text>
</g>
<g>
<title>do_syscall_64 (4 samples, 5.97%)</title><rect x="1101.9" y="771.0" width="70.5" height="15" fill="#f49000" rx="2" ry="2"/>
<text x="1104.9" y="782.0">do_sysca..</text>
</g>
<g>
<title>__x64_sys_recvfrom (4 samples, 5.97%)</title><rect x="1101.9" y="755.0" width="70.5" height="15" fill="#ed8900" rx="2" ry="2"/>
<text x="1104.9" y="766.0">__x64_sy..</text>
</g>
<g>
<title>__sys_recvfrom (4 samples, 5.97%)</title><rect x="1101.9" y="739.0" width="70.5" height="15" fill="#fe9a00" rx="2" ry="2"/>
<text x="1104.9" y="750.0">__sys_re..</text>
</g>
<g>
<title>sock_recvmsg (4 samples, 5.97%)</title><rect x="1101.9" y="723.0" width="70.5" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1104.9" y="734.0">sock_rec..</text>
</g>
<g>
<title>inet6_recvmsg (2 samples, 2.99%)</title><rect x="1101.9" y="707.0" width="35.3" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1104.9" y="718.0">ine..</text>
</g>
<g>
<title>tcp_recvmsg (2 samples, 2.99%)</title><rect x="1101.9" y="691.0" width="35.3" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1104.9" y="702.0">tcp..</text>
</g>
<g>
<title>skb_copy_datagram_iter (2 samples, 2.99%)</title><rect x="1101.9" y="675.0" width="35.3" height="15" fill="#f79300" rx="2" ry="2"/>
<text x="1104.9" y="686.0">skb..</text>
</g>
<g>
<title>__skb_datagram_iter (1 samples, 1.49%)</title><rect x="1119.6" y="659.0" width="17.6" height="15" fill="#fd9900" rx="2" ry="2"/>
<text x="1122.6" y="670.0"></text>
</g>
<g>
<title>simple_copy_to_iter (1 samples, 1.49%)</title><rect x="1119.6" y="643.0" width="17.6" height="15" fill="#eb8700" rx="2" ry="2"/>
<text x="1122.6" y="654.0"></text>
</g>
<g>
<title>check_stack_object (1 samples, 1.49%)</title><rect x="1119.6" y="627.0" width="17.6" height="15" fill="#ee8a00" rx="2" ry="2"/>
<text x="1122.6" y="638.0"></text>
</g>
<g>
<title>security_socket_recvmsg (2 samples, 2.99%)</title><rect x="1137.2" y="707.0" width="35.2" height="15" fill="#fb9700" rx="2" ry="2"/>
<text x="1140.2" y="718.0">sec..</text>
</g>
<g>
<title>apparmor_socket_recvmsg (2 samples, 2.99%)</title><rect x="1137.2" y="691.0" width="35.2" height="15" fill="#e68200" rx="2" ry="2"/>
<text x="1140.2" y="702.0">app..</text>
</g>
<g>
<title>aa_sock_msg_perm (2 samples, 2.99%)</title><rect x="1137.2" y="675.0" width="35.2" height="15" fill="#e27e00" rx="2" ry="2"/>
<text x="1140.2" y="686.0">aa_..</text>
</g>
<g>
<title>aa_sk_perm (2 samples, 2.99%)</title><rect x="1137.2" y="659.0" width="35.2" height="15" fill="#e98500" rx="2" ry="2"/>
<text x="1140.2" y="670.0">aa_..</text>
</g>
<g>
<title>aa_label_sk_perm.part.4 (2 samples, 2.99%)</title><rect x="1137.2" y="643.0" width="35.2" height="15" fill="#fa9600" rx="2" ry="2"/>
<text x="1140.2" y="654.0">aa_..</text>
</g>
<g>
<title>aa_profile_af_perm (2 samples, 2.99%)</title><rect x="1137.2" y="627.0" width="35.2" height="15" fill="#e88400" rx="2" ry="2"/>
<text x="1140.2" y="638.0">aa_..</text>
</g>
<g>
<title>jni_SetByteArrayRegion (1 samples, 1.49%)</title><rect x="1172.4" y="803.0" width="17.6" height="15" fill="#ed6a6a" rx="2" ry="2"/>
<text x="1175.4" y="814.0"></text>
</g>
</g>
</svg>
